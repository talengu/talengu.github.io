<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>荷塘·清韵</title>
  
  
  <link href="/public/atom.xml" rel="self"/>
  
  <link href="https://talengu.github.io/public/"/>
  <updated>2019-07-25T04:00:00.000Z</updated>
  <id>https://talengu.github.io/public/</id>
  
  <author>
    <name>小成</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>模版文件</title>
    <link href="https://talengu.github.io/public/2019/07/25/template/"/>
    <id>https://talengu.github.io/public/2019/07/25/template/</id>
    <published>2019-07-25T04:00:00.000Z</published>
    <updated>2019-07-25T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>文件head，设置标题、日期、分类、标签、评论、版权、是否使用公式，如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 模版文件</span><br><span class="line">date: 2019-07-25 12:00:00</span><br><span class="line">updated: 2019-07-25 12:00:00</span><br><span class="line">categories:</span><br><span class="line">  - 博客搭建</span><br><span class="line">  - 模版文件</span><br><span class="line">tags:</span><br><span class="line">  - Writing</span><br><span class="line">comments: true</span><br><span class="line">copyright: true</span><br><span class="line">math: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p><strong>前言</strong><br>前言部分，说明文章的写作意图，包括其涉及的背景，内容及其他文章关系。</p><p>本文为写作模版文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前言一般放到主页，可利用 &lt;!-- more --&gt; 隔断。</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1-构思与起草"><a href="#1-构思与起草" class="headerlink" title="1 构思与起草"></a>1 构思与起草</h2><ul><li>对文章的阅读群体、写作意图和反馈（Audience Intention Response AIR）要有一个清楚的认识。照顾沟通对象的需要、你的意图（信息）以及希望的反馈。</li><li>在思维导图上，放上你需要的关键名词，然后依次在它基础上添加动词，在加上形容词。最后以一定顺序组织你将要阐述的信息。比如重要性排序，对比优势劣势，方案的不同层面，时间上逻辑上的因果性等等。</li></ul><h2 id="2-写作检查"><a href="#2-写作检查" class="headerlink" title="2 写作检查"></a>2 写作检查</h2><ul><li>保证信息的准确性，时间地点等信息的准确。</li><li>确保语法规范性</li><li>段落写作<ul><li>主题句，核心思想</li><li>使用关联词，但勿滥<ul><li>表示转折：虽然，尽管，但是，相反的是，另一方面</li><li>对已阐述观点的强调：此外，与此同时，除此以外，再补充一点</li><li>阐述结果：结果是，相应的结果是，因此</li></ul></li><li>简单的句子 15-25</li></ul></li><li>精心选择词语<ul><li>同一个意思，换一下说法</li><li>少用名词，多用动词。我们想用名词表达意思，采用动名组合，或者一个意群搭配上动词会更有力。</li><li>多用主动动词，少用被动动词</li></ul></li><li>核对标点符号，逗号，与分号。英文的话，检查一下拼写</li><li>注意行为的语气</li><li>保持连贯性，使用一种统一的方式表达。</li></ul><h2 id="3-主体内容"><a href="#3-主体内容" class="headerlink" title="3 主体内容"></a>3 主体内容</h2><p>文章的主要内容，包括你对跟进过程或发现成果的描述，以数据、事实证据以及其他的信息支撑主要内容。在你的论说中，你应该把对客观事实的描述和写作者对事情的主管阐述区分开来。</p><p>当你在报告中对一个观点进行陈述的时候，你需要记住以下几点：</p><ul><li>清晰的呈现事实</li><li>有逻辑地提出论据</li><li>引用相关的语录、简明易懂的事实和例子来支持你的论点</li><li>给出支持或反对该行为的理由</li><li>始终围绕主要观点进行讨论</li><li>处理好重要的假设关系</li><li>区分说明（具体阐述）和论证（有理有据）</li></ul><h3 id="3-1-图"><a href="#3-1-图" class="headerlink" title="3.1 图"></a>3.1 图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![GDP](http://www.stats.gov.cn/tjsj/zxfb/201902/W020190228338754231076_r75.png)</span><br><span class="line">&lt;div align=&apos;center&apos;&gt; &lt;b&gt;图1 2018年国内生产总值及其增速度&lt;/b&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这两行代码生成下面的图和标题。</p><p><img src="http://www.stats.gov.cn/tjsj/zxfb/201902/W020190228338754231076_r75.png" alt="GDP"></p><p><a href="http://www.stats.gov.cn/tjsj/zxfb/201902/t20190228_1651265.html" title="2018年国民经济和社会发展统计公报" target="_blank" rel="noopener">图1</a>是2014-2018年的GDP和增长速度<a href="[国家统计局2018年国民经济和社会发展统计公报](http://www.stats.gov.cn/tjsj/zxfb/201902/t20190228_1651265.html)">^1</a>，图中数据反应出国内生产总值在2014-2018年度均平稳增长。</p><h3 id="3-2-表"><a href="#3-2-表" class="headerlink" title="3.2 表"></a>3.2 表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=&apos;center&apos;&gt; &lt;b&gt;表1 2018年年末人口数及其构成&lt;/b&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">| 指标       | 年末数（万人） | 比重（%） |</span><br><span class="line">| ---------- | -------------- | --------- |</span><br><span class="line">| 全国总人口 | 139538         | 100.0     |</span><br><span class="line">| 其中：城镇 | 83137          | 59.58     |</span><br><span class="line">| 乡村       | 56401          | 40.42     |</span><br></pre></td></tr></table></figure><p>这两行代码生成下面的表和标题。</p><div align="center"> <b>表1 2018年年末人口数及其构成</b></div><table><thead><tr><th>指标</th><th>年末数（万人）</th><th>比重（%）</th></tr></thead><tbody><tr><td>全国总人口</td><td>139538</td><td>100.0</td></tr><tr><td>城镇</td><td>83137</td><td>59.58</td></tr><tr><td>乡村</td><td>56401</td><td>40.42</td></tr></tbody></table><p>从表1中得出，2018年年末城镇人口占总人口的59.58%，乡村人口占总人口的40.42%，城镇人口大比例超过乡村人口。</p><h3 id="3-3-公式"><a href="#3-3-公式" class="headerlink" title="3.3 公式"></a>3.3 公式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f=w_1 x_1 + w_2 x_2</span><br><span class="line">\tag&#123;1&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>数学Tex代码渲染成下面的公式，见公式（1）。公式可以在<a href="http://latex.codecogs.com/eqneditor/editor.php" title="Latex公式在线可视化编辑器" target="_blank" rel="noopener">这个网站</a>可视化编写<a href="[Latex公式在线可视化编辑器](http://latex.codecogs.com/eqneditor/editor.php)">^2</a>。<br>$$<br>f=w_1 x_1 + w_2 x_2<br>\tag{1}<br>$$</p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4 总结"></a>4 总结</h2><p>一个清晰的总结应该概括全部论点。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>逻辑清楚，达情切意。准备看一些基础的逻辑学。朱自清在《荷塘清韵》</li><li>写完要读两遍，修改错别字，标点，语序连接等等。</li><li>修改可以反着读，正着读对熟悉的材料会有一种连贯性忽略掉错误或者不顺的地方。</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 国家统计局：2018年国民经济和社会发展统计[公报][statics_report]</span><br><span class="line">[statics_report]:http://www.stats.gov.cn/tjsj/zxfb/201902/t20190228_1651265.html</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件head，设置标题、日期、分类、标签、评论、版权、是否使用公式，如下。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 模版文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2019-07-25 12:00:00&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;updated: 2019-07-25 12:00:00&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;categories:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - 博客搭建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - 模版文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - Writing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;comments: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyright: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;math: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;前言部分，说明文章的写作意图，包括其涉及的背景，内容及其他文章关系。&lt;/p&gt;
&lt;p&gt;本文为写作模版文件。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;前言一般放到主页，可利用 &amp;lt;!-- more --&amp;gt; 隔断。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://talengu.github.io/public/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="模版文件" scheme="https://talengu.github.io/public/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E6%A8%A1%E7%89%88%E6%96%87%E4%BB%B6/"/>
    
    
      <category term="Writing" scheme="https://talengu.github.io/public/tags/Writing/"/>
    
  </entry>
  
  <entry>
    <title>机器学习系列</title>
    <link href="https://talengu.github.io/public/2019/07/23/AI/ML_summary/"/>
    <id>https://talengu.github.io/public/2019/07/23/AI/ML_summary/</id>
    <published>2019-07-23T04:00:00.000Z</published>
    <updated>2019-07-23T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p>路漫漫其修远兮，吾将上下而求索。2013年，大二接触人工智能课，讲逻辑推理，专家系统等等，神经网络只是一部分，打开当时老师的ppt，还能看到BP等算法。接着在2015年，上了模式识别课程，有一些启发式算法，KNN K-means等算法，同时神经网络也已经有了 GoogLeNet 等深层网络，热门的GAN网络也在2014年被提出。后面，机遇巧合，本科毕业时选了人工智能的坑，直到3年后的现在算是明白了一点。接下来的三年的目标还是<a href="https://talengu.github.io/public/2018/10/01/AI/how_algorithm_engineer/">【成为一名优秀的算法工程师】</a>。</p><p>回望入坑 <strong>机器学习</strong>，没有系统地整理过相关知识。于是想着手整理一份自己笔记系列。本文为序。</p><blockquote><p>雄关漫道真如铁，而今迈步从头越。</p></blockquote><p><img src="/public/2019/07/23/AI/ML_summary/1564034058070.png" alt="1564034058070"></p><div align="center"> Fig 1.  机器学习知识框架</div><br>如Fig.1 所示，整个系列将由五个部分组成。<br><br><a id="more"></a><br><br><br><br>## 机器学习基础<br><br>## 监督学习<br><br><img src="/public/2019/07/23/AI/ML_summary/1564034419203.png" alt="1564034419203"><br><br><div align="center"> Fig .  监督学习</div><h2 id="无监督学习"><a href="#无监督学习" class="headerlink" title="无监督学习"></a>无监督学习</h2><p><img src="/public/2019/07/23/AI/ML_summary/1564034460034.png" alt="1564034460034"></p><div align="center"> Fig .  无监督学习</div><h2 id="学习理论"><a href="#学习理论" class="headerlink" title="学习理论"></a>学习理论</h2><h3 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a><a href="regulation_baysian.md">正则化</a></h3><h2 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;路漫漫其修远兮，吾将上下而求索。2013年，大二接触人工智能课，讲逻辑推理，专家系统等等，神经网络只是一部分，打开当时老师的ppt，还能看到BP等算法。接着在2015年，上了模式识别课程，有一些启发式算法，KNN K-means等算法，同时神经网络也已经有了 GoogLeNet 等深层网络，热门的GAN网络也在2014年被提出。后面，机遇巧合，本科毕业时选了人工智能的坑，直到3年后的现在算是明白了一点。接下来的三年的目标还是&lt;a href=&quot;https://talengu.github.io/public/2018/10/01/AI/how_algorithm_engineer/&quot;&gt;【成为一名优秀的算法工程师】&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;回望入坑 &lt;strong&gt;机器学习&lt;/strong&gt;，没有系统地整理过相关知识。于是想着手整理一份自己笔记系列。本文为序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;雄关漫道真如铁，而今迈步从头越。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/public/2019/07/23/AI/ML_summary/1564034058070.png&quot; alt=&quot;1564034058070&quot;&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt; Fig 1.  机器学习知识框架&lt;/div&gt;&lt;br&gt;如Fig.1 所示，整个系列将由五个部分组成。&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://talengu.github.io/public/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="AI" scheme="https://talengu.github.io/public/tags/AI/"/>
    
      <category term="ML" scheme="https://talengu.github.io/public/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>《形象美学》摘录笔记</title>
    <link href="https://talengu.github.io/public/2019/07/21/readings/xingxiangmeixue/"/>
    <id>https://talengu.github.io/public/2019/07/21/readings/xingxiangmeixue/</id>
    <published>2019-07-21T04:00:00.000Z</published>
    <updated>2019-07-21T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p><img src="/public/2019/07/21/readings/xingxiangmeixue/book_cover.png" alt="book_cover"></p><p><a href="https://book.douban.com/subject/30434860/" target="_blank" rel="noopener">《形象美学》</a>这本书是我偶然间看到的，本人很少买衣服，自认为衣品极差，被老妈诟病。以前的观点是多买，买一些品牌好的。每当要去买衣服的时候（计划一年两次），总是有很多困扰。图书馆看到此书，恰合我意，翻阅全书，或许有望提高衣品，提升人生品味了，哈哈哈。</p><p>此书的作者是一位研究人物形象设计的大学教师，并有着多年服装顾问的实战经验。书前四章有很多服装的基础理论，搭配等技巧，书后两章给出驭装的细节方法和一个必备的衣服仓库的采购整理建议。本博文中将整理书中的重点，供各位同好们参考。</p><p>此书历经10 年完成（书中官方介绍），分为<strong>塑型、悦色、妆饰、驭装、理橱、博雅</strong>六个章节。书本主要分析了衣服的材质、款式、色彩、场合，以期帮助读者从尊重、认识、爱上自己的长相与身材开始，到认识与识别商品进行实践，最终达到人衣匹配，内外合一的境界。</p><a id="more"></a><p>本博文将此书内容分为两个部分阐述。博文第一部分为塑型、悦色、妆饰、驭装，代表着从材质、款式、色彩和场合四个角度分析衣服，为衣服的基本原理；博文第二部分理橱、博雅，为实践部分，即整理衣服鞋帽，合理配置。</p><h2 id="一、基本理论"><a href="#一、基本理论" class="headerlink" title="一、基本理论"></a>一、基本理论</h2><p>衣服的基本理论分为材质、款式、色彩和场合四个方面。</p><h3 id="1-材质"><a href="#1-材质" class="headerlink" title="1. 材质"></a>1. 材质</h3><p><strong>按面料材质分</strong>：天然纤维面料、化学纤维、混纺面料。</p><table><thead><tr><th>天然纤维面料</th><th></th><th></th></tr></thead><tbody><tr><td>棉织物</td><td>易掉色</td><td>日常休闲、随和温柔、平实、易于亲近</td></tr><tr><td>麻织物</td><td>易折皱</td><td>随性率真、污垢易除</td></tr><tr><td>丝织物</td><td>比较难打理</td><td></td></tr><tr><td>毛织物</td><td>毛衣</td><td>丝毛洗涤剂</td></tr><tr><td>丝织物</td><td>少见</td></tr></tbody></table><table><thead><tr><th>化学纤维</th><th></th><th></th></tr></thead><tbody><tr><td>再生纤维</td><td>易掉色</td><td></td></tr><tr><td></td><td>天丝纤维</td><td>随性率真、污垢易除</td></tr><tr><td></td><td>莫代尔纤维</td><td>木材、内衣</td></tr><tr><td></td><td>醋酯纤维</td><td>光泽感、[天鹅绒织锦]</td></tr><tr><td>合成纤维</td><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><table><thead><tr><th>混纺面料</th><th></th><th></th></tr></thead><tbody><tr><td>比如</td><td>毛衣</td><td>涤纶（30%-40%）、氨纶（3%-7%）</td></tr></tbody></table><p><strong>按纺织工艺分</strong>：梭织、针织。</p><table><thead><tr><th>纺织工艺</th><th></th><th></th></tr></thead><tbody><tr><td>梭织</td><td></td><td>斜纹、平纹、缎纹</td></tr><tr><td>针织</td><td></td><td>手感好，不保形，挺括</td></tr></tbody></table><p><strong>面料档次</strong></p><table><thead><tr><th>档</th><th></th><th></th></tr></thead><tbody><tr><td>低</td><td></td><td>普通化学</td></tr><tr><td>普通</td><td></td><td>棉、麻</td></tr><tr><td>中档</td><td></td><td>天丝、氨纶</td></tr><tr><td>高档</td><td></td><td>羊毛织物、桑蚕丝织物、小牛皮、小羊皮</td></tr><tr><td>顶级</td><td></td><td>羊绒织物、羊驼毛织物</td></tr></tbody></table><p><strong>材料小结</strong>：相近材料越轻越好（羊毛&lt;羊绒），材料对齐格子和条纹。</p><blockquote><p>Tip: 与其花便宜价钱买回一堆无用的东西，不如花一些心思在辨别服装的档次和价值上。购回衣服一定要试穿（材质和版型）。</p></blockquote><h3 id="2-款式"><a href="#2-款式" class="headerlink" title="2. 款式"></a>2. 款式</h3><p>款式，即衣服的型。包括轮廓、量感、比例。</p><h4 id="2-1-轮廓"><a href="#2-1-轮廓" class="headerlink" title="2.1 轮廓"></a>2.1 轮廓</h4><table><thead><tr><th>轮廓</th><th></th><th></th></tr></thead><tbody><tr><td>直线</td><td>粗：力量，霸气 细：秀气，敏锐灵动</td><td></td></tr><tr><td>直线+曲线</td><td></td><td></td></tr><tr><td>曲线</td><td>大曲线：浪漫、妩媚、经典、奢华、或熟惑。小曲线：可爱、秀美、温柔、年轻化。</td></tr></tbody></table><p>配饰、衣物上图案中也有直 中 曲。</p><ul><li>直线：格子、条纹、几何形。</li><li>中：动物纹、字母、波普艺术图案。</li><li>曲：波点（圆点）、花卉、波纹线，佩花纹理线</li></ul><h4 id="2-2-量感"><a href="#2-2-量感" class="headerlink" title="2.2 量感"></a>2.2 量感</h4><table><thead><tr><th>描述</th><th>面料</th><th>配饰</th></tr></thead><tbody><tr><td>重型 多变</td><td>牛仔布/皮革</td><td>夸张</td></tr><tr><td>适中 线形柔和</td><td>棉麻、针织、磨砂皮</td><td>适中</td></tr><tr><td>轻 平实 常见 变化少</td><td>真丝、纱、薄针织</td><td>小巧可爱</td></tr></tbody></table><h4 id="2-3-比例"><a href="#2-3-比例" class="headerlink" title="2.3 比例"></a>2.3 比例</h4><p><strong>服装轮廓对应身材，服装图案和装饰对应人脸。</strong></p><p>“型”形式美法则</p><ol><li>统一与变化</li><li>节奏与韵律。宽窄：上宽下窄。长短：内外。上长下短，不要一样。</li></ol><p>经典款式上融入当季流行的元素。</p><h3 id="3-色彩"><a href="#3-色彩" class="headerlink" title="3. 色彩"></a>3. 色彩</h3><h4 id="3-1-色彩分类"><a href="#3-1-色彩分类" class="headerlink" title="3.1 色彩分类"></a>3.1 色彩分类</h4><table><thead><tr><th>色彩分类</th><th></th><th></th></tr></thead><tbody><tr><td>无彩色</td><td>黑白灰</td><td></td></tr><tr><td>有彩色</td><td>红橙黄绿蓝紫</td><td>明快艳丽</td></tr><tr><td></td><td>+白</td><td>轻快爽朗</td></tr><tr><td></td><td>+灰</td><td>优雅含蓄</td></tr><tr><td></td><td>+黑</td><td>沉稳庄重</td></tr><tr><td>独立色</td><td>金银</td><td>不建议日常</td></tr></tbody></table><p><strong>色彩三要素</strong>：色相、明度（亮度）、纯色（彩度）</p><p>色相：基础色，色系。冷暖。 <a href="http://blog.sina.com.cn/s/blog_4b933df90102x35r.html" target="_blank" rel="noopener">伊登色相环</a> 色立体</p><p>明度：加白色，亮暗，浅深。</p><p>纯度：色彩饱和和纯净程度。常用鲜艳，浑浊或艳。鲜与灰。</p><blockquote><p>平常说的亮，指的是明度而非纯度。<br>色相，冷与暖；明度，亮与暗（浅与深）；纯度，鲜艳与浑浊（鲜与灰）。</p></blockquote><p><img src="/public/2019/07/21/readings/xingxiangmeixue/sexianghuan.png" alt="sexianghuan"></p><h4 id="3-2-肤色"><a href="#3-2-肤色" class="headerlink" title="3.2 肤色"></a>3.2 肤色</h4><table><thead><tr><th>肤色</th><th></th><th></th></tr></thead><tbody><tr><td>肤色色相</td><td>冷暖</td><td>冷：泛青，或黄至青灰的肤色，如小麦色，古铜色，橄榄色。暖：偏黄或偏红的肤色，如象牙色，黄橙色，咖啡色</td></tr><tr><td>肤色色明</td><td>黑白</td><td>高明度：偏白偏亮。低明度：偏黑偏暗。</td></tr><tr><td>肤色纯度</td><td>轻薄透明，密实紧致</td><td>低纯度：；皮肤较薄，晶莹剔透，面部较易泛红印。高纯度：密实紧致，给人厚重感，光泽度较强。</td></tr></tbody></table><p><a href="https://jingyan.baidu.com/article/020278116a838c1bcc9ce529.html" target="_blank" rel="noopener">肤色选颜色</a> 肤色的四季理论。此部分来自百度。</p><p><strong>Spring 春季型</strong></p><p>  肤色特征：浅象牙色，暖米色，细腻而有透明感。<br>  眼睛特征：眼珠为亮茶色，黄玉色，眼白感觉有湖兰色。<br>  发色特征：明亮如绢的茶色，柔和的棕黄色、栗色。发质柔软。</p><p>  春季型人的色彩搭配原则——最适合自己颜色的要点是：不能太旧，太暗。春季型人的服饰基调属于暖色系中的明亮色调，在色彩搭配上应遵循鲜明、对比的突出自己的俏丽。使用范围最广的颜色是黄色，选择红色时，以橙红、桔红为主。<br>  特别提示：对春季型人来说，黑色是最不适合的颜色，过深过重的颜色会与春季型人白色的肌肤、飘逸的黄发出现不和谐音，会使春季型人看上去显得暗淡。春季型人的特点是明亮、鲜艳。属于春季型的人用明亮、鲜艳的颜色打扮自己，会比实际年龄显得年轻。</p><p><strong>Summer 夏季型</strong></p><p>  肤色特征：粉白，乳白色皮肤，带蓝色调的褐色皮肤，小麦色皮肤。<br>  眼睛特征：目光柔和，眼珠呈焦茶色，深棕色。<br>  发色特征：轻柔的黑色、灰黑色，柔和的棕色或深棕色。</p><p>  夏季型人的色彩搭配原则——拥有健康的肤色，水粉色的红晕，浅玫瑰色的嘴唇，柔软的黑发，给人以非常柔和优雅的整体印象。夏季型人适合以蓝色为底调的柔和淡雅的颜色，这样才能衬托出她们温柔、恬静的个性。夏季型人适合穿深浅不同的各种粉色、蓝色和紫色，以及有朦胧感的色调，在色彩搭配上，最好避免反差大的色调，适合在同一色相里进行浓淡搭配。</p><p>  特别提示：选择适合自己的颜色的要点是：颜色一定要柔和、淡雅。夏季型人不适合穿黑色，过深的颜色会破坏夏季型人的柔美，可用一些浅淡的灰蓝色、蓝灰色、紫色来代替黑色。夏季型人穿灰色会非常高雅，但注意选择浅至中度的灰，但注意夏季型人不太适合藏蓝色。 </p><p><strong>Autumn 秋季型</strong></p><p>  肤色特征：瓷器般的象牙色皮肤，深桔色、暗驼色或黄橙色。肤色匀整，色泽偏橘，无透明感，肤质密实，肤质的纯度较高。不易出现红晕，肤色偏深，也有少部分人肤色呈现瓷器般浅象牙白色<br>  眼睛特征：深棕色、焦茶色、眼白呈暖白色。<br>  发色特征：有光泽的褐色、棕色或者铜色、巧克力色。</p><p>  秋季型人的色彩搭配原则—— 是四季色中最成熟而华贵的代表，最适合的颜色是金色，苔绿色，橙色等深而华丽的颜色。选择红色时，一定要选择砖红色和与暗桔红相近的颜色。秋季型人的服饰基调是暖色系中的沉稳色调。浓郁而华丽的颜色可衬托出秋季型人成熟高贵的气质，越浑厚的颜色也越能衬托秋季型人陶瓷般的皮肤。</p><p>  特别提示：选择适合自己的颜色的要点是：颜色要温暖，浓郁。秋季型人穿黑色会显得皮肤发黄，可用深棕色来代替。</p><p>最佳用色：金色，姜黄，橄榄绿，土红，土黄，咖啡色，深褐色，等浓郁而温暖的色彩。</p><p><strong>Winter 冬季型</strong></p><p>  肤色特征：青白或略带橄榄色，带青色的黄褐色。冷调的看不到红晕的肤色。<br>  眼睛特征：眼睛黑白分明，目光锐利，眼珠为深黑色，焦茶色。<br>  发色特征：乌黑发亮，黑褐色，银灰、深酒红。</p><p>  冬季型人的色彩搭配原则—— 最适合纯色，选择红色时，可选正红、酒红和纯正的玫瑰红。在四季颜色中，只有冬季型人最适合使用黑、纯白、灰这三种颜色，藏蓝色也是冬季型人的专利色。但在选择深重颜色的时候一定要有对比色出现。</p><p>  特别提示：选择适合自己的颜色的要点是：颜色要鲜明，光泽度高。冬季型人着装一定要注意色彩的对比，只有对比搭配才能显得惊艳、脱俗</p><blockquote><p>如何确定自己的肤色为冷暖色？<br>找一个审美较好的朋友陪着去逛街，试穿五件以上不同暖色调的衣服，再试穿五件以上不同冷色调的衣服。</p></blockquote><h4 id="3-3-色彩的错觉"><a href="#3-3-色彩的错觉" class="headerlink" title="3.3 色彩的错觉"></a>3.3 色彩的错觉</h4><ul><li>色彩的膨胀与收缩。冷，暗，低纯度收缩。暖，亮，高纯度膨胀。</li><li>色彩的硬和软。灰黑，深蓝，是硬朗，坚强的色彩，用于职场谈判，强调严谨，强势，理性的态度。粉红，粉黄，为相对温和柔软的色彩，与朋友约会，家庭亲子活动，强调关心，关怀。同时与面料的质感有很大关系。当然也要善用流行色。</li></ul><h4 id="3-4-衣服配色原理"><a href="#3-4-衣服配色原理" class="headerlink" title="3.4 衣服配色原理"></a>3.4 衣服配色原理</h4><ol><li>色相和谐法。色相类似，明纯改变。冷暖一样，上明下暗。</li><li>明度和谐法。明度类似，色相纯度改变。上冷下暖。</li><li>纯度和谐法。纯度相近。色相明度不同。</li><li>有色彩，无彩搭配。黑白灰</li><li>色彩面积大小和谐法。主次，点缀。</li><li>色彩的呼应。A、图案与服装色彩的呼应，外花内单，外单内花，单是花中的一个颜色。花色：花卉，格子，条纹，圆点，动物纹，火腿纹，电脑抽像图。B、配饰，帽子与上衣颜色一致，领带、围巾也相呼应。</li><li>面料质地与色彩。同色不同质。同质不同色。</li><li>面料与肤质。面料粗细，与脸部很相关。</li></ol><h3 id="4-场合"><a href="#4-场合" class="headerlink" title="4. 场合"></a>4. 场合</h3><p>TPO法则：Time Place Object。Time主要为季节。Place为地点，室内还是室外，办公场所还是在家里。Object 穿着的目的，为了什么事情而穿。接下来两个常用场景来说一说。</p><h4 id="职场"><a href="#职场" class="headerlink" title="职场"></a>职场</h4><p>与个人职业气质相契合，与个人年龄相契合，与工作环境、工作特点、行业要求相契合。</p><p>领带分为小中大结，身材瘦小适合小结，身材适中适合中结，身材高大适合大结。领结搭配礼服多一点。衬衫要过腕，斜纹代表勇敢，波纹线代表活泼跳跃，圆点代表关怀。带鞋带的皮鞋很正式。</p><h4 id="休闲"><a href="#休闲" class="headerlink" title="休闲"></a>休闲</h4><ol><li>旅游：舒适。颜色红黄绿，游山玩水；颜色黑白，城市。</li><li>逛街，访友，约会。不穿太正式，体现自我风格。遇见春节等喜庆节日穿红色。</li><li>日常运动健身</li><li>家居：休闲家居服，睡衣。圆点卡通，有利于休息，全家尽量一致，和谐。</li></ol><h2 id="二、理橱博雅"><a href="#二、理橱博雅" class="headerlink" title="二、理橱博雅"></a>二、理橱博雅</h2><h3 id="衣服类别："><a href="#衣服类别：" class="headerlink" title="衣服类别："></a>衣服类别：</h3><ol><li><p>职业装<br>上班或适合上班，商务，公务活动穿着的服装，多为正装，套装。</p></li><li><p>便装<br>逛街，聚会，旅行，郊游时穿着的服装，比正装、套装稍显随意，休闲些的服装。</p></li><li><p>家居休闲服<br>买菜，散步，接送孩子时穿着轻松自在的外出服。</p></li><li><p>运动服<br>打球、跑步、游泳、健身时穿着的服装，因运动的不同而具有不同功能和特性的服装。</p></li><li><p>礼仪服<br>参加典礼、庆功宴、年会、酒会，音乐会，高规格的戏剧演出等社交活动时穿着的服装。</p></li><li><p>睡衣<br>睡眠时穿着的有利于人身心放松的服装。</p></li><li><p>内衣</p><blockquote><p>周一至周五的上班族，衣橱中一半为职业服，平时注意将各类服装备齐。</p></blockquote></li></ol><h3 id="整理技巧"><a href="#整理技巧" class="headerlink" title="整理技巧"></a>整理技巧</h3><ol><li>清理衣橱中现存的服饰，旧的打包。</li><li>检查衣橱中留下的服饰，检查是否污渍，掉色，掉线。</li><li>系统、规律地吊挂，摆放衣服饰品。比如：按 春夏 秋冬，按上下装，按功能分。<blockquote><p>大而厚的衣服要用大衣架。裤子用夹。丝质用有海绵垫肩的衣架。针织服装不用吊挂，容易变形。</p></blockquote></li><li>为衣橱中现有的服饰做搭配。发现新搭配。</li><li>列出衣橱中缺少的单品清单。在搭配时发现缺少的清单。列出购物时的清单。（在商场中可以带上自己想要搭配的衣物，或者存在手机上）</li><li>将衣橱中的服装拍照留存，求助一些专业的朋友，或者设计师。<blockquote><p>洗涤时，检查口袋！！！分开洗涤！！！<br>棉麻反面晒，拉平一下。<br>羽绒服晒到一半干，要拍打一下。<br>买一些合适的晾衣架。</p></blockquote></li></ol><h3 id="理智购买"><a href="#理智购买" class="headerlink" title="理智购买"></a>理智购买</h3><ol><li>购买服装需定位。衣橱中缺少的是哪一种类型，哪一个季节，哪一种场合穿着的衣服鞋帽。</li><li>买衣之前试穿。</li><li>不买贵的或便宜的，只买合适的。</li><li>贵精不贵多，重质不重量。</li><li>购衣时，检查衣服。是否需要“干洗”，比如正装。颜色，条纹是否对齐，勾线齐整等等</li></ol><blockquote><p>怎样才能避免使白衬衫的领口，腋下因汗渍而发黄？穿衬衫前将蜡质止汗膏涂抹在衬衫领口及腋下部位，可以隔绝汗液侵蚀，延长白衬衫的寿命。油渍，用纸巾吸一下，然后用牙膏处理一哈。</p></blockquote><h3 id="博雅-明礼修身提升综合素养"><a href="#博雅-明礼修身提升综合素养" class="headerlink" title="博雅 明礼修身提升综合素养"></a>博雅 明礼修身提升综合素养</h3><blockquote><p>“若要有优美的嘴唇，请讲亲切的话；若要有优雅的姿态，请记住走路时行人不止你一个。“<br>—奥黛丽·赫本</p></blockquote><p>走路可选择带节奏感的旋律，如414拍的音乐，踏着音乐不停地练习，增强走路的节奏感和律动。</p><p>心中盛满美好之人，脚步时轻盈的；心理盛满爱心的人，脚步是温柔的；心理盛满阳光的人，脚步是快乐的；心里盛满信念之人，步伐也会因此而变得坚定。</p><p>适宜香水：闻香识人，听语知人。</p><p>读万卷书，行万里路，与万人谈。</p><p>美不自美，因人而彰。</p><p>世物自美，需要生活的艺术家运用慧眼发现美。通过丰富多彩的载体创造美，在人和人之间传递美。</p><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p>买衣服考虑四个方面，材质（棉麻为主要）、款式（轮廓、量感、比例）、颜色（色相、明度、纯度）、场合（工作、休闲）。<a href="#整理技巧">整理衣橱</a>，<a href="#理智购买">理智购买</a>。</p><p><strong>最后，真诚地感谢《形象美学》的作者，黄焱冰老师！！！也希望自己有更好的衣品</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2019/07/21/readings/xingxiangmeixue/book_cover.png&quot; alt=&quot;book_cover&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/30434860/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《形象美学》&lt;/a&gt;这本书是我偶然间看到的，本人很少买衣服，自认为衣品极差，被老妈诟病。以前的观点是多买，买一些品牌好的。每当要去买衣服的时候（计划一年两次），总是有很多困扰。图书馆看到此书，恰合我意，翻阅全书，或许有望提高衣品，提升人生品味了，哈哈哈。&lt;/p&gt;
&lt;p&gt;此书的作者是一位研究人物形象设计的大学教师，并有着多年服装顾问的实战经验。书前四章有很多服装的基础理论，搭配等技巧，书后两章给出驭装的细节方法和一个必备的衣服仓库的采购整理建议。本博文中将整理书中的重点，供各位同好们参考。&lt;/p&gt;
&lt;p&gt;此书历经10 年完成（书中官方介绍），分为&lt;strong&gt;塑型、悦色、妆饰、驭装、理橱、博雅&lt;/strong&gt;六个章节。书本主要分析了衣服的材质、款式、色彩、场合，以期帮助读者从尊重、认识、爱上自己的长相与身材开始，到认识与识别商品进行实践，最终达到人衣匹配，内外合一的境界。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://talengu.github.io/public/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="个人管理" scheme="https://talengu.github.io/public/tags/%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86/"/>
    
      <category term="《形象美学》" scheme="https://talengu.github.io/public/tags/%E3%80%8A%E5%BD%A2%E8%B1%A1%E7%BE%8E%E5%AD%A6%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>正则化【一】机器学习中的正则化</title>
    <link href="https://talengu.github.io/public/2019/07/17/AI/regulation_baysian/"/>
    <id>https://talengu.github.io/public/2019/07/17/AI/regulation_baysian/</id>
    <published>2019-07-17T04:00:00.000Z</published>
    <updated>2019-07-17T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>本<strong>正则化系列</strong>文章我们将讨论<strong>正则化技术在机器学习和深度学习的应用</strong>。本文为该系列的第一篇，主要介绍<strong>机器学习正则化的概念，原理和应用实例</strong>。</p><p><a href="https://en.wikipedia.org/wiki/Regularization_(mathematics)" target="_blank" rel="noopener">正则化</a> 技术广泛应用在机器学习和深度学习算法中，本质作用是<strong>防止过拟合、提高模型泛化能力</strong>。其中过拟合的简单理解就是训练的算法模型太过复杂，模型过分考虑了当前样本的结构。</p><p>在早期的机器学习领域一般只是将范数惩罚叫做正则化技术，而在深度学习领域认为，能够显著减少方差，而不过度增加偏差的策略都可以认为是正则化技术。故<strong>推广的正则化技术</strong>还有：扩增样本集、早停止、Dropout、集成学习、多任务学习、对抗训练、参数共享等。(具体见“花书 第七章 <a href="http://www.deeplearningbook.org/contents/regularization.html" target="_blank" rel="noopener">Regularization for Deep Learning</a>”），关于<strong>深度学习正则化</strong>会在下一篇正则化文章中重点分析。</p><p>转载自：<a href="https://blog.csdn.net/BigData_Mining/article/details/81631249" target="_blank" rel="noopener">https://blog.csdn.net/BigData_Mining/article/details/81631249</a></p><a id="more"></a><h2 id="1-多角度看机器学习正则化"><a href="#1-多角度看机器学习正则化" class="headerlink" title="1. 多角度看机器学习正则化"></a>1. 多角度看机器学习正则化</h2><p><strong>机器学习领域正则化</strong>可以从以下三个角度进行理解：</p><p><strong>(1)</strong> <strong>正则化等价于结构风险最小化，其是通过在经验风险项后加上表示模型复杂度的正则化项或惩罚项，达到选择经验风险和模型复杂度都较小的模型目的</strong>。</p><p>​    <strong>经验风险</strong>：机器学习中的风险是指模型与真实解之间的误差的积累，经验风险是指使用训练出来的模型进行预测或者分类，存在多大的误差，可以简单理解为训练误差，经验风险最小化即为训练误差最小。</p><p>​    <strong>结构风险</strong>：结构风险定义为经验风险与置信风险(置信是指可信程度)的和，置信风险越大，模型推广能力越差。可以简单认为结构风险是经验风险后面多加了一项表示模型复杂度的函数项，从而可以同时控制模型训练误差和测试误差，结构风险最小化即为在保证模型分类精度(经验风险)的同时，降低模型复杂度，提高泛化能力。</p><p>​    <strong>公式表达</strong><br>$$<br>R(f)=\frac{1}{n}\sum_{i=1}^{n}L(y_i,f(x_i)) + \lambda \Omega (f)<br>\tag{1}<br>$$<br>​        其中，$R(f)$表示结构风险，$L(y_i,f(x_i))$表示第 $i$ 个样本的经验风险，$\Omega(f)$是表征模型复杂度的正则项，$\lambda$ 是正则化参数。根据奥姆剃刀定律，“如无必要，勿增实体”，即认为相对简单的模型泛化能力更好。而模型泛化能力强、泛化误差小，即表示模型推广能力强，通俗理解就是在训练集中训练得到的优秀模型能够很好的适用于实际测试数据，而不仅仅是减少训练误差或者测试误差。泛化误差定义如下：<br>$$<br>E={Bias}^2(X) + {Var}(X) +{Noise}<br>\tag{2}<br>$$<br>​        其中，$E$ 表示泛化误差，${Bias}$ 代表偏差，${Var}$ 代表方差， ${Noise}$ 代表噪声。</p><p>​    <strong>关系图</strong></p><p><img src="/public/2019/07/17/AI/regulation_baysian/1563350068097.png" alt="1563350068097"></p><p><div align="center"> Fig 1. 泛化误差与偏差和方差的关系</div><br>​        从 Fig 1 可以看出，随着训练程度加深，模型复杂度会增加，偏差减少，方差增大，而泛化误差呈现U型变化。对于一个“好的系统”通常要求误差小，正则化的作用即为适当的控制模型复杂度，从而使得<strong>泛化误差曲线</strong>取最小值。</p><p><strong>(2)</strong> <strong>正则化等价于带约束的目标函数中的约束项</strong></p><p>以平方误差损失和L2范数为例，优化问题的数学模型如下：<br>$$<br>J(\theta)=\sum_{i=1}^{n}(y_i-\theta^Tx_i)^2<br>\tag{3}<br>$$<br>$$<br>{s.t.}{|| \theta ||}_2^2 \leq C\\<br>\tag{4}<br>$$</p><p>针对上述约束条件的优化问题，采用拉格朗日乘积算子法可以转化为无约束化问题，即<br>$$<br>J(\theta)=\sum_{i=1}^{n}(y_i-w^Tx_i)^2 + \lambda({|| \theta ||}_2^2-C)<br>\tag{5}<br>$$</p><p>由于参数 $C$ 为常数，可以忽略，故上述公式和标准的正则化 公式完全一致。</p><p><strong>(3)</strong> <strong>从贝叶斯角度考虑</strong></p><p>正则项等价于引入参数的模型先验概率，可以简单理解为对最大似然估计引入先验概率，从而转化为最大后验估计，其中的先验概率即对于正则项（这部分内容后面详细讲解）。</p><h2 id="2-基本概念"><a href="#2-基本概念" class="headerlink" title="2 基本概念"></a>2 基本概念</h2><p>正则化也可以成为规则化、权重衰减技术，不同的领域叫法不一样，数学上常用范数实现，例如L1和L2范数，统计学领域叫做惩罚项、罚因子。</p><p>下面给出范数的数学公式，方便以后分析：</p><p>​    (1) $p$ 范数：<br>$$<br>Lp=(\sum_{i=1}^{n}{|| x_i ||}^p)^{\frac{1}{p}}<br>\tag{6}<br>$$<br>​    (2) $L0$ 范数：0 范数表示向量中非零元素的个数（即为其稀疏度）</p><p>​    (3) $L1$ 范数：即向量元素绝对值之和，$p$ 范数取1，即为1范数<br>$$<br>{||x||}_1=\sum^n_1 {|| x_i || }<br>\tag{7}<br>$$</p><p>​    (4) $L2$ 范数：即向量元素绝对值的平方和再开发，也称欧几里得距离，$p$ 范数取2，即为2范数<br>$$<br>{||x||}_{2}=\sqrt{\sum^{n}_1|| x_i ||^2}<br>\tag{8}<br>$$</p><p>​    (5) $\infty $ 范数：即所有向量元素的绝对值中的最大值，$p$ 范数取 $\infty $，即为 $\infty $ 范数<br>$$<br>{||x  ||}_{\infty }=\underset{i}{\max}{\left | x_i \right |}<br>\tag{9}<br>$$</p><p>​    (6) $-\infty $ 范数：即所有向量元素绝对值中的最小值，$p$ 范数取$-\infty $，即为 $-\infty $ 范数<br>$$<br>{||x  ||}_{-\infty }=\underset{i}{\min}{\left | x_i \right |}<br>\tag{10}<br>$$<br><strong>图形描述</strong></p><p>​        从 Fig 2、Fig 3 图可以看出：q(p)越小，曲线越贴近坐标轴，q(p)越大，曲线越远离坐标轴，并且棱角越明显，当q(p)取0时候，是完全和坐标轴贴合，当q(p)取无穷的时候，呈现正方体形状。同时也可以看出，采用不同的范数作为正则项，会得到完全不同的算法模型结果，故而对于不同要求的模型，应该采用不同的范数作为正则项。</p><p><img src="/public/2019/07/17/AI/regulation_baysian/1563354053269.png" alt="1563354053269"></p><p><div align="center"> Fig 2. 向量长度为2维的范数约束</div><br><img src="/public/2019/07/17/AI/regulation_baysian/1563354456894.png" alt="1563354456894"></p><p><div align="center"> Fig 3. 向量长度为3维的范数约束</div></p><h2 id="3-深度理解"><a href="#3-深度理解" class="headerlink" title="3 深度理解"></a>3 深度理解</h2><p>​        为了更好的理解正则化技术原理，下面从4个方面进行深度分析，希望对大家理解有帮助。</p><h3 id="3-1-简单数值假设分析法"><a href="#3-1-简单数值假设分析法" class="headerlink" title="3.1 简单数值假设分析法"></a>3.1 简单数值假设分析法</h3><p>​        此处以L2范数讲解，下面的各图形来自吴恩达的机器学习课程。</p><p><img src="/public/2019/07/17/AI/regulation_baysian/image-20190619002115576.png" alt="image-20190619002115576"></p><p><div align="center"> Fig 4. 不同参数下的曲线拟合结果</div><br>​        左边的曲线拟合是欠拟合，中间的曲线拟合是刚好合适，右边的曲线拟合是过拟合。对于右边的拟合曲线，有<br>$$<br>h_{\theta}(x)={\theta}_0+{\theta}_0 x_1 +{\theta}_2 x_2^2 +{\theta}_3 x_3^3 +{\theta}_4 x_4^4<br>\tag{11}<br>$$<br>​        从上式可以看出，由于$\theta_3$和$\theta_4$对应了高阶，导致拟合曲线是4阶曲线，出现了过拟合。正则化的目的为适当缩减$\theta_3$和$\theta_4$的值，例如都为0.0001，则上述曲线本质上等价与<br>$$<br>h_{\theta}(x)={\theta}_0 + {\theta}_1 x_1 +{\theta}_2 x_2^2<br>\tag{12}<br>$$<br>​        也就是变成了中间的刚好合适的拟合曲线。对于$\theta_3$ 和$\theta_4$增加 L2 正则项后的代价函数表达式为：<br>$$<br>J(\theta)= \underset{\theta}{\min}\frac{1}{n}\sum_{i=1}^{n}((h_{\theta}(x_i)-y_i)+1000{\theta}_3^2 + 1000 {\theta}_4^2)<br>\tag{13}<br>$$<br>​        从上式可以看出，$\theta_3^2$ 和 $\theta_4^2$ 均大于 0，其乘上了1000，要 $J(\theta)$ 是最小，则会迫使模型学习到的$\theta_3$ 和 $\theta_4$ 会非常小，因为只有在$\theta_3$ 和 $\theta_4$ 会非常小的情况下整个代价函数值才会取的较小值。在实际开发中，是对所有参数进行正则化，为了使代价函数尽可能的小，所有的参数 $\theta$ 的值（不包括 $\theta_0$）都会在一定程度上减小，但是减小程度会不一样，从而实现了权重衰减、简化模型复杂度的作用。</p><h3 id="3-2-图形分析法"><a href="#3-2-图形分析法" class="headerlink" title="3.2 图形分析法"></a>3.2 图形分析法</h3><p>​        此处采用L1和L2范数讲解：<br><strong>(1) L2 范数正则</strong><br>$$<br>J(\beta)=\sum_{i=1}^{n}(y_i-{\beta}^T x_i)^2 + \lambda {|| {\beta} ||}_2^2<br>\tag{14}<br>$$<br><img src="/public/2019/07/17/AI/regulation_baysian/1563366078400.png" alt="1563366078400"></p><p><div align="center"> Fig 5. L2 范数与代价函数的寻优图示</div><br>​        在 Fig 5 中，蓝色的圆形空间表示 L2 范数空间，设为 $\beta_1^2 + \beta_2^2 = r^2$，可以看出，当 $r$ 从 0 逐渐增大时候，该圆形也逐渐增大，红色的线表示原始代价函数解空间即 $\sum_{i=1}^{n}(y_i-\beta^T x_i)^2$，此处为了方便绘图，设参数只有2维。红色圆环上的任何一点都表示一个可行解即代表一组$\beta_1$、$\beta_2$，其中任何一个红色圆环上面的$\beta_1$，$\beta_2$对应的代价函数值一样（可以简单理解为等值线），$\hat{\beta}$ 代表最佳解空间。</p><h2 id="4-贝叶斯角度分析"><a href="#4-贝叶斯角度分析" class="headerlink" title="4. 贝叶斯角度分析"></a>4. 贝叶斯角度分析</h2><p>​        以L1和L2范数为例，所得结论可以推广到P范数中，首先需要知道：整个最优化问题从贝叶斯观点来看是一种贝叶斯最大后验估计，其中正则化项对应后验估计中的先验信息，损失函数对应后验估计中的似然函数，两者的乘积即对应贝叶斯最大后验估计的形式。针对L1和L2范数还有结论：<strong>L2 范数相当于给模型参数设置一个协方差为1/alpha的零均值高斯先验分布，L1 范数相当于给模型参数 设置一个参数为1/alpha 拉普拉斯先验分布</strong>。</p><p>​        为了讲清楚上述结论，需要具备几点前置知识点：(1) 高斯分布和拉普拉斯分布的定义和形状；(2) 贝叶斯定理；(3) 最大似然估计；(4) 最大后验估计。下面我对这4个知识点进行解释。</p><p><strong>(1)</strong> <strong>高斯分布和拉普拉斯分布</strong></p><p><img src="/public/2019/07/17/AI/regulation_baysian/0.png" alt="0?wx_fmt=png"></p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610163845194.png" alt="0?wx_fmt=png"></p><p><strong>(2)</strong> <strong>最大似然估计</strong></p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610163845276.png" alt="0?wx_fmt=png"></p><p>​        如果上述公式不能理解，请各位读者去复习一下大学课程《概率论与数理统计》中的参数估计章节，为了更方便理解，下面举一个例子：假设我要统计出整个大学内所有同学的身高分布情况，设全校一共20000人，数量庞大，所有人都去问一遍不太靠谱，所以我打算采用抽样方法来估计，假设我已经知道身高分布服从高斯分布，但是我不知道高斯分布中的均值和方差参数，现在我打算采用最大似然估计方法来确定这两个参数。首先需要明确，全校20000即为总体X，我随机从各个班抽取10名同学，假设一共抽了2000个同学，那么2000同学就构成了样本空间，由于每个样本的概率密度函数已知，则很容易写出似然函数，对数求导即可求解参数。</p><p><strong>(3)</strong> <strong>最大后验估计</strong></p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610163845259.png" alt="0?wx_fmt=png"></p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610163845297.png" alt="0?wx_fmt=png"></p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610163845289.png" alt="0?wx_fmt=png"></p><h2 id="5-例子"><a href="#5-例子" class="headerlink" title="5. 例子"></a>5. 例子</h2><h3 id="5-1-逻辑回归"><a href="#5-1-逻辑回归" class="headerlink" title="5.1 逻辑回归"></a>5.1 逻辑回归</h3><p>​        二分类逻辑回归使用Sigmoid作为决策函数进行分类，该函数可以将任意的输入映射到[0,1]区间，当预测结果小于0.5，则表示负类，当预测结果大于0.5.则表示正类，其模型本质是求最大似然估计，具体求解似然函数通常使用梯度下降法，而前面说过：最大似然估计法没有考虑训练集以外的因素，很容易造成过拟合，故而逻辑回归一般采用L2范数进行正则化操作，Sigmoid函数定义和图形如下：</p><p><img src="/public/2019/07/17/AI/regulation_baysian/0.jpeg" alt="0?wx_fmt=png"></p><h3 id="5-2-岭回归-Ridge-Regression"><a href="#5-2-岭回归-Ridge-Regression" class="headerlink" title="5.2 岭回归(Ridge Regression)"></a>5.2 岭回归(Ridge Regression)</h3><p>​        岭回归本质上是针对线性回归问题引入了L2范数正则，通过缩减回归系数避免过拟合问题，最先用来处理特征数多于样本数的情况(高维小样本问题)，现在也用于在估计中加人偏差，从而得到更好的估计，加了正则化后的代价函数如下：</p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610174921016.png" alt="0?wx_fmt=png"></p><h3 id="5-3-Lasso-回归"><a href="#5-3-Lasso-回归" class="headerlink" title="5.3 Lasso 回归"></a>5.3 Lasso 回归</h3><p>​        拉索回归(lasso回归)本质上是针对线性回归问题引入了L1范数正则，通过缩减回归系数避免过拟合问题，其不同于L2范数，其可以将某些系数缩减为0即所谓的具备稀疏性(稀疏性的好处是简化计算、容易理解模型、减少存储空间、不容易出现过拟合等等)，加了正则化后的代价函数如下：</p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610174920968.png" alt="0?wx_fmt=png"></p><p>​        其中，参数函数和岭回归中相同。L1范数罚有一个问题：由于|X|函数在0处不可导，故而直接使用最小二乘法、梯度下降法等方法均失效，但是由于其为第一类间断点中的可去间断点，可以通过补充该点的定义解决，通常，对于线性回归中的lasso回归可以采用近似的前向逐步回归替代。</p><h3 id="5-4-SVM"><a href="#5-4-SVM" class="headerlink" title="5.4 SVM"></a>5.4 SVM</h3><p>​        支持向量机SVM优化目的为寻找一个超平面，使得正负样本能够以最大间隔分离开，从而得到更好的泛化性能，其通过引入核函数来将低维线性不可分的样本映射到高维空间从而线性可分，通过引入惩罚参数C(类似于正则化参数)来对错分样本进行惩罚，从而减少模型复杂度，提高泛化能力，其优化目标如下：</p><p><img src="/public/2019/07/17/AI/regulation_baysian/0-20190610174921029.png" alt="0?wx_fmt=png"></p><p>​        大家如果不知道上面公式的推导，不用紧张，对于本次内容不是重点，只需要关注后面正则项部分，惩罚参数C作用和正则化参数作用一致，只是反相关而已。需要明白以下结论：</p><p>​        <strong>(1)</strong> C越大，正则化参数越小，表示对分错样本的惩罚程度越大，正则化作用越小，偏差越小，方差越大，越容易出现过拟合(通俗理解，原本将低维空间映射到5维空间正好线性可分，但是由于惩罚过于严重，任何一个样本分错了都不可原谅，结果系统只能不断提高维数来拟合样本，假设为10维，最终导致映射维数过高，出现过拟合样本现象，数学上称为VC维较大)；</p><p>​        <strong>(2)</strong> C越小，正则化参数越大，表示对分错样本的惩罚程度越小，正则化作用越大，偏差越大，方差越小，越容易出现欠拟合(通俗理解，原本将低维空间映射到5维空间正好线性可分，但是由于惩罚过小，分错了好多样本都可以理解，比较随意，结果系统也采用简化版来拟合样本，假设为3维，最终导致映射维数过低，出现欠拟合样本现象，数学上称为VC维较小)。</p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>根本目的本质：防止过拟合，提高模型泛化能力。</p><p>正则化技术分类：<br><strong>狭义上</strong>（不同地方叫法不同）</p><ul><li>在早期的机器学习领域一般只是将范数惩罚叫做正则化技术</li><li>规则化、权重衰减</li><li>从贝叶斯角度考虑，正则项等价于引入参数的模型先验概率</li></ul><p><strong>广义上</strong>：<br>    能够显著减少方差，而不过度增加偏差的策略都可以认为是正则化技术，推广的正则化技术还有：扩增样本集、早停止、Dropout、集成学习、多任务学习、对抗训练、参数共享等。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/BigData_Mining/article/details/81631249" target="_blank" rel="noopener">正则化总结的比较好比较全面的文章</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;本&lt;strong&gt;正则化系列&lt;/strong&gt;文章我们将讨论&lt;strong&gt;正则化技术在机器学习和深度学习的应用&lt;/strong&gt;。本文为该系列的第一篇，主要介绍&lt;strong&gt;机器学习正则化的概念，原理和应用实例&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Regularization_(mathematics)&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;正则化&lt;/a&gt; 技术广泛应用在机器学习和深度学习算法中，本质作用是&lt;strong&gt;防止过拟合、提高模型泛化能力&lt;/strong&gt;。其中过拟合的简单理解就是训练的算法模型太过复杂，模型过分考虑了当前样本的结构。&lt;/p&gt;
&lt;p&gt;在早期的机器学习领域一般只是将范数惩罚叫做正则化技术，而在深度学习领域认为，能够显著减少方差，而不过度增加偏差的策略都可以认为是正则化技术。故&lt;strong&gt;推广的正则化技术&lt;/strong&gt;还有：扩增样本集、早停止、Dropout、集成学习、多任务学习、对抗训练、参数共享等。(具体见“花书 第七章 &lt;a href=&quot;http://www.deeplearningbook.org/contents/regularization.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Regularization for Deep Learning&lt;/a&gt;”），关于&lt;strong&gt;深度学习正则化&lt;/strong&gt;会在下一篇正则化文章中重点分析。&lt;/p&gt;
&lt;p&gt;转载自：&lt;a href=&quot;https://blog.csdn.net/BigData_Mining/article/details/81631249&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/BigData_Mining/article/details/81631249&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://talengu.github.io/public/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="正则化" scheme="https://talengu.github.io/public/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%AD%A3%E5%88%99%E5%8C%96/"/>
    
    
      <category term="AI" scheme="https://talengu.github.io/public/tags/AI/"/>
    
      <category term="ML" scheme="https://talengu.github.io/public/tags/ML/"/>
    
  </entry>
  
  <entry>
    <title>茅盾文学奖、诺贝尔文学奖</title>
    <link href="https://talengu.github.io/public/2019/02/05/readings/nobel_maodun_literature/"/>
    <id>https://talengu.github.io/public/2019/02/05/readings/nobel_maodun_literature/</id>
    <published>2019-02-05T08:00:04.000Z</published>
    <updated>2019-02-05T08:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>世界和民族的优秀作品。<br>漫漫长路，读书成长。</p><h2 id="茅盾文学奖"><a href="#茅盾文学奖" class="headerlink" title="茅盾文学奖"></a>茅盾文学奖</h2><p><strong>第十届茅盾文学奖获奖篇目 (2015—2018)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《人世间》</td><td>梁晓声</td><td>中国青年出版社</td></tr><tr><td>《牵风记》</td><td>徐怀中</td><td>人民文学出版社</td></tr><tr><td>《北上》</td><td>徐则臣</td><td>北京十月文艺出版社</td></tr><tr><td>《主角》</td><td>陈 彦</td><td>北京十月文艺出版社</td></tr><tr><td>《应物兄》</td><td>李 洱</td><td>人民文学出版社</td></tr></tbody></table><a id="more"></a><p><strong>第九届茅盾文学奖获奖篇目 (2011—2014)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《江南三部曲》</td><td>格　非</td><td>上海文艺出版社</td></tr><tr><td>《这边风景》</td><td>王　蒙</td><td>花城出版社</td></tr><tr><td>《生命册》</td><td>李佩甫</td><td>作家出版社</td></tr><tr><td>《繁花》</td><td>金宇澄</td><td>上海文艺出版社</td></tr><tr><td>《黄雀记》</td><td>苏　童</td><td>作家出版社</td></tr></tbody></table><p><strong>第八届茅盾文学奖获奖篇目 (2007—2010)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《你在高原》</td><td>张　炜</td><td>作家出版社</td></tr><tr><td>《天行者》</td><td>刘醒龙</td><td>人民文学出版社</td></tr><tr><td>《蛙》</td><td>莫　言</td><td>上海文艺出版社</td></tr><tr><td>《推拿》</td><td>毕飞宇</td><td>人民文学出版社</td></tr><tr><td>《一句顶一万句》</td><td>刘震云</td><td>长江文艺出版社</td></tr></tbody></table><p><strong>第七届茅盾文学奖获奖篇目 (2003—2006)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《秦腔》</td><td>贾平凹</td><td>作家出版社</td></tr><tr><td>《额尔古纳河右岸》</td><td>迟子建</td><td>北京十月文艺出版社</td></tr><tr><td>《湖光山色》</td><td>周大新</td><td>作家出版社</td></tr><tr><td>《暗算》</td><td>麦　家</td><td>世界知识出版社、人民文学出版社</td></tr></tbody></table><p><strong>第六届茅盾文学奖获奖篇目 (1999—2002)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《张居正》</td><td>熊召政</td><td>长江文艺出版社</td></tr><tr><td>《无字》</td><td>张　洁</td><td>北京十月文艺出版社</td></tr><tr><td>《历史的天空》</td><td>徐贵祥</td><td>人民文学出版社</td></tr><tr><td>《英雄时代》</td><td>柳建伟</td><td>人民文学出版社</td></tr><tr><td>《东藏记》</td><td>宗　璞</td><td>人民文学出版社</td></tr></tbody></table><p><strong>第五届茅盾文学奖获奖篇目 (1995—1998)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《抉择》</td><td>张　平</td><td>人民文学出版社</td></tr><tr><td>《尘埃落定》</td><td>阿　来</td><td>人民文学出版社</td></tr><tr><td>《长恨歌》</td><td>王安忆</td><td>作家出版社</td></tr><tr><td>《茶人三部曲》(一、二)</td><td>王旭烽</td><td>浙江文艺出版社</td></tr></tbody></table><p><strong>第四届茅盾文学奖获奖篇目 (1989—1994)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《战争和人》(一、二、三)</td><td>王　火</td><td>人民文学出版社</td></tr><tr><td>《白鹿原》（修订本）</td><td>陈忠实</td><td>人民文学出版社</td></tr><tr><td>《白门柳》(一、二)</td><td>刘斯奋</td><td>中国青年出版社</td></tr><tr><td>《骚动之秋》</td><td>刘玉民</td><td>人民文学出版社</td></tr></tbody></table><p><strong>第三届茅盾文学奖获奖篇目 (1985—1988)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《平凡的世界》</td><td>路　遥</td><td>中国文联出版公司</td></tr><tr><td>《少年天子》</td><td>凌　力</td><td>北京十月文艺出版社</td></tr><tr><td>《都市风流》</td><td>孙力、余小惠</td><td>浙江文艺出版社</td></tr><tr><td>《第二个太阳》</td><td>刘白羽</td><td>人民文学出版社</td></tr><tr><td>《穆斯林的葬礼》</td><td>霍　达</td><td>北京十月文艺出版社</td></tr><tr><td>荣　誉　奖</td><td></td><td></td></tr><tr><td>《浴血罗霄》</td><td>萧　克</td><td>解放军文艺出版社</td></tr><tr><td>《金瓯缺》</td><td>徐兴业</td><td>海峡文艺出版社</td></tr></tbody></table><p><strong>第二届茅盾文学奖获奖篇目 (1982—1984)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《黄河东流去》</td><td>李　准</td><td>北京出版社</td></tr><tr><td>《沉重的翅膀》（修订本）</td><td>张　洁</td><td>人民文学出版社</td></tr><tr><td>《钟鼓楼》</td><td>刘心武</td><td>人民文学出版社</td></tr></tbody></table><p><strong>第一届茅盾文学奖获奖篇目 (1977—1981)</strong></p><table><thead><tr><th>作品</th><th>作者</th><th>出版单位</th></tr></thead><tbody><tr><td>《许茂和他的女儿们》</td><td>周克芹</td><td>百花文艺出版社</td></tr><tr><td>《东方》</td><td>魏　巍</td><td>人民文学出版社</td></tr><tr><td>《将军吟》</td><td>莫应丰</td><td>人民文学出版社</td></tr><tr><td>《李自成》 （第二卷）</td><td>姚雪垠</td><td>中国青年出版社</td></tr><tr><td>《芙蓉镇》</td><td>古　华</td><td>人民文学出版社</td></tr><tr><td>《冬天里的春天》</td><td>李国文</td><td>人民文学出版社</td></tr></tbody></table><h2 id="诺贝尔文学奖"><a href="#诺贝尔文学奖" class="headerlink" title="诺贝尔文学奖"></a>诺贝尔文学奖</h2><p><a href="https://zh.wikipedia.org/wiki/諾貝爾文學獎得主列表" target="_blank" rel="noopener">link</a></p><p>2017年得主：黑石一雄</p><p>日裔英国作家</p><p>代表作：《长日留痕》《无可慰藉》《上海孤儿》《被掩埋的巨人》</p><p>获奖理由：他的小说带有强大的情感力量，解开了我们与世界连接的虚幻深渊。</p><p>2016年得主：鲍勃·迪伦</p><p>美国作家</p><p>代表作：《答案在风中飘》、《像一块滚石》、《时光慢慢流逝》</p><p>获奖理由：在伟大的美国民谣传统中创造出新的诗歌意境</p><p>2015年</p><p>得主：斯韦特兰娜·阿列克谢耶维奇（女）</p><p>白俄罗斯作家</p><p>代表作：《切尔诺贝利的回忆：核灾难口述史》</p><p>获奖理由：世界文坛最高水准的感人作品，讲述了这个时代的苦难和勇气。</p><p>2014年得主：帕特里克·莫迪亚诺</p><p>法国作家</p><p>代表作：《暗店街》《星形广场》《青春咖啡馆》</p><p>获奖理由：唤醒了对最难以捕捉的人类命运的记忆和揭露了对人类生活的占领。</p><p>2013年得主：艾丽斯·芒罗(女)</p><p>代表作：《快乐影子舞》《逃离》</p><p>获奖理由：当代短篇小说大师。</p><p>2012年得主：莫言</p><p>中国作家</p><p>代表作：《红高粱》《丰乳肥臀》《蛙》</p><p>获奖理由：用魔幻现实主义的写作手法，将民间故事、历史事件与当代背景融为一体。</p><p>2011年得主：托马斯·特兰斯特勒默</p><p>瑞典诗人</p><p>代表作：《十七首诗》《途中的秘密》</p><p>获奖理由：他以凝炼、简洁的形象，以全新视角带我们接触现实。</p><p>2010年得主：马里奥·巴尔加斯·略萨</p><p>秘鲁与西班牙双重国籍的作家及诗人</p><p>代表作：《绿房子》《世界末日之战》《城市与狗》</p><p>获奖理由：他“对权力结构的制图般的描绘和对个人反抗的精致描写”。</p><p>2009年得主：赫塔·米勒</p><p>罗马尼亚裔的德国女性小说家、诗人、散文家。</p><p>代表作：《呼吸钟摆》《河水奔流》《行走界线》《狐狸那时已是猎人》</p><p>获奖理由：专注于诗歌以及散文的率真，描写了失业人群的生活图景。</p><p>2008年得主：勒·克莱齐奥</p><p>代表作：《战争》</p><p>获奖理由：展现了新的起点、诗意的冒险和感官狂喜；作为探险者，发掘了隐藏于主流文明底部和外部的人性。</p><p>2007年得主：多丽丝·莱辛（女）</p><p>英国作家</p><p>代表作：《金色笔记》</p><p>获奖理由：她用怀疑、热情、构想的力量来审视一个分裂的文明，其作品如同一部女性经验的史诗。</p><p>2006年得主：奥尔罕·帕慕克</p><p>土耳其作家</p><p>代表作：《我的名字叫红》</p><p>获奖理由：在寻找故乡的忧郁灵魂时，发现了文化碰撞和融合中的新象征。</p><p>2005年得主：哈罗德·品特</p><p>英国剧作家。</p><p>代表作：《看房者》《生日晚会》《归家》</p><p>获奖理由：他的戏剧以诗和画的创造性，深入表现了人类长期置身其中的处境。</p><p>2004年得主：埃尔弗里德·耶利内克（女）</p><p>奥地利女作家。</p><p>代表作：《钢琴教师》《死者的孩子》</p><p>获奖理由：因为她的小说和戏剧具有音乐般的韵律，她的作品以非凡的充满激情的语言揭示了社会上的陈腐现象及其禁锢力的荒诞不经。</p><p>2003年得主：约翰·马克斯韦尔·库切</p><p>南非作家。</p><p>代表作：《耻》《幽暗之乡》</p><p>获奖理由：精准地刻画了众多假面具下的人性本质。</p><p>2002年得主：凯尔泰斯·伊姆雷</p><p>匈牙利作家。</p><p>代表作：《无形的命运》</p><p>获奖理由：表彰他对脆弱的个人在对抗强大的野蛮强权时痛苦经历的深刻刻画以及他独特的自传体文学风格。</p><p>2001年得主：维·苏·奈保尔</p><p>印度裔英国作家</p><p>代表作：《神秘的按摩师》《米格尔街》</p><p>获奖理由：其著作将极具洞察力的叙述与不为世俗左右的探索融为一体，是驱策我们从扭曲的历史中探寻真实的动力。</p><p>2000年得主：高行健</p><p>法籍华人，剧作家、小说家。</p><p>代表作：《灵山》</p><p>获奖理由：其作品的普遍价值，刻骨铭心的洞察力和语言的丰富机智，为中文小说和艺术戏剧开辟了新的道路。</p><p>1999年得主：君特·格拉斯</p><p>德国作家。</p><p>代表作：《铁皮鼓》</p><p>获奖理由：其嬉戏之中蕴含悲剧色彩的寓言描摹出了人类淡忘的历史面目。</p><p>1998年得主：若泽·萨拉马戈</p><p>葡萄牙记者、作家</p><p>代表作：《失明症漫记》</p><p>获奖理由：由于他那极富想象力、同情心和颇具反讽意味的作品,我们得以反复重温那一段难以捉摸的历史。</p><p>1997年得主：达里奥·福</p><p>意大利讽刺剧作家</p><p>代表作：《喜剧的神秘》《一个无政府主义者的死亡》</p><p>获奖理由：其在鞭笞权威，褒扬被蹂躏者可贵的人格品质方面所取得的成就堪与中世纪《弄臣》一书相媲美。</p><p>1996年得主：维斯瓦娃·辛波丝卡（女）</p><p>波兰诗人</p><p>代表作：《向自己提出问题》《呼唤雪人》</p><p>获奖理由：由于其在诗歌艺术中警辟精妙的反讽，挖掘出了人类一点一滴的现实生活背后历史更迭与生物演化的深意。</p><p>1995年得主：谢默斯·希尼</p><p>爱尔兰诗人</p><p>代表作：《通向黑暗之门》《在外过冬》</p><p>获奖理由：由于其作品洋溢着抒情之美,包容着深邃的伦理,揭示出日常生活和现实历史的奇迹。</p><p>1994年得主：大江健三郎</p><p>日本小说家</p><p>代表作：《个人的体验》《万延元年的足球队》</p><p>获奖理由：通过诗意的想象力,创造出一个把现实与神话紧密凝缩在一起的想象世界，描绘现代的芸芸众生相，给人们带来了冲击。</p><p>1993年得主：托妮·莫里森（女）</p><p>美国作家</p><p>代表作：《最蓝的眼睛》《所罗门之歌》</p><p>获奖理由：其作品想象力丰富,富有诗意，显示了美国现实生活的重要方面。</p><p>1992年得主：德里克·沃尔科特</p><p>圣卢西亚诗人</p><p>代表作：《西印度群岛》</p><p>获奖理由：他的作品具有巨大的启发性和广阔的历史视野，是其献身多种文化的结果。</p><p>1991年得主：纳丁·戈迪默（女）</p><p>南非作家</p><p>代表作：《七月的人民》</p><p>获奖理由：以强烈而直接的笔触，描写周围复杂的人际与社会关系，其史诗般壮丽的作品，对人类大有裨益。</p><p>1990年得主：奥克塔维奥·帕斯</p><p>墨西哥诗人</p><p>代表作：《太阳石》</p><p>获奖理由：他的作品充满激情，视野开阔，渗透着感悟的智慧并体现了完美的人道主义。</p><p>1989年得主：卡米洛·何塞·塞拉</p><p>代表作：《为亡灵弹奏》</p><p>获奖理由：带有浓郁情感的丰富而精简的描写，对人类弱点达到的令人难以企及的想象力。</p><p>1988年得主：纳吉布·马哈富兹</p><p>埃及作家。</p><p>代表作：《街魂》</p><p>获奖理由：他通过大量刻画入微的作品—洞察一切的现实主义，唤起人们树立雄心—形成了全人类所欣赏的阿拉伯语言艺术。</p><p>1987年得主：约瑟夫·布罗茨基</p><p>苏裔美籍诗人</p><p>代表作：《从彼得堡到斯德哥尔摩》</p><p>获奖理由：他的作品超越时空限制，无论在文学上或是敏感问题方面都充分显示出他广阔的思想及浓郁的诗意。</p><p>1986年得主：沃莱·索因卡</p><p>尼日利亚剧作家、诗人、小说家、评论家</p><p>代表作：《雄狮与宝石》</p><p>获奖理由：他以广博的文化视野创作了富有诗意的关于人生的戏剧。</p><p>1985年得主：克洛德·西蒙</p><p>法国小说家</p><p>代表作：《弗兰德公路·农事诗》</p><p>获奖理由：由于他善于把诗人和画家的丰富想象与深刻的时间意识融为一 体，对人类的生存状况进行了深入的描写。</p><p>1984年得主：雅罗斯拉夫·塞弗尔特</p><p>捷克诗人</p><p>代表作：《紫罗兰》</p><p>获奖理由：他的诗富于独创性、新颖、栩栩如生，表现了人的不屈不挠精神和多才多艺的渴求解放的形象。</p><p>1983年得主：威廉·戈尔丁</p><p>英国作家</p><p>代表作：《蝇王·金字塔》</p><p>获奖理由：具有清晰的现实主义叙述技巧以及虚构故事的多样性与普遍性，阐述了今日世界人类的状况。</p><p>1982年得主：加夫列尔·加西亚·马尔克斯</p><p>哥伦比亚记者、作家</p><p>代表作：《百年孤独》《霍乱时期的爱情》</p><p>获奖理由：由于其长篇小说以结构丰富的想象世界，其中糅混着魔幻与现实，反映出一整个大陆的生命矛盾。</p><p>1981年得主：埃利亚斯·卡内蒂</p><p>英国德语作家</p><p>代表作：《迷茫》</p><p>获奖理由：作品具有宽广的视野、丰富的思想和艺术力量。</p><p>1980年得主：切斯拉夫·米沃什</p><p>波兰诗人</p><p>代表作：《拆散的笔记簿》</p><p>获奖理由：不妥协的敏锐洞察力，描述了人在激烈冲突的世界中的暴露状态。</p><p>1979年得主：奥德修斯·埃里蒂斯</p><p>希腊诗人</p><p>代表作：《英雄挽歌》</p><p>获奖理由：他的诗，以希腊传统为背景，用感觉的力量和理智的敏锐，描写现代人为自由和创新而奋斗。</p><p>1978年得主：艾萨克·巴什维斯·辛格</p><p>美国作家</p><p>代表作：《魔术师·原野王》</p><p>获奖理由：他的充满激情的叙事艺术，这种既扎根于波兰人的文化传统，又反映了人类的普遍处境。</p><p>1977年得主：阿莱克桑德雷·梅洛</p><p>西班牙诗人</p><p>代表作：《天堂的影子》</p><p>获奖理由：他的作品继承了西班牙抒情诗的传统和吸取了今天流派的风格，描述了人在宇宙和当今社会中的状况。</p><p>1976年得主：索尔·贝娄</p><p>美国作家</p><p>代表作：《赫索格》</p><p>获奖理由：由于他的作品对人性的了解，以及对当代文化的敏锐透视。</p><p>1975年得主：埃乌杰尼奥·蒙塔莱</p><p>意大利诗人</p><p>代表作：《生活之恶》</p><p>获奖理由：由于他杰出的诗歌拥有伟大的艺术性，在不适合幻想的人生里，诠释了人类的价值。</p><p>1974年得主1：哈里·埃德蒙·马丁逊</p><p>瑞典诗人</p><p>代表作：《露珠里的世界》</p><p>获奖理由：他的作品透过一滴露珠反映出整个世界。</p><p>得主2：埃温特·约翰逊</p><p>瑞典作家</p><p>代表作：《乌洛夫的故事》</p><p>获奖理由：以自由为目的，而致力于历史的、现代的广阔观点之叙述艺术。</p><p>1973年得主：帕特里克·怀特</p><p>澳大利亚小说家、剧作家</p><p>代表作：《风暴眼》</p><p>获奖理由：由于他史诗与心理叙述艺术，并将一个崭新的大陆带进文学中。</p><p>1972年得主： 亨利希·伯尔</p><p>德国作家</p><p>代表作：《女士及众生相》</p><p>获奖理由：为了表扬他的作品，这些作品兼具有对时代广阔的透视和塑造人物的细腻技巧，并有助于德国文学的振兴。</p><p>1971年得主： 巴勃鲁·聂鲁达</p><p>智利诗人</p><p>代表作：《情诗·哀诗·赞诗》</p><p>获奖理由：诗歌具有自然力般的作用，复苏了一个大陆的命运与梦想。</p><p>1970年得主：亚历山大·索尔仁尼琴</p><p>苏联作家</p><p>代表作：《癌症楼》《古拉格群岛》</p><p>获奖理由：由于他作品中的道德力量，籍著它，他继承了俄国文学不可或缺的传统。</p><p>1969年得主：萨缪尔·贝克特</p><p>法国作家</p><p>代表作：《等待戈多》</p><p>获奖理由：他那具有奇特形式的小说和戏剧作品，使现代人从精神困乏中得到振奋。</p><p>1968年得主：川端康成</p><p>日本小说家</p><p>代表作：《雪国·千只鹤·古都》</p><p>获奖理由：由于他高超的叙事性作品以非凡的敏锐表现了日本人精神特质。</p><p>1967年得主：安赫尔·阿斯图里亚斯</p><p>危地马拉诗人、小说家</p><p>代表作：《玉米人》</p><p>获奖理由：因为他的作品落实于自己的民族色彩和印第安传统，而显得鲜明生动。</p><p>1966年得主1：奈莉·萨克斯（女）</p><p>瑞典诗人</p><p>代表作：《逃亡》</p><p>获奖理由：因为她杰出的抒情与戏剧作品，以感人的力量阐述了以色列的命运。</p><p>得主2：萨缪尔·约瑟夫·阿格农以色列作家</p><p>代表作：《行为之书》</p><p>获奖理由：他的叙述技巧深刻而独特，并从犹太民族的生命汲取主题。</p><p>1965年得主：米哈伊尔·亚历山大罗维奇·肖洛霍夫</p><p>苏联作家</p><p>代表作：《静静的顿河》</p><p>获奖理由：由于这位作家在那部关于顿河流域农村之史诗作品中所流露的活力与艺术热忱——他籍这两者在那部小说里描绘了俄罗斯民族生活之某一历史层面。</p><p>1964年得主：让·保罗·萨特</p><p>法国哲学家、作家</p><p>代表作：《词语》</p><p>获奖理由：因为他那思想丰富、充满自由气息和探求真理精神的作品对我们时代发生了深远影响。</p><p>1963年得主：乔治·塞菲里斯</p><p>希腊诗人</p><p>代表作：《“画眉鸟”号》</p><p>获奖理由：他的卓越的抒情诗作，是对希腊文化的深刻感受的产物。</p><p>1962年得主：约翰·斯坦贝克</p><p>美国作家</p><p>代表作：《人鼠之间》</p><p>获奖理由：通过现实主义的、寓于想象的创作，表现出富于同情的幽默和对社会的敏感观察。</p><p>1961年得主：伊沃·安德里奇</p><p>南斯拉夫小说家</p><p>代表作：《桥·小姐》</p><p>获奖理由：由于他作品中史诗般的力量——他籍著它在祖国的历史中追寻主题，并描绘人的命运。</p><p>1960年得主：圣琼·佩斯</p><p>法国诗人和剧作家</p><p>代表作：《蓝色恋歌》</p><p>获奖理由：由于他高超的飞越与丰盈的想象，表达了一种关于如今这个时代之富于意象的沉思。</p><p>1959年得主：萨瓦多尔·夸西莫多</p><p>意大利诗人</p><p>代表作：《水与土》</p><p>获奖理由：由于他的抒情诗，以古典的火焰表达了我们这个时代中，生命的悲剧性体验。</p><p>1958年得主：鲍里斯·列昂尼多维奇·帕斯捷尔纳克</p><p>苏联俄罗斯诗人、小说家</p><p>代表作：《日瓦戈医生》</p><p>获奖理由：在当代抒情诗和俄国的史诗传统上，他都获得了极为重大的成就。</p><p>1957年得主：阿尔贝·加缪</p><p>法国作家</p><p>代表作：《局外人》</p><p>获奖理由：由于他重要的著作，在这著作中他以明察而热切的眼光照亮了我们这时代人类良心的种种问题。</p><p>1956年得主：胡安·拉蒙·希梅内斯</p><p>西班牙诗人</p><p>代表作：《悲哀的咏叹调》</p><p>获奖理由：由于他的西班牙抒情诗，成了高度精神和纯粹艺术的最佳典范。</p><p>1955年得主：赫尔多尔·奇里扬·拉斯克内斯</p><p>冰岛作家</p><p>代表作：《渔家女》</p><p>获奖理由：为了他在作品中所流露的生动、史诗般的力量，使冰岛原已十分优秀的叙述文学技巧更加瑰丽多姿。</p><p>1954年得主：欧内斯特·海明威</p><p>美国作家</p><p>代表作：《老人与海》</p><p>获奖理由：因为他精通于叙事艺术，突出地表现于其近著《老人与海》之中；同时也因为他对当代文体风格之影响。</p><p>1953年得主：温斯顿·丘吉尔</p><p>英国政治家、历史学家、传记作家</p><p>代表作：《不需要的战争》</p><p>获奖理由：由于他在描述历史与传记方面的造诣，同时由于他那捍卫崇高的人的价值的光辉演说。</p><p>1952年得主：弗朗索瓦·莫里亚克</p><p>法国小说家</p><p>代表作：《爱的荒漠》</p><p>获奖理由：因为他在他的小说中剖析了人生的戏剧，对心灵的深刻观察和紧凑的艺术。</p><p>1951年得主：帕尔·费比安·拉格奎斯特</p><p>瑞典诗人、戏剧家、小说家</p><p>代表作：《大盗巴拉巴》</p><p>获奖理由：由于他在作品中为人类面临的永恒的疑难寻求解答所表现出的艺术活力和真正独立的见解。</p><p>1950年得主：帕特兰·亚瑟·威廉·罗素</p><p>英国数学家、哲学家</p><p>代表作：《哲学—数学—文学》</p><p>获奖理由：表彰他所写的捍卫人道主义理想和思想自由的多种多样意义重大的作品。</p><p>1949年得主：威廉·福克纳</p><p>美国作家</p><p>代表作：《我弥留之际》《喧哗与骚动》</p><p>获奖理由：因为他对当代美国小说做出了强有力的和艺术上无与伦比的贡献。</p><p>1948年得主：托马斯·斯特恩斯·艾略特</p><p>英美诗人、剧作家、批评家</p><p>代表作：《四个四重奏》</p><p>获奖理由：对于现代诗之先锋性的卓越贡献。</p><p>1947年得主：安德烈·纪德</p><p>法国作家、评论家</p><p>代表作：《田园交响曲》《背德者》</p><p>获奖理由：为了他广泛的与有艺术质地的著作，在这些著作中，他以无所畏惧的对真理的热爱，并以敏锐的心理学洞察力，呈现了人性的种种问题与处境。</p><p>1946年得主：赫尔曼·黑塞</p><p>德国作家</p><p>代表作：《荒原狼》</p><p>获奖理由：他那些灵思盎然的作品——它们一方面具有高度的创意和深刻的洞见，一方面象征古典的人道理想与高尚的风格。</p><p>1945年得主：加夫列拉·米斯特拉尔（女）</p><p>智利诗人</p><p>代表作：《柔情》</p><p>获奖理由：她那由强烈感情孕育而成的抒情诗，已经使得她的名字成为整个拉丁美洲世界渴求理想的象征。</p><p>1944年得主：约翰内斯·威廉·扬森</p><p>丹麦小说家、诗人</p><p>代表作：《漫长的旅行》</p><p>获奖理由：由于籍著丰富有力的诗意想象，将胸襟广博的求知心和大胆的、清新的创造性风格结合起来。</p><p>1940年-1943年   未颁奖</p><p>1939年得主：弗兰斯·埃米尔·西兰帕</p><p>芬兰作家</p><p>代表作：《少女西丽亚》</p><p>获奖理由：由于他在描绘两样互相影响的东西——他祖国的本质，以及该国农民的生活时——所表现的深刻了解与细腻艺术。</p><p>1938年得主：赛珍珠（女）</p><p>美国作家</p><p>代表作：《大地》三部曲</p><p>获奖理由：她对于中国农民生活的丰富和真正史诗气概的描述，以及她自传性的杰作。</p><p>1937年得主：罗杰·马丁·杜·加尔</p><p>法国小说家</p><p>代表作：《蒂伯—家》</p><p>获奖理由：由于在他的长篇小说《蒂伯一家》中表现出来的艺术魅力和真实性。这是对人类生活面貌的基本反映。</p><p>1936年得主：尤金·奥尼尔</p><p>美国剧作家</p><p>代表作：《天边外》</p><p>获奖理由：由于他剧作中所表现的力量、热忱与深挚的感情——它们完全符合悲剧的原始概念。</p><p>1935年   未颁奖</p><p>1934年得主：路伊吉·皮兰德娄</p><p>意大利说家、戏剧家</p><p>代表作：《寻找自我》《六个寻找剧作家的角色》</p><p>获奖理由：他果敢而灵巧地复兴了戏剧艺术和舞台艺术。</p><p>1933年得主：伊凡·亚历克塞维奇·蒲宁</p><p>俄国作家</p><p>代表作：《米佳的爱》</p><p>获奖理由：由于他严谨的艺术才能，使俄罗斯古典传统在散文中得到继承。</p><p>1932年得主：约翰·高尔斯华绥</p><p>英国小说家、剧作家</p><p>代表作：《有产者》</p><p>获奖理由：为其描述的卓越艺术——这种艺术在《福尔赛世家》中达到高峰。</p><p>1931年得主：埃利克·阿克塞尔·卡尔费尔德</p><p>瑞典诗人</p><p>代表作：《荒原和爱情》</p><p>获奖理由：由于他在诗作的艺术价值上，从没有人怀疑过。</p><p>1930年得主：辛克莱·刘易斯</p><p>美国作家</p><p>代表作：《巴比特》</p><p>获奖理由：由于他充沛有力、切身和动人的叙述艺术，和他以机智幽默去开创新风格的才华。</p><p>1929年得主：保尔·托马斯·曼</p><p>德国作家</p><p>代表作：《布登勃洛克一家》《魔山》</p><p>获奖理由：由于他那在当代文学中具有日益巩固的经典地位的伟大小说《布登勃洛克一家》。</p><p>1928年得主：西格里德·温塞特（女）</p><p>挪威作家</p><p>代表作：《新娘—主人—十字架》</p><p>获奖理由：主要是由于她对中世纪北国生活之有力描绘。</p><p>1927年得主：亨利·柏格森</p><p>法国哲学家</p><p>代表作：《创造进化论》</p><p>获奖理由：因为他那丰富的且充满生命力的思想，以及所表现出来的光辉灿烂的技巧。</p><p>1926年得主：格拉齐亚·黛莱达（女）</p><p>意大利作家</p><p>代表作：《邪恶之路》</p><p>获奖理由：为了表扬她由理想主义所激发的作品，以浑柔的透彻描绘了她所生长的岛屿上的生活；在洞察人类一般问题上，表现的深度与怜悯。</p><p>1925年得主：乔治·萧伯纳</p><p>爱尔兰戏剧家</p><p>代表作：《圣女贞德》</p><p>获奖理由：由于他那些充满理想主义及人情味的作品——它们那种激动性讽刺，常涵蕴着一种高度的诗意美。</p><p>1924年得主：弗拉迪斯拉夫·莱蒙特</p><p>波兰作家</p><p>代表作：《福地》《农夫们》</p><p>获奖理由：我们颁奖给他，是因为他的民族史诗《农夫们》写得很出色。</p><p>1923年得主：威廉·勃特勒·叶芝</p><p>爱尔兰诗人、剧作家</p><p>代表作：《丽达与天鹅》</p><p>获奖理由：由于他那永远充满着灵感的诗，它们透过高度的艺术形式展现了整个民族的精神。</p><p>1922年得主：哈辛特·贝纳文特·伊·马丁内斯</p><p>西班牙作家</p><p>代表作：《不吉利的姑娘》</p><p>获奖理由：由于他以适当方式，延续了戏剧之灿烂传统。</p><p>1921年得主：阿纳托尔·法郎士</p><p>法国作家、文学评论家、社会活动家</p><p>代表作：《苔依丝》</p><p>获奖理由：他辉煌的文学成就，乃在于他高尚的文体、怜悯的人道同情、迷人的魅力，以及一个真正法国性情所形成的特质。</p><p>1920年得主：克努特·汉姆生</p><p>挪威小说家、戏剧家、诗人</p><p>代表作：《大地硕果—畜牧曲》</p><p>获奖理由：为了他划时代的巨著《土地的成长》。</p><p>1919年得主：卡尔·施皮特勒</p><p>瑞士诗人、小说家</p><p>代表作：《奥林帕斯之春》</p><p>获奖理由：特别推崇他在史诗《奥林帕斯之春》的优异表现。</p><p>1918年  未颁奖</p><p>1917年得主1：亨利克·彭托皮丹</p><p>丹麦小说家</p><p>代表作：《天国》</p><p>获奖理由：由于他对当前丹麦生活的忠实描绘。</p><p>得主2：卡尔·耶勒鲁普</p><p>丹麦作家</p><p>代表作：《磨坊血案》</p><p>获奖理由：因为他多样而丰富的诗作——它们蕴含了高超的理想。</p><p>1916年得主：魏尔纳·海顿斯坦姆</p><p>瑞典诗人、小说家</p><p>代表作：《朝圣年代》</p><p>获奖理由：褒奖他在瑞典文学新纪元中所占之重要代表地位。</p><p>1915年得主：罗曼·罗兰</p><p>法国作家、音乐评论家</p><p>代表作：《约翰·克利斯朵夫》</p><p>获奖理由：文学作品中的高尚理想和他在描绘各种不同类型人物时所具有的同情和对真理的热爱。</p><p>1914年    未颁奖</p><p>1913年得主：罗宾德拉纳特·泰戈尔</p><p>印度诗人、社会活动家主</p><p>代表作：《吉檀枷利—饥饿石头》</p><p>获奖理由：由于他那至为敏锐、清新与优美的诗；这诗出之于高超的技巧，并由于他自己用英文表达出来，使他那充满诗意的思想业已成为西方文学的一部分。</p><p>1912年得主：盖哈特·霍普特曼</p><p>德国剧作家、诗人</p><p>代表作：《群鼠》</p><p>获奖理由：欲以表扬他在戏剧艺术领域中丰硕、多样的出色成就。</p><p>1911年得主：莫里斯·梅特林克</p><p>比利时剧作家、诗人、散文家</p><p>代表作：《花的智慧》</p><p>获奖理由：由于他在文学上多方面的表现，尤其是戏剧作品，不但想象丰富，充满诗意的奇想，有时虽以神话的面貌出现，还是处处充满了深刻的启示。这种启示奇妙地打动了读者的心弦，并且激发了他们的想象。</p><p>1910年得主：保尔·约翰·路德维希·冯·海塞</p><p>德国作家</p><p>代表作：《特雷庇姑娘》</p><p>获奖理由：表扬这位抒情诗人、戏剧家、小说家以及举世闻名的短篇小说家，在他漫长而多产的创作生涯中，所达到的充满理想主义精神之艺术至境。</p><p>1909年得主：西尔玛·拉格洛夫(女)</p><p>瑞典作家</p><p>代表作：《尼尔斯骑鹅旅行记》</p><p>获奖理由：由于她作品中特有的高贵的理想主义、丰富的想象力、平易而优美的风格。</p><p>1908年得主：鲁道尔夫·欧肯</p><p>德国哲学家</p><p>代表作：《精神生活漫笔》</p><p>获奖理由：他对真理的热切追求、他对思想的贯通能力、他广阔的观察，以及他在无数作品中，辩解并阐释一种理想主义的人生哲学时，所流露的热诚与力量。</p><p>1907年得主：约瑟夫·鲁德亚德·吉卜林</p><p>英国小说家、诗人</p><p>代表作：《老虎！老虎！》</p><p>获奖理由：这位世界名作家的作品以观察入微、想象独特、气概雄浑、叙述卓越见长。</p><p>1906年得主：乔祖埃·卡尔杜齐</p><p>意大利诗人、文艺批评家</p><p>代表作：《青春诗》</p><p>获奖理由：不仅是由于他精深的学识和批判性的研究，更重要是为了颂扬他诗歌杰作中所具有的特色、创作气势，清新的风格和抒情的魅力。</p><p>1905年得主：亨利克·显克维支</p><p>波兰小说家</p><p>代表作：《第三个女人》《你往何处去》</p><p>获奖理由：由于他在历史小说写作上的卓越成就。</p><p>1904年得主1：何塞·埃切加赖</p><p>西班牙戏剧家、诗人</p><p>代表作：《伟大的牵线人》</p><p>获奖理由：由于它那独特和原始风格的丰富又杰出，作品恢复了西班牙喜剧的伟大传统。</p><p>得主2：弗雷德里克·米斯塔尔</p><p>法国诗人</p><p>代表作：《金岛》</p><p>获奖理由：他的诗作蕴涵之清新创造性与真正的感召力，它忠实地反映了他民族的质朴精神。</p><p>1903年得主：比昂斯滕·比昂松</p><p>挪威戏剧家、诗人、小说家</p><p>代表作：《挑战的手套》</p><p>获奖理由：他以诗人鲜活的灵感和难得的赤子之心，把作品写得雍容、华丽而又缤纷。</p><p>1902年得主：特奥多尔·蒙森</p><p>德国历史学家</p><p>代表作：《罗马史》</p><p>获奖理由：今世最伟大的纂史巨匠，此点于其巨著《罗马史》中表露无疑。</p><p>1901年得主：苏利·普吕多姆</p><p>法国诗人</p><p>代表作：《孤独与深思》</p><p>获奖理由：是高尚的理想、完美的艺术和罕有的心灵与智慧的实证。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;世界和民族的优秀作品。&lt;br&gt;漫漫长路，读书成长。&lt;/p&gt;
&lt;h2 id=&quot;茅盾文学奖&quot;&gt;&lt;a href=&quot;#茅盾文学奖&quot; class=&quot;headerlink&quot; title=&quot;茅盾文学奖&quot;&gt;&lt;/a&gt;茅盾文学奖&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;第十届茅盾文学奖获奖篇目 (2015—2018)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;作品&lt;/th&gt;
&lt;th&gt;作者&lt;/th&gt;
&lt;th&gt;出版单位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;《人世间》&lt;/td&gt;
&lt;td&gt;梁晓声&lt;/td&gt;
&lt;td&gt;中国青年出版社&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;《牵风记》&lt;/td&gt;
&lt;td&gt;徐怀中&lt;/td&gt;
&lt;td&gt;人民文学出版社&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;《北上》&lt;/td&gt;
&lt;td&gt;徐则臣&lt;/td&gt;
&lt;td&gt;北京十月文艺出版社&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;《主角》&lt;/td&gt;
&lt;td&gt;陈 彦&lt;/td&gt;
&lt;td&gt;北京十月文艺出版社&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;《应物兄》&lt;/td&gt;
&lt;td&gt;李 洱&lt;/td&gt;
&lt;td&gt;人民文学出版社&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://talengu.github.io/public/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="文学" scheme="https://talengu.github.io/public/tags/%E6%96%87%E5%AD%A6/"/>
    
      <category term="信息类" scheme="https://talengu.github.io/public/tags/%E4%BF%A1%E6%81%AF%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>[译] Face Detection – OpenCV, Dlib and Deep Learning ( C++ / Python )</title>
    <link href="https://talengu.github.io/public/2018/11/12/cv/FaceDetectionComparison/"/>
    <id>https://talengu.github.io/public/2018/11/12/cv/FaceDetectionComparison/</id>
    <published>2018-11-12T10:00:00.000Z</published>
    <updated>2018-11-12T10:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>本文为翻译文章。原文地址 <a href="https://www.learnopencv.com/face-detection-opencv-dlib-and-deep-learning-c-python/" target="_blank" rel="noopener">https://www.learnopencv.com/face-detection-opencv-dlib-and-deep-learning-c-python/</a> </p><p>在这篇文章中，作者讨论使用了OpenCV或Dlib的多种人脸检测的代码，并给出性能分析。作者使用的 Face Detector 包括以下四个，后面分别给出 c++ 和 python 实现。</p><ol><li>OpenCV 的 Haar Cascade Face Detector</li><li>OpenCV 的 Deep Learning based Face Detector</li><li>Dlib 的 HoG Face Detector</li><li>Dlib 的 Deep Learning based Face Detector</li></ol><p>作者限于篇幅没有对对理论进行深入解读，只讨论框架的使用，同时分享一些应用上的选择权衡的经验。</p><p>结论：在多数场景中，我们提前不知道图片大小，因此 选用 OpenCV – DNN 相当快也很精确，甚至对于小人脸也不错，各种人脸角度也可以。选用这个在大多情况下是最优的。</p><p><a href="https://github.com/spmallick/learnopencv/tree/master/FaceDetectionComparison" target="_blank" rel="noopener">code FaceDetectionComparison</a> 说明：为了使文章显得简洁一些，在文中只提供关键的代码片段。在github项目中详细代码，包括每个方法独立的代码和整合在一起的cpp和py文件（run-all.py 和 run-all.cpp），同时里面也有运行代码所使用的人脸检测模型。</p><a id="more"></a><p><center><iframe width="100%" height="360" frameborder="0" src="http://v.qq.com/iframe/player.html?vid=k07615vrzj8&tiny=0&auto=0" allowfullscreen></iframe></center></p><blockquote><p>实验的图片尺寸是  image size 300×300</p></blockquote><h2 id="1-OpenCV-Haar"><a href="#1-OpenCV-Haar" class="headerlink" title="1. OpenCV-Haar"></a>1. OpenCV-Haar</h2><p>在2001年，Viola 和 Jones提出Haar Cascade 特征为基础的 Face Detector，在以后的多年内都是最优的人脸检测算法。以他们的算法为基础人们做了很多改进。OpenCV提供了很多Haar特征的模型算法，更多的Haar特征模型 <strong><a href="https://github.com/opencv/opencv/tree/master/data/haarcascades" target="_blank" rel="noopener">here</a></strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">faceCascade = cv2.CascadeClassifier(<span class="string">'./haarcascade_frontalface_default.xml'</span>)</span><br><span class="line">faces = faceCascade.detectMultiScale(frameGray)</span><br><span class="line"><span class="keyword">for</span> face <span class="keyword">in</span> faces:</span><br><span class="line">    x1, y1, w, h = face</span><br><span class="line">    x2 = x1 + w</span><br><span class="line">    y2 = y1 + h</span><br></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">faceCascadePath = <span class="string">"./haarcascade_frontalface_default.xml"</span>;</span><br><span class="line">faceCascade.load( faceCascadePath )</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Rect&gt; faces;</span><br><span class="line">faceCascade.detectMultiScale(frameGray, faces);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; faces.size(); i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> x1 = faces[i].x;</span><br><span class="line">  <span class="keyword">int</span> y1 = faces[i].y;</span><br><span class="line">  <span class="keyword">int</span> x2 = faces[i].x + faces[i].width;</span><br><span class="line">  <span class="keyword">int</span> y2 = faces[i].y + faces[i].height;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对图片灰度变化（grayscale）后，再应用 haar cascade 特征，输出是脸的list。list中每个item有四个element 分别为 top-left corner的(x, y) 、检测出来脸的大小(width, height) 。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>在CPU上几乎是实时的（real-time）</li><li>简单的框架 （Simple Architecture）</li><li>能检测不同大小的脸 （different scales）</li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>主要缺点是有很多错误的预测（False predictions），会多预测出人脸。</li><li>人脸非正面效果不好 （non-frontal）</li><li>人脸遮挡效果不好 （under occlusion）</li></ol><h2 id="2-OpenCV-DNN"><a href="#2-OpenCV-DNN" class="headerlink" title="2. OpenCV-DNN"></a>2. OpenCV-DNN</h2><p>在 OpenCV 3.3 中引入这个方法。DNN模型使用SSD <strong><a href="https://arxiv.org/abs/1512.02325" target="_blank" rel="noopener">Single-Shot-Multibox detector</a></strong>框架和  ResNet-10 特征提取网络（backbone）。这个模型喂的数据是从网上采集的，但是训练的源代码没有公开。OpenCV提供了2个模型文件。</p><ol><li>Float 16 位版本模型，使用原始的 caffe 训练  (5.4 MB)</li><li>8 bit quantized 版本模型，使用 Tensorflow 训练 (2.7 MB)</li></ol><p>代码 <a href="https://github.com/spmallick/learnopencv/tree/master/FaceDetectionComparison" target="_blank" rel="noopener">FaceDetectionComparison</a>  里面放了这两个模型文件。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><h4 id="Python-1"><a href="#Python-1" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DNN = <span class="string">"TF"</span></span><br><span class="line"><span class="keyword">if</span> DNN == <span class="string">"CAFFE"</span>:</span><br><span class="line">    modelFile = <span class="string">"res10_300x300_ssd_iter_140000_fp16.caffemodel"</span></span><br><span class="line">    configFile = <span class="string">"deploy.prototxt"</span></span><br><span class="line">    net = cv2.dnn.readNetFromCaffe(configFile, modelFile)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    modelFile = <span class="string">"opencv_face_detector_uint8.pb"</span></span><br><span class="line">    configFile = <span class="string">"opencv_face_detector.pbtxt"</span></span><br><span class="line">    net = cv2.dnn.readNetFromTensorflow(modelFile, configFile)</span><br></pre></td></tr></table></figure><h4 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> caffeConfigFile = <span class="string">"./deploy.prototxt"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> caffeWeightFile = <span class="string">"./res10_300x300_ssd_iter_140000_fp16.caffemodel"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> tensorflowConfigFile = <span class="string">"./opencv_face_detector.pbtxt"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> tensorflowWeightFile = <span class="string">"./opencv_face_detector_uint8.pb"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">ifdef</span> CAFFE</span></span><br><span class="line"></span><br><span class="line">  Net net = cv::dnn::readNetFromCaffe(caffeConfigFile, caffeWeightFile);</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line">  Net net = cv::dnn::readNetFromTensorflow(tensorflowWeightFile, tensorflowConfigFile);</span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>caffe 和 Tensorflow 框架加载模型的代码。使用 Float 16 的 Caffe 模型，需要 caffemodel 和 prototxt 文件。使用 8 bit quantized 的 Tensorflow 模型，需要 Tensorflow 配置文件和模型。</p><h4 id="Python-2"><a href="#Python-2" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">blob = cv2.dnn.blobFromImage(frameOpencvDnn, <span class="number">1.0</span>, (<span class="number">300</span>, <span class="number">300</span>), [<span class="number">104</span>, <span class="number">117</span>, <span class="number">123</span>], <span class="literal">False</span>, <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">net.setInput(blob)</span><br><span class="line">detections = net.forward()</span><br><span class="line">bboxes = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(detections.shape[<span class="number">2</span>]):</span><br><span class="line">    confidence = detections[<span class="number">0</span>, <span class="number">0</span>, i, <span class="number">2</span>]</span><br><span class="line">    <span class="keyword">if</span> confidence &gt; conf_threshold:</span><br><span class="line">        x1 = int(detections[<span class="number">0</span>, <span class="number">0</span>, i, <span class="number">3</span>] * frameWidth)</span><br><span class="line">        y1 = int(detections[<span class="number">0</span>, <span class="number">0</span>, i, <span class="number">4</span>] * frameHeight)</span><br><span class="line">        x2 = int(detections[<span class="number">0</span>, <span class="number">0</span>, i, <span class="number">5</span>] * frameWidth)</span><br><span class="line">        y2 = int(detections[<span class="number">0</span>, <span class="number">0</span>, i, <span class="number">6</span>] * frameHeight)</span><br></pre></td></tr></table></figure><h4 id="C-2"><a href="#C-2" class="headerlink" title="C++"></a>C++</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CAFFE</span></span><br><span class="line">cv::Mat inputBlob = cv::dnn::blobFromImage(frameOpenCVDNN, inScaleFactor, cv::Size(inWidth, inHeight), meanVal, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">cv::Mat inputBlob = cv::dnn::blobFromImage(frameOpenCVDNN, inScaleFactor, cv::Size(inWidth, inHeight), meanVal, <span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">net.setInput(inputBlob, <span class="string">"data"</span>);</span><br><span class="line">cv::Mat detection = net.forward(<span class="string">"detection_out"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function">cv::Mat <span class="title">detectionMat</span><span class="params">(detection.size[<span class="number">2</span>], detection.size[<span class="number">3</span>], CV_32F, detection.ptr&lt;<span class="keyword">float</span>&gt;())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; detectionMat.rows; i++)</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">float</span> confidence = detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (confidence &gt; confidenceThreshold)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">int</span> x1 = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">3</span>) * frameWidth);</span><br><span class="line">         <span class="keyword">int</span> y1 = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">4</span>) * frameHeight);</span><br><span class="line">         <span class="keyword">int</span> x2 = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">5</span>) * frameWidth);</span><br><span class="line">         <span class="keyword">int</span> y2 = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(detectionMat.at&lt;<span class="keyword">float</span>&gt;(i, <span class="number">6</span>) * frameHeight);</span><br><span class="line"></span><br><span class="line">        cv::rectangle(frameOpenCVDNN, cv::Point(x1, y1), cv::Point(x2, y2), cv::Scalar(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的代码里面，图像转为blob输入进network里，利用前向传播函数forward()，得到一个4-D matrix。 #TODO :这里不是很理解，代码跑起来看一下？？？</p><ul><li>The 3rd dimension iterates over the detected faces. (i is the iterator over the number of faces)</li><li>The fourth dimension contains information about the bounding box and score for each face. For example, detections[0,0,0,2] gives the confidence score for the first face, and detections[0,0,0,3:6] give the bounding box.</li></ul><p>The output coordinates of the bounding box are normalized between [0,1]. Thus the coordinates should be multiplied by the height and width of the original image to get the correct bounding box on the image.</p><h3 id="优点（merits）"><a href="#优点（merits）" class="headerlink" title="优点（merits）"></a>优点（merits）</h3><ol><li>在本文四个方法中最精确（Most accurate）</li><li>可以在CPU上实时运行（real-time）</li><li>人脸不同方向效果不错（上下左右，侧脸等）up, down, left, right, side-face etc</li><li>人脸不同大小效果不错哦（various scales, big and tiny OK）</li></ol><p>OpenCV的这个DNN方法克服了 Haar cascade 方法的不足，同时精度也不比它差。暂时没有发现这个方法其他有不足地方，除了比后面的 Dlib HoG 方法速度慢一点以外。</p><p>作者建议，在使用OpenCV时，比Haar方法，可以优先考虑DNN方法。</p><h2 id="3-Dlib-HoG"><a href="#3-Dlib-HoG" class="headerlink" title="3. Dlib-HoG"></a>3. Dlib-HoG</h2><p>HoG 人脸检测方法被广泛的使用，基于 HoG 特征和 SVM 分类。作者还写了一篇 HoG 的博客 <a href="https://www.learnopencv.com/histogram-of-oriented-gradients/" target="_blank" rel="noopener">post</a>。模型有5个 HOG filters 滤波器（ front looking, left looking, right looking, front looking but rotated left, and a front looking but rotated right），模型直接放在了头文件里面 <strong><a href="https://github.com/davisking/dlib/blob/master/dlib/image_processing/frontal_face_detector.h" target="_blank" rel="noopener">header file</a></strong>。</p><p>训练模型的数据库，来自LFW dataset，由 Davis King (Dlib的作者) 手工标记 （manually annotated）共2825张。需要的话，数据库从这里可以下载 <strong><a href="http://dlib.net/files/data/dlib_face_detector_training_data.tar.gz" target="_blank" rel="noopener">dlib_face_detector_training_data.tar.gz</a></strong>.</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><h4 id="Python-3"><a href="#Python-3" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hogFaceDetector = dlib.get_frontal_face_detector()</span><br><span class="line">faceRects = hogFaceDetector(frameDlibHogSmall, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> faceRect <span class="keyword">in</span> faceRects:</span><br><span class="line">    x1 = faceRect.left()</span><br><span class="line">    y1 = faceRect.top()</span><br><span class="line">    x2 = faceRect.right()</span><br><span class="line">    y2 = faceRect.bottom()</span><br></pre></td></tr></table></figure><h4 id="C-3"><a href="#C-3" class="headerlink" title="C++"></a>C++</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">frontal_face_detector hogFaceDetector = get_frontal_face_detector();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Convert OpenCV image format to Dlib's image format</span></span><br><span class="line"><span class="function">cv_image&lt;bgr_pixel&gt; <span class="title">dlibIm</span><span class="params">(frameDlibHogSmall)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detect faces in the image</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::rectangle&gt; faceRects = hogFaceDetector(dlibIm);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; faceRects.size(); i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> x1 = faceRects[i].left();</span><br><span class="line">  <span class="keyword">int</span> y1 = faceRects[i].top();</span><br><span class="line">  <span class="keyword">int</span> x2 = faceRects[i].right();</span><br><span class="line">  <span class="keyword">int</span> y2 = faceRects[i].bottom();</span><br><span class="line">  cv::rectangle(frameDlibHog, Point(x1, y1), Point(x2, y2), Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>), (<span class="keyword">int</span>)(frameHeight/<span class="number">150.0</span>), <span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的代码中，首先加载 face detector，然后将图像输入给 detector 。其中第二个参数代表，想要上采样图片的倍数（times of upscale）。你给的数字越大，小脸检测出的概率越大。但是upscaling 会在计算上花费可观的时间（ substantial impact on the computation speed）。输出是脸的list， 框框对角的坐标（diagonal corners）。</p><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><ol><li>在cpu上最快的方法（在四个方法中）</li><li>对正面和轻微非正面的方法效果很不错</li><li>模型比较少对于其他三个的文件来说</li><li>轻微遮挡下可以检测</li></ol><p>大概以上，这个方法多数情况可以工作，除了下面的情况。</p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ol><li>主要缺点对小人脸不识别。由于训练在最小 80×80 的数据集上，要确保你的使用环境，不然的话你要自己再训练一下小人脸。</li><li>人脸框经常去掉了人额头一部分，有时脸颊一部分。<br> （part of forehead and even part of chin sometimes）</li><li>在明显的遮挡情况下效果不好</li><li>在测量和极端不正面的脸情况不工作，像向上看，和向下看的情况。</li></ol><h2 id="4-Dlib-CNN"><a href="#4-Dlib-CNN" class="headerlink" title="4. Dlib-CNN"></a>4. Dlib-CNN</h2><p>这个模型使用了<strong><a href="https://arxiv.org/pdf/1502.00046.pdf" target="_blank" rel="noopener">Maximum-Margin Object Detector (MMOD)</a></strong> 加CNN的特征的方法。训练过程相当简单，也不需要大量的数据去训练一个新的 object detector。更多的训练套路，在这个网站上 <strong><a href="http://blog.dlib.net/2016/10/easily-create-high-quality-object.html" target="_blank" rel="noopener">website</a></strong>.</p><p>使用的模型可以从 <strong><a href="https://github.com/davisking/dlib-models" target="_blank" rel="noopener">dlib-models repository</a></strong> 下载。</p><p>训练使用的数据库是dlib的作者 Davis King 手工标的，7220张从  ImageNet, PASCAL VOC, VGG, WIDER, Face Scrub等数据库里面挑的。这个数据库可以下载到。<a href="http://dlib.net/files/data/dlib_face_detection_dataset-2016-09-30.tar.gz" target="_blank" rel="noopener"><strong>dlib_face_detection_dataset-2016-09-30.tar.gz</strong></a></p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><h4 id="Python-4"><a href="#Python-4" class="headerlink" title="Python"></a>Python</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dnnFaceDetector = dlib.cnn_face_detection_model_v1(<span class="string">"./mmod_human_face_detector.dat"</span>)</span><br><span class="line">faceRects = dnnFaceDetector(frameDlibHogSmall, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> faceRect <span class="keyword">in</span> faceRects:</span><br><span class="line">    x1 = faceRect.rect.left()</span><br><span class="line">    y1 = faceRect.rect.top()</span><br><span class="line">    x2 = faceRect.rect.right()</span><br><span class="line">    y2 = faceRect.rect.bottom()</span><br></pre></td></tr></table></figure><h4 id="C-4"><a href="#C-4" class="headerlink" title="C++"></a>C++</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">String mmodModelPath = <span class="string">"./mmod_human_face_detector.dat"</span>;</span><br><span class="line">net_type mmodFaceDetector;</span><br><span class="line">deserialize(mmodModelPath) &gt;&gt; mmodFaceDetector;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Convert OpenCV image format to Dlib's image format</span></span><br><span class="line"><span class="function">cv_image&lt;bgr_pixel&gt; <span class="title">dlibIm</span><span class="params">(frameDlibMmodSmall)</span></span>;</span><br><span class="line">matrix&lt;rgb_pixel&gt; dlibMatrix;</span><br><span class="line">assign_image(dlibMatrix, dlibIm);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detect faces in the image</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;dlib::mmod_rect&gt; faceRects = mmodFaceDetector(dlibMatrix);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; faceRects.size(); i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> x1 = faceRects[i].rect.left();</span><br><span class="line">  <span class="keyword">int</span> y1 = faceRects[i].rect.top();</span><br><span class="line">  <span class="keyword">int</span> x2 = faceRects[i].rect.right();</span><br><span class="line">  <span class="keyword">int</span> y2 = faceRects[i].rect.bottom();</span><br><span class="line">  cv::rectangle(frameDlibMmod, Point(x1, y1), Point(x2, y2), Scalar(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>), (<span class="keyword">int</span>)(frameHeight/<span class="number">150.0</span>), <span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码和  HoG detector 差不多，除了下载的 CNN face detection 的模型文件。</p><h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><ol><li>不同的脸朝向效果不错 （face orientations）</li><li>遮挡比较稳定 （occlusion）</li><li>在GPU上很快</li><li>训练模型过程很简单</li></ol><h3 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h3><ol><li>CPU上很慢</li><li>脸大小于 80×80  检测不出，因为模型在小脸训练的。所以要考虑你应用的具体场景脸的大小，当然也可以对小脸数据库再训练一下。</li><li>人脸框 bounding box 甚至比 HoG detector 还小。</li></ol><h2 id="5-精度比较"><a href="#5-精度比较" class="headerlink" title="5. 精度比较"></a>5. 精度比较</h2><p>（Accuracy Comparison）</p><p>作者评估这四个模型使用的是 FDDB 数据库，其中评估OpenCV-DNN 脚本为 <a href="https://github.com/opencv/opencv/blob/master/modules/dnn/misc/face_detector_accuracy.py" target="_blank" rel="noopener">OpenCV face_detector_accuracy.py</a>. </p><p>作者发现奇怪的结果。Dlib 的结果比 Haar OpenCV还要低，然而实际从图片上效果比较好。下图是这四个方法的精度得分（ Precision scores）。</p><p><a href="/wp-content/uploads/2018/10/face-detection-coco-comparison.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/face-detection-coco-comparison.jpg" alt></a></p><p>指标说明（Metric）：<br>AP_50 = Precision when overlap between Ground Truth and predicted bounding box is at least 50% (IoU = 50%)<br>AP_75 = Precision when overlap between Ground Truth and predicted bounding box is at least 75% (IoU = 75%)<br>AP_Small = Average Precision for small size faces (Average of IoU = 50% to 95%)<br>AP_medium = Average Precision for medium size faces (Average of IoU = 50% to 95%)<br>AP_Large = Average Precision for large size faces (Average of IoU = 50% to 95%)<br>mAP = Average precision across different IoU (Average of IoU = 50% to 95%)</p><p><strong>作者最近的发现评估过程对 Dlib 不够公平，科学。</strong></p><h3 id="5-1-评估过程出错了，分析的二个原因！"><a href="#5-1-评估过程出错了，分析的二个原因！" class="headerlink" title="5.1. 评估过程出错了，分析的二个原因！"></a>5.1. 评估过程出错了，分析的二个原因！</h3><p>根据我们的分析，Dlib拿到低的精度的原因如下：<br><strong>第一个主要原因是训练dlib的是标准数据库没有加标签（annotations）</strong>。数据库图片是由dlib作者自己切的，因此可以发现同样是人脸检测的框，同OpenCV 中的两个方法 OpenCV-Haar 或者 OpenCV-DNN 相比，dlib的方法会裁掉额头一部分或者脸颊一部分（forehead chin）。下面的图中可以看到。</p><p><a href="/wp-content/uploads/2018/10/fd-acc-result1-e1539872852547.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-acc-result1-e1539872861105.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-acc-result2-e1539872827875.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-acc-result2-e1539872827875.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-acc-result3-e1539872783684.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-acc-result3-e1539872783684.jpg" alt></a></p><p>这个问题可以导致 在上个柱状图中 dlib 分数会低。AP_X 代表着  X% 预测框和真实框交叠的面积占合起来面积的比率。dlib 的 AP_75 的得分为0，尽管有在 AP_75 比 Haar 还高。这个就意味着：<strong>Dlib 模型可以预测更多的人脸比 Haar 特征，但是dlib的框的 AP_75 得分比较低</strong>。</p><p><strong>第二个原因是 dlib 不能检测小的人脸，进一步拉低了得分。</strong></p><p><strong>因此，比较 OpenCV 和 Dlib 精确性的一个相对合理的指标是 AP_50 （或者可以使用小于50%的指标，我们只是设阈值用来计算人头的个数）</strong> 以上分析大家使用 Dlib 的时候注意一下。</p><h2 id="6-速度比较"><a href="#6-速度比较" class="headerlink" title="6. 速度比较"></a>6. 速度比较</h2><p>Speed Comparison</p><p>我们使用 300x300 图像做的对比实验。Dlib 的 MMOD 模型可以利用上GPU，但是OpenCV方法对 NVIDIA GPUs 支持还没有。所以我们评估对比这些方法在CPU上，但我们也给出 GPU 版本 MMOD 结果。</p><p>(这段话以后写论文的时候可以用到，保留:cat:) We used a 300×300 image for the comparison of the methods. The MMOD detector can be run on a GPU, but the support for NVIDIA GPUs in OpenCV is still not there. So, we evaluate the methods on CPU only and also report result for MMOD on GPU as well as CPU.</p><h3 id="硬件的配置"><a href="#硬件的配置" class="headerlink" title="硬件的配置"></a>硬件的配置</h3><p>Processor : Intel Core i7 6850K – 6 Core<br>RAM : 32 GB<br>GPU : NVIDIA GTX 1080 Ti with 11 GB RAM<br>OS : Linux 16.04 LTS<br>Programming Language : Python</p><p>我们跑了10次，每次对图片进行10000趟测试得总时间，然后对这10次取平均。下面的柱状图是结果。We run each method 10000 times on the given image and take 10 such iterations and average the time taken. Given below are the results.</p><p><a href="/wp-content/uploads/2018/10/face-detection-speed-comparison.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/face-detection-speed-comparison.jpg" alt></a></p><p>从图中可以看到，对于 300x300 的图片，除了 MMOD。MMOD 在GPU上还是很快的，CPU上就是渣渣了。As you can see that for the image of this size, all the methods perform in real-time, except MMOD. MMOD detector is very fast on a GPU but is very slow on a CPU.</p><p>以上的结果在不同电脑硬软件环境下可能不一样。</p><h2 id="7-多种情况讨论"><a href="#7-多种情况讨论" class="headerlink" title="7. 多种情况讨论"></a>7. 多种情况讨论</h2><p>除了速度和精度外，我们在选择哪个模型来使用还有一些因素可以考虑。在这节中，将考虑这些情况下的选择。主要为人脸大小变化、非正脸、遮挡。</p><h3 id="7-1-人脸大小变化"><a href="#7-1-人脸大小变化" class="headerlink" title="7.1. 人脸大小变化"></a>7.1. 人脸大小变化</h3><p>Detection across scale</p><p>下面有一个例子视频，这位帅哥在做一个前后的健身动作，使得脸部区域变大变小。可以看到OpenCV DNN 检测出了所有的脸，而 Dlib 的方法只有在大于某个 size 的时候才被检测出来。</p><p><a href="/wp-content/uploads/2018/10/face-detection-scale-comparison.gif"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/face-detection-scale-comparison.gif" alt></a></p><p>我们测试后，脸大于 70×70 才能被 dlib检测出。正如在前面说到的，对小人脸检测是dlib方法的一个大的缺点。我们也可以将图片上采样，但这样的话速度的话相对于 OpenCV-DNN 就太慢了。</p><p>It can be seen that dlib based methods are able to detect faces of size upto ~(70×70) after which they fail to detect. As we discussed earlier, I think this is the major drawback of Dlib based methods. Since it is not possible to know the size of the face before-hand in most cases. We can get rid of this problem by upscaling the image, but then the speed advantage of dlib as compared to OpenCV-DNN goes away.</p><h3 id="7-2-非正脸"><a href="#7-2-非正脸" class="headerlink" title="7.2. 非正脸"></a>7.2. 非正脸</h3><p>Non-frontal Face</p><p>对于非正脸的测试，我们选用了 looking towards right, left, up, down。为了对 dlib 公平，我们选择了face 大于 80×80 的图片。下面是一些例子。</p><p>Non-frontal can be looking towards right, left, up, down. Again, to be fair with dlib, we make sure the face size is more than 80×80. Given below are some examples.</p><p><a href="/wp-content/uploads/2018/10/fd-non-frontal-result7.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-non-frontal-result7.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-non-frontal-result6.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-non-frontal-result6.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-non-frontal-result5.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-non-frontal-result5.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-non-frontal-result4.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-non-frontal-result4.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-non-frontal-result2.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-non-frontal-result2.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-non-frontal-result1.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-non-frontal-result1.jpg" alt></a></p><p>和预期的一样，OpenCV Haar 方法完全败了。Dlib HoG能检测出 left 或 right looking faces，但是精度不如那些DNN方法。</p><p>As expected, Haar based detector fails totally. HoG based detector does detect faces for left or right looking faces (since it was trained on them) but not as accurately as the DNN based detectors of OpenCV and Dlib.</p><h3 id="7-3-遮挡"><a href="#7-3-遮挡" class="headerlink" title="7.3. 遮挡"></a>7.3. 遮挡</h3><p>Occlusion</p><p>接下来看一下遮挡的情况。Let us see how well the methods perform under occlusion.</p><p><a href="/wp-content/uploads/2018/10/fd-occlusion-result1.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-occlusion-result1.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-occlusion-result2.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-occlusion-result2.jpg" alt></a></p><p><a href="/wp-content/uploads/2018/10/fd-occlusion-result3.jpg"><img src="https://www.learnopencv.com/wp-content/uploads/2018/10/fd-occlusion-result3.jpg" alt></a></p><p>再一次看到，DNN方法比其他方法更优，OpenCV-DNN 比  Dlib-MMOD 还好一点。这是因为CNN 特征 比 HoG or Haar 更加鲁棒，稳定。</p><p>Again, the DNN methods outperform the other two, with OpenCV-DNN slightly better than Dlib-MMOD. This is mainly because the CNN features are much more robust than HoG or Haar features.</p><h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>我们讨论了每个方法的优缺点。个人建议使用 OpenCV-DNN 和 Dlib-HoG 在应用和设备成本权衡中。以下我们的建议：</p><p>We had discussed the pros and cons of each method in the respective sections. I recommend to try both OpenCV-DNN and HoG methods for your application and decide accordingly. We share some tips to get started.</p><h3 id="8-1-大多数的情况"><a href="#8-1-大多数的情况" class="headerlink" title="8.1 大多数的情况"></a>8.1 大多数的情况</h3><p>General Case</p><p>在多数场景中，我们提前不知道图片大小，因此 选用 OpenCV – DNN 相当快也很精确，甚至对于小人脸也不错，各种人脸角度也可以。选用这个在大多情况下是最优的。</p><p>In most applications, we won’t know the size of the face in the image before-hand. Thus, it is better to use OpenCV – DNN method as it is pretty fast and very accurate, even for small sized faces. It also detects faces at various angles. We recommend to use OpenCV-DNN in most</p><h3 id="8-2-大小中等或大一点图片"><a href="#8-2-大小中等或大一点图片" class="headerlink" title="8.2 大小中等或大一点图片"></a>8.2 大小中等或大一点图片</h3><p>For medium to large image sizes</p><p>Dlib HoG 在 cpu上是最快的一个方法。但是它不能检测出 face size (&lt; 70x70) 的图片。所以你得清楚使用的场景，比如自拍的话就可以。如果能使用GPU的话 dlib-MMOD 是一个最好的选择，因为它支持GPU，跑得也比较快，也能适应人脸的角度变化。</p><p>Dlib HoG is the fastest method on CPU. But it does not detect small sized faces (&lt; 70x70). So, if you know that your application will not be dealing with very small sized faces ( for example a selfie app ), then HoG based Face detector is a better option. Also, If you can use a GPU, then MMOD face detector is the best option as it is very fast on GPU and also provides detection at various angles.</p><h3 id="8-3-高分辨率图像"><a href="#8-3-高分辨率图像" class="headerlink" title="8.3 高分辨率图像"></a>8.3 高分辨率图像</h3><p>High resolution images</p><p>对于这些方法来说，高分辨图像都有点难度，计算时间比较长。可能采用的方法是resize图像 （ scale down the image），HoG / MMOD方法可能就识别不出了，但是可以使用 OpenCV-DNN 尝试一下。我认为也可以将图片分割开再识别呀，嘻嘻。</p><p>Since feeding high resolution images is not possible to these algorithms (for computation speed), HoG / MMOD detectors might fail when you scale down the image. On the other hand, OpenCV-DNN method can be used for these since it detects small faces.</p><p>有任何建议，欢迎在下面评论。<br>Have any other suggestions? Please mention in the comments and we’ll update the post with them!</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/opencv/opencv/blob/master/modules/dnn/misc/face_detector_accuracy.py" target="_blank" rel="noopener">[FDDB Comparison code]</a><br><a href="http://blog.dlib.net/2016/10/easily-create-high-quality-object.html" target="_blank" rel="noopener">[Dlib Blog]</a><br><a href="http://dlib.net/cnn_face_detector.py.html" target="_blank" rel="noopener">[dlib mmod python example]</a><br><a href="http://dlib.net/dnn_mmod_face_detection_ex.cpp.html" target="_blank" rel="noopener">[dlib mmod cpp example]</a><br><a href="https://github.com/opencv/opencv/tree/master/samples/dnn/face_detector" target="_blank" rel="noopener">[OpenCV DNN Face detector]</a><br><a href="https://docs.opencv.org/3.4/d7/d8b/tutorial_py_face_detection.html" target="_blank" rel="noopener">[Haar Based Face Detector]</a></p><h2 id="TODOS"><a href="#TODOS" class="headerlink" title="TODOS"></a>TODOS</h2><p>文章作者是 <a href="https://www.learnopencv.com/author/vikas/" target="_blank" rel="noopener">VIKAS GUPTA</a> </p><p>来，看看这个是站长大佬的图片，是不是很熟悉？膜拜一哈。</p><p><img src="https://secure.gravatar.com/avatar/708995cd13fb5756f6bc418aecb23b78?s=250&amp;d=mm&amp;r=g" alt="blog_author"></p><p>我订阅后文章后，作者发的邮件内容，并没有给文章页的代码。</p><ul><li><a href="https://www.learnopencv.com/wp-content/uploads/2015/05/Computer-Vision-Resources.pdf" target="_blank" rel="noopener">给的Computer-Vision-Resources.pdf</a></li><li><a href="https://github.com/spmallick/dlib" target="_blank" rel="noopener">作者的Dlib fork</a></li></ul><p><strong>重要资源</strong> </p><ul><li><p>作者博客 <a href="https://www.learnopencv.com/" target="_blank" rel="noopener">link</a></p></li><li><p>作者的所有代码拿走不谢 <a href="https://github.com/spmallick/learnopencv" target="_blank" rel="noopener">link</a></p></li></ul><ul><li style="list-style: none"><input type="checkbox" checked> 翻译</li><li style="list-style: none"><input type="checkbox"> 代码运行</li><li style="list-style: none"><input type="checkbox"> 根据该作者的博客继续翻译，学习，向大佬致敬。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;本文为翻译文章。原文地址 &lt;a href=&quot;https://www.learnopencv.com/face-detection-opencv-dlib-and-deep-learning-c-python/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.learnopencv.com/face-detection-opencv-dlib-and-deep-learning-c-python/&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;在这篇文章中，作者讨论使用了OpenCV或Dlib的多种人脸检测的代码，并给出性能分析。作者使用的 Face Detector 包括以下四个，后面分别给出 c++ 和 python 实现。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OpenCV 的 Haar Cascade Face Detector&lt;/li&gt;
&lt;li&gt;OpenCV 的 Deep Learning based Face Detector&lt;/li&gt;
&lt;li&gt;Dlib 的 HoG Face Detector&lt;/li&gt;
&lt;li&gt;Dlib 的 Deep Learning based Face Detector&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;作者限于篇幅没有对对理论进行深入解读，只讨论框架的使用，同时分享一些应用上的选择权衡的经验。&lt;/p&gt;
&lt;p&gt;结论：在多数场景中，我们提前不知道图片大小，因此 选用 OpenCV – DNN 相当快也很精确，甚至对于小人脸也不错，各种人脸角度也可以。选用这个在大多情况下是最优的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spmallick/learnopencv/tree/master/FaceDetectionComparison&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;code FaceDetectionComparison&lt;/a&gt; 说明：为了使文章显得简洁一些，在文中只提供关键的代码片段。在github项目中详细代码，包括每个方法独立的代码和整合在一起的cpp和py文件（run-all.py 和 run-all.cpp），同时里面也有运行代码所使用的人脸检测模型。&lt;/p&gt;
    
    </summary>
    
      <category term="博客转载" scheme="https://talengu.github.io/public/categories/%E5%8D%9A%E5%AE%A2%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="cv" scheme="https://talengu.github.io/public/categories/%E5%8D%9A%E5%AE%A2%E8%BD%AC%E8%BD%BD/cv/"/>
    
    
      <category term="OpenCV" scheme="https://talengu.github.io/public/tags/OpenCV/"/>
    
      <category term="Face Detection" scheme="https://talengu.github.io/public/tags/Face-Detection/"/>
    
      <category term="Dlib" scheme="https://talengu.github.io/public/tags/Dlib/"/>
    
  </entry>
  
  <entry>
    <title>希腊罗马神话</title>
    <link href="https://talengu.github.io/public/2018/11/05/readings/Gods_stories/"/>
    <id>https://talengu.github.io/public/2018/11/05/readings/Gods_stories/</id>
    <published>2018-11-05T08:00:04.000Z</published>
    <updated>2018-11-05T08:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概要：<br>古代希腊罗马神话。最近在看一些古代希腊罗马的神话故事，挺好玩的，记录一下。</p></blockquote><a id="more"></a><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>在我电的图书馆的还书柜子里面偶然所得，一本叫《希腊罗马神话对英语语言文化的影响》吕海平 著 江苏大学初版社，然后莫名的想研究一下，发现挺不错的。</p><p>古希腊罗马的神的关系还是比较乱的，尤其是jupiter 或者zeus的奥林匹斯神系。从上古的神系，总共有三代。</p><p>网上有个人（<a href="http://www.veritablehokum.com/" target="_blank" rel="noopener">Korwin Briggs</a>）做的关系图很不错。后面我也会对其进行整理，以后给大家分享。</p><p><img src="http://www.veritablehokum.com/wp-content/uploads/2018/08/Roman-God-Family-Tree.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;概要：&lt;br&gt;古代希腊罗马神话。最近在看一些古代希腊罗马的神话故事，挺好玩的，记录一下。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://talengu.github.io/public/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="神话" scheme="https://talengu.github.io/public/tags/%E7%A5%9E%E8%AF%9D/"/>
    
      <category term="希腊罗马神话" scheme="https://talengu.github.io/public/tags/%E5%B8%8C%E8%85%8A%E7%BD%97%E9%A9%AC%E7%A5%9E%E8%AF%9D/"/>
    
      <category term="语言文化" scheme="https://talengu.github.io/public/tags/%E8%AF%AD%E8%A8%80%E6%96%87%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>怎样成为一名优秀的算法工程师</title>
    <link href="https://talengu.github.io/public/2018/10/01/AI/how_algorithm_engineer/"/>
    <id>https://talengu.github.io/public/2018/10/01/AI/how_algorithm_engineer/</id>
    <published>2018-10-01T04:00:00.000Z</published>
    <updated>2018-10-01T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转载 原创： AI学习与实践平台<br>TODO: 看完里面的文章，对每篇文章做个总结，实验+文章。</p></blockquote><h2 id="1-导言"><a href="#1-导言" class="headerlink" title="1. 导言"></a>1. 导言</h2><p> 怎样成为一名优秀的算法工程师？这是很多从事人工智能学术研究和产品研发的同学都关心的一个问题。面对市场对人才的大量需求与供给的严重不足，以及高薪水的诱惑，越来越多的人开始学习这个方向的技术，或者打算向人工智能转型。市面上各种鱼龙混杂的培训班以及误导人的文章会把很多初学者带入歧途，浮躁的跟风将会让你最后收获甚微，根本达不到企业的用人要求。为了更好的帮助大家学习和成长，少走弯路，在今天的文章里，<a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485551&amp;idx=2&amp;sn=a6689528f10aedab3fce91857eec877b&amp;chksm=fdb695f8cac11cee025ad6d8d77ed90f7169142d6b20b2f5a6945b58edd97c27225f4a2eba91&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SIGAI</a> 的作者以自己的亲身经历和思考，为大家写下对这一问题的理解与答案。</p><p>首先来看一个高度相关的问题：一个优秀的算法工程师必须具备哪些素质？我们给出的答案是这样的：</p><ul><li>数学知识</li><li>编程能力</li><li>机器学习与深度学习的知识</li><li>应用方向的知识</li><li>对自己所做的问题的思考和经验</li></ul><p>除去教育背景，逻辑思维，学习能力，沟通能力等其他方面的因素，大多数公司在考察算法工程师的技术水平时都会考虑上面这几个因素。接下来我们将按照这几个方面进行展开，详细的说明如何学习这些方面的知识以及积累经验。</p><a id="more"></a><h2 id="2-数学知识"><a href="#2-数学知识" class="headerlink" title="2. 数学知识"></a>2. 数学知识</h2><p>与其他工作方向如app、服务器开发相比，以及与计算机科学的其他方向如网络，数据库，分布式计算等相比，人工智能尤其是机器学习属于数学知识密集的方向。在各种书籍，论文，算法中都充斥着大量的数学公式，这让很多打算入门的人或者开始学习的人感到明显的压力。首先我们考虑一个最核心的问题：机器学习和深度学习究竟需要哪些数学知识？在<a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485551&amp;idx=2&amp;sn=a6689528f10aedab3fce91857eec877b&amp;chksm=fdb695f8cac11cee025ad6d8d77ed90f7169142d6b20b2f5a6945b58edd97c27225f4a2eba91&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SIGAI</a>之前的公众号文章“<a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483713&amp;idx=1&amp;sn=1e7c81381d16806ac73e15691fe17aec&amp;chksm=fdb69cd6cac115c05f1f90b0407e3f8ae9be8719e454f908074ac0d079885b5c134e2d60fd64&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">学好机器学习需要哪些数学知识</a>”里，我们已经给出了答案。先看下面这张表：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image003.gif" alt="EB5E93E91C3643F991C93D61F363373E.jpeg"></p><p>更多算法工程师的必读文章，请关注SIGAICN公众号</p><p>上面的表给出了各种典型的机器学习算法所用到的数学知识点。我们之前已经总结过，理解绝大多数算法和理论，有微积分/高等数学，线性代数，概率论，最优化方法的知识就够了。除流形学习需要简单的微分几何概念之外，深层次的数学知识如实变函数，泛函分析等主要用在一些基础理论结果的证明上，即使不能看懂证明过程，也不影响我们使用具体的机器学习算法。概率图模型、流形学习中基于图的模型会用到图论的一些基本知识，如果学习过离散数学或者数据结构，这些概念很容易理解。除此之外，某些算法会用到离散数学中的树的概念，但很容易理解。</p><h3 id="2-1-高等数学"><a href="#2-1-高等数学" class="headerlink" title="2.1 高等数学"></a>2.1 高等数学</h3><p>如果你已经学过这些大学数学课，只要把所需的知识点复习一遍就够了。对于微积分，通俗易懂而又被广为采用的是同济版的高等数学：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image005.gif" alt="88F2EB8BDFE1448EBD2DF61848E355FD.jpeg"></p><p>在机器学习中主要用到了微分部分，积分用的非常少。具体的，用到了下面的概念：</p><ul><li>导数和偏导数的定义与计算方法，与函数性质的关系</li><li>梯度向量的定义</li><li>极值定理，可导函数在极值点处导数或梯度必须为0</li><li>雅克比矩阵，这是向量到向量映射函数的偏导数构成的矩阵，在求导推导中会用到</li><li>Hessian矩阵，这是2阶导数对多元函数的推广，与函数的极值有密切的联系</li><li>凸函数的定义与判断方法</li><li>泰勒展开公式</li><li>拉格朗日乘数法，用于求解带等式约束的极值问题</li></ul><p>其中最核心的是多元函数的泰勒展开公式，根据它我们可以推导出梯度下降法，牛顿法，拟牛顿法等一系列最优化方法。</p><p>如果你想要深入的学习微积分，可以阅读数学系的教程，称为数学分析：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image007.gif" alt="DEB5F0D2FC584E0B96B263FE1D559AFF.jpeg"></p><p>与工科的高等数学偏重计算不同，它里面有大量的理论证明，对于锻炼数学思维非常有帮助。北大张筑生先生所著的数学分析可谓是国内这方面教材的精品。</p><h3 id="2-2-线性代数"><a href="#2-2-线性代数" class="headerlink" title="2.2 线性代数"></a>2.2 线性代数</h3><p>下面来看线性代数，同样是同济版的教材：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image009.gif" alt="48D5E515A7144CE6A9CB78162F6ECAAF.jpeg"></p><p>如果想更全面系统的学习线性代数，可以看这本书：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image011.gif" alt="BF71AB68DB2B4D71AC8D2B3263C197E5.jpeg"></p><p>相比之下，线性代数用的更多。具体用到的知识点有：</p><ul><li>向量和它的各种运算，包括加法，减法，数乘，转置，内积</li><li>向量和矩阵的范数，L1范数和L2范数</li><li>矩阵和它的各种运算，包括加法，减法，乘法，数乘</li><li>逆矩阵的定义与性质</li><li>行列式的定义与计算方法</li><li>二次型的定义</li><li>矩阵的正定性</li><li>特征值与特征向量</li><li>奇异值分解</li><li>线性方程组的数值解</li></ul><p>机器学习算法处理的数据一般都是向量、矩阵或者张量。经典的机器学习算法输入的数据都是特征向量，深度学习算法在处理图像时输入的2维的矩阵或者3维的张量。掌握这些概念是你理解机器学习和深度学习算法的基础。</p><h3 id="2-3-概率论"><a href="#2-3-概率论" class="headerlink" title="2.3 概率论"></a>2.3 概率论</h3><p>概率论国内理工科专业使用最多的是浙大版的教材：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image013.gif" alt="91E918CF7ED84C7488BDDFFC7594E0D4.jpeg"></p><p>如果把机器学习所处理的样本数据看作随机变量/向量，就可以用概率论的方法对问题进行建模，这代表了机器学习中很大一类方法。在机器学习里用到的概率论知识点有:</p><ul><li>随机事件的概念，概率的定义与计算方法</li><li>随机变量与概率分布，尤其是连续型随机变量的概率密度函数和分布函数</li><li>条件概率与贝叶斯公式</li><li>常用的概率分布，包括正态分布，伯努利二项分布，均匀分布</li><li>随机变量的均值与方差，协方差</li><li>随机变量的独立性</li><li>最大似然估计</li></ul><p>这些知识不超出普通理工科概率论教材的范围。</p><h3 id="最优化"><a href="#最优化" class="headerlink" title="最优化"></a>最优化</h3><p>最后来说最优化，几乎所有机器学习算法归根到底都是在求解最优化问题。求解最优化问题的指导思想是在极值点出函数的导数/梯度必须为0。因此你必须理解梯度下降法，牛顿法这两种常用的算法，它们的迭代公式都可以从泰勒展开公式而得到。</p><p>凸优化是机器学习中经常会提及的一个概念，这是一类特殊的优化问题，它的优化变量的可行域是凸集，目标函数是凸函数。凸优化最好的性质是它的所有局部最优解就是全局最优解，因此求解时不会陷入局部最优解。如果一个问题被证明为是凸优化问题，基本上已经宣告此问题得到了解决。在机器学习中，线性回归、岭回归、支持向量机、logistic回归等很多算法求解的都是凸优化问题。</p><p>拉格朗日对偶为带等式和不等式约束条件的优化问题构造拉格朗日函数，将其变为原问题，这两个问题是等价的。通过这一步变换，将带约束条件的问题转换成不带约束条件的问题。通过变换原始优化变量和拉格朗日乘子的优化次序，进一步将原问题转换为对偶问题，如果满足某种条件，原问题和对偶问题是等价的。这种方法的意义在于可以将一个不易于求解的问题转换成更容易求解的问题。在支持向量机中有拉格朗日对偶的应用。</p><p>KKT条件是拉格朗日乘数法对带不等式约束问题的推广，它给出了带等式和不等式约束的优化问题在极值点处所必须满足的条件。在支持向量机中也有它的应用。</p><p>如果你没有学过最优化方法这门课也不用担心，这些方法根据微积分和线性代数的基础知识可以很容易推导出来。如果需要系统的学习这方面的知识，可以阅读《凸优化》，《非线性规划》两本经典教材。</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image015.gif" alt="B00246CBCFB446789B2F7F63F3292099.jpeg"></p><h2 id="3-编程能力"><a href="#3-编程能力" class="headerlink" title="3. 编程能力"></a>3. 编程能力</h2><p>编程能力是学好机器学习和深度学习的又一大基础。对于计算机类专业的学生，由于本科已经学了c语言，c++，数据结构与算法，因此这方面一般不存在问题。对于非计算机专业的人来说，要真正学好机器学习和深度学习，这些知识是绕不开的。</p><h3 id="3-1-C"><a href="#3-1-C" class="headerlink" title="3.1 C++"></a>3.1 C++</h3><p>虽然现在大家热衷于学习python，但要作为一名真正的算法工程师，还是应该好好学习一下c++，至少，机器学习和深度学习的很多底层开源库都是用它写的；很多公司线上的产品，无论是运行在服务器端，还是嵌入式端，都是用c++写的。此外，如果你是应届生，在校园招聘时不少公司都会面试你c++的知识。</p><p>C++最经典的教材无疑是c++ primer：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image017.gif" alt="3E0DE0E336474B81A2F89F2190628186.jpeg"></p><p>对做算法的人来说，这本书其实不用全部看，把常用的点学完就够了。对于进阶，Effective c++是很好的选择，不少公司的面试题就直接出自这本书的知识点：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image019.gif" alt="DDCC32DD5E6D405588CB4B6F4A94BFE5.jpeg"></p><p>接下来说python，相比c++来说，学习的门槛要低很多，找一本通俗易懂的入门教程学习一遍即可。</p><h3 id="3-2-数据结构和算法"><a href="#3-2-数据结构和算法" class="headerlink" title="3.2 数据结构和算法"></a>3.2 数据结构和算法</h3><p>数据结构和算法是编写很多程序的基础，对于机器学习和深度学习程序也不例外。很多算法的实现都依赖于数组，链表，数，排序，查找之类的数据结构和基础算法。如果有时间和精力，把算法导论啃一遍，你会有不一样的感受：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image021.gif" alt="E077608423D7473ABF1DBF75C482E060.jpeg"></p><p>对于应届生来说，学完它对于你通过大互联网和人工智能公司校园招聘的技术面试也非常有用。</p><p>上面说的只是编程语言的程序设计的理论知识，我们还要考虑实际动手能力。对于开发环境如gcc/g++，visual studio之类的工具，以及gdb之类的调试工具需要做到熟练使用。如果是在linux上开发，对linux的常用命令也要熟记于心。这方面的知识看各种具体的知识点和教程即可。另外，对于编程的一些常识，如进程，线程，虚拟内存，文件系统等，你最好也要进行了解。</p><h2 id="4-机器学习与深度学习的知识"><a href="#4-机器学习与深度学习的知识" class="headerlink" title="4. 机器学习与深度学习的知识"></a>4. 机器学习与深度学习的知识</h2><p>在说完了数学和编程基础之后，下面我来看核心的内容，机器学习和深度学习知识。机器学习是现阶段解决很多人工智能问题的核心方法，尤其是深度学习，因此它们是算法工程师的核心知识。在这里有一个问题：是否需要先学机器学习，还是直接学深度学习？如果是一个专业的算法工程师，我的建议是先学机器学习。至少，你要知道机器学习中的基本概念， 过拟合，生成模型，ROC曲线等，上来就看深度学习，如没有背景知识你将不知所云。另外，神经网络只是机器学习中的一类方法，对于很多问题，其他机器学习算法如logistic回归，随机森林，GBDT，决策树等还在被大规模使用，因此你不要把自己局限在神经网络的小圈子里。</p><h3 id="4-1-ML和DP的教材"><a href="#4-1-ML和DP的教材" class="headerlink" title="4.1 ML和DP的教材"></a>4.1 ML和DP的教材</h3><p>首先来看机器学习，这方面的教材很多，周志华老师的机器学习，李航老师的统计学习方法是国内的经典。这里我们介绍国外的经典教材，首先是PRML：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image023.gif" alt="BE2D3D5817344DE0831B718D3F891899.jpeg"></p><p>PRML 下载地址 <a href="https://www.microsoft.com/en-us/research/publication/pattern-recognition-machine-learning/" target="_blank" rel="noopener">link</a></p><p>此书深厚，内容全面，涵盖了有监督学习，无监督学习的主要方法，理论推导和证明详细深入，是机器学习的经典。此外还有模式分类这本书，在这里不详细介绍。</p><p>本书主要内容包括：<br><strong>第一章：简介</strong><br>概率论、模型选择、决策理论、信息理论</p><p><strong>第二章：概率分布</strong><br>二元变量、多项变量、高斯分布、指数分布族、非参数方法</p><p><strong>第三章：线性模型回归问题</strong><br>线性基函数模型、偏置方差分解、贝叶斯线性回归、贝叶斯模型比较、The Evidence Approximation、固定基函数的局限性</p><p><strong>第四章：线性模型分类问题</strong><br>判别函数、概率生成模型、概率判别模型、拉普拉斯逼近、贝叶斯逻辑回归</p><p><strong>第五章：神经网络</strong><br>前馈神经网络、网络训练、误差反向传播、Hessian矩阵、神经网络的正则化、混合密度网络、贝叶斯神经网络</p><p><strong>第六章：Kernel方法</strong><br>对偶表示、构造核、径向基函数网络、高斯过程</p><p><strong>第七章：Sparse Kernel Machines</strong><br>最大边缘分类器、相关向量机</p><p><strong>第八章：图模型</strong><br>贝叶斯网络、条件独立性、马尔科夫随机场、图模型的推理</p><p><strong>第九章：混合模型和EM</strong><br>K-means聚类、高斯混合、EM算法</p><p><strong>第十章：近似推断</strong><br>变分推断、高斯的变分混合、变分线性回归、指数族分布、局部变分方法、变分logistic回归、Expectation Propagation</p><p><strong>第十一章：采样方法</strong><br>基本采样算法、马尔科夫链蒙特卡洛、吉布斯采样、切片采样、混合蒙特卡洛算法、估计划分函数</p><p><strong>第十二章：连续潜在变数</strong><br>主成分分析，Probabilistic PCA，Kernel PCA，非线性潜变量模型</p><p><strong>第十三章：序列数据</strong><br>马尔可夫模型，隐马尔可夫模型，Linear Dynamical Systems</p><p><strong>第十四章：混合模型</strong><br>贝叶斯模型平均法，Committees，Boosting，基于树的模型，条件混合模型</p><p>深度学习目前最权威的教程是下面这本书：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image025.gif" alt="A39AD50565E141F89B08C93CCD7DEDFC.jpeg"></p><p>它涵盖了深度学习的方方面面，从理论到工程，但美中不足的是对应于介绍的相对较少。</p><p>强化学习是机器学习很独特的一个分支，大多数人对它不太了解，这方面的教程非常少，我们推荐下面这本书：</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image027.gif" alt="115B0E32F06F4538A76CB9B610F63B8C.jpeg"></p><p>美中不足的是这本书对深度强化学习没有介绍，因为出版的较早。不知最新的版本有没有加上这方面的内容。</p><p>在这里需要强调的是，你的知识要系统化，有整体感。很多同学都感觉到自己学的机器学习太零散，缺乏整体感。这需要你多思考算法之间的关系，演化历史之类的问题，这样你就做到胸中有图-机器学习算法地图。其实，<a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485551&amp;idx=2&amp;sn=a6689528f10aedab3fce91857eec877b&amp;chksm=fdb695f8cac11cee025ad6d8d77ed90f7169142d6b20b2f5a6945b58edd97c27225f4a2eba91&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SIGAI</a>在之前的公众号文章“<a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485306&amp;idx=1&amp;sn=fc8cc8de313bdb61dcd39c1dedb240a4&amp;chksm=fdb69aedcac113fb4b18c74248a313536ded50bade0e66b26f332ab247b148519da71ff2a3c0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">机器学习算法地图</a>”里已经给你总结出来了。</p><h3 id="4-2-开源库"><a href="#4-2-开源库" class="headerlink" title="4.2 开源库"></a>4.2 开源库</h3><p>上面介绍了机器学习和深度学习的理论教材，下面来说实践问题。我们无需重复造车轮子，熟练的使用主流的开源库是需要掌握的一项技能。对于经典的机器学习，常用的库的有:</p><ul><li>libsvm</li><li>liblinear</li><li>XGBoost</li><li>OpenCV</li><li>HTK</li><li>Weka</li></ul><p>在这里我们不一一列举。借助于这些库，我们可以方便的完成自己的实验，或是研发自己的产品。对于深度学习，目前常用的有：</p><ul><li>Caffe</li><li>TensorFlow</li><li>MXNet</li></ul><p>除此之外，还有其他的。对于你要用到的开源库，一定要理解它的原理，以及使用中的一些细节问题。例如很多算法要求输入的数据先做归一化，否则效果会非常差，而且面临浮点数溢出的问题，这些实际经验需要你在使用中摸索。如果有精力把这些库的核心代码分析一遍，你对实现机器学习算法将会更有底气。以深度学习为例，最核心的代码无非是实现：</p><ul><li>各种层，包括它们的正向传播和反向传播</li><li>激活函数的实现</li><li>损失函数的实现</li><li>输入数据的处理</li><li>求解器，实现各种梯度下降法</li></ul><p>这些代码的量并不大，沉下心来，我相信一周之内肯定能分析完。看完之后你会有一种豁然开朗的感觉。</p><h2 id="5-应用方向的知识"><a href="#5-应用方向的知识" class="headerlink" title="5. 应用方向的知识"></a>5. 应用方向的知识</h2><p>接下来是各个方向的知识，与机器学习有关的应用方向当前主要有：</p><ul><li>机器视觉</li><li>语音识别</li><li>自然语言处理</li><li>数据挖掘</li><li>知识图谱</li><li>推荐系统</li></ul><p>除此之外，还有其他一些特定小方向，在这里不一一列举。这些具体的应用方向一般都有自己的教材，如果你以后要从事此方向的研究，系统的学习一遍是必须的。</p><h2 id="6-实践经验与思考"><a href="#6-实践经验与思考" class="headerlink" title="6. 实践经验与思考"></a>6. 实践经验与思考</h2><p>在说完理论与实践知识之后，最后我们来说经验与思考。在你确定要做某一个方向之后，对这个方向的方法要有一个全面系统的认识，很多方法是一脉相承的，如果只追求时髦看最新的算法，你很难做出学术上的创新，以及工程上的优化。对于本问题所有的经典论文，都应该化时间细度，清楚的理解它们解决了什么问题，是怎么解决的，还有哪些问题没有解决。例如：</p><ul><li>机器视觉目标检测中的遮挡问题</li><li>推荐系统中的冷启动问题</li><li>自然语言处理中文分词中的歧义切分问题</li></ul><p>只有经过大量的编程和实验训练，以及持续的思考，你才能算得上对这个方向深刻理解，以至于有自己的理解。很多同学对自己实现轮上的算法没有底气，解决这个问题最快的途径就是看论文算法的开源代码，在github上有丰富的资源，选择一些合适的，研究一下别人是怎么实现的，你就能明白怎么实现自己的网络结构和损失函数，照葫芦画瓢即可。</p><p>计算机以及人工智能是一个偏实践的学科，它的方法和理论既需要我们有扎实的理论功底，又需要有丰富的实践能力与经验。这两个方面构成了算法工程师最主要的素质。科学的学习路径能够让你取得好的学习效果，同时也缩短学习时间。错误和浮躁的做法则会让你最后事倍功半。这是  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485551&amp;idx=2&amp;sn=a6689528f10aedab3fce91857eec877b&amp;chksm=fdb695f8cac11cee025ad6d8d77ed90f7169142d6b20b2f5a6945b58edd97c27225f4a2eba91&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">SIGAI</a> 对想进入这个领域，或者刚进入这个领域的每个人要说的！</p><p><img src="/public/2018/10/01/AI/how_algorithm_engineer/clip_image029.gif" alt="07382DFD55044B48927C8B054DE6F745.png"></p><h2 id="7-其他材料"><a href="#7-其他材料" class="headerlink" title="7. 其他材料"></a>7. 其他材料</h2><h3 id="7-1-科普类"><a href="#7-1-科普类" class="headerlink" title="7.1 科普类"></a>7.1 科普类</h3><p>  【‍获取码】SIGAI0413<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483705&amp;idx=1&amp;sn=c6e7c4a2e14a2469308b41eb60f155ac&amp;chksm=fdb69caecac115b8712653600e526e99a3f6976fdaa2f6b6a09388fa6f9677ccb57b40c40ae3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">机器学习——波澜壮阔四十年 </a></p><p>  【获取码】SIGAI0620<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484981&amp;idx=1&amp;sn=d3003468b9853851923844812993e060&amp;chksm=fdb69ba2cac112b4dac620d52100ebd033eb679f29340726a67297c4d6980b16c7cc91122028&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解计算：从√2到AlphaGo ——第1季 从√2谈起</a></p><p>  【获取码】SIGAI0704<br>   <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485155&amp;idx=1&amp;sn=990cc7400751c36e9fef0a261e6add2a&amp;chksm=fdb69b74cac112628bdae14c6435120f6fece20dae9bf7b1ffc8b8b25e5496a24160feca0a72&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解计算：从√2到AlphaGo ——第2季 神经计算的历史背景</a> </p><h3 id="7-2-数学类"><a href="#7-2-数学类" class="headerlink" title="7.2 数学类"></a>7.2 数学类</h3><p>【获取码】SIGAI0417<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483713&amp;idx=1&amp;sn=1e7c81381d16806ac73e15691fe17aec&amp;chksm=fdb69cd6cac115c05f1f90b0407e3f8ae9be8719e454f908074ac0d079885b5c134e2d60fd64&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">学好机器学习需要哪些数学知识</a></p><p>【获取码】SIGAI0511<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484111&amp;idx=1&amp;sn=4ed4480e849298a0aff828611e18f1a8&amp;chksm=fdb69f58cac1164e844726bd429862eb7b38d22509eb4d1826eb851036460cb7ca5a8de7b9bb&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解梯度下降法</a></p><p>【获取码】SIGAI0518<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484439&amp;idx=1&amp;sn=4fa8c71ae9cb777d6e97ebd0dd8672e7&amp;chksm=fdb69980cac110960e08c63061e0719a8dc7945606eeef460404dc2eb21b4f5bdb434fb56f92&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解凸优化</a></p><p>【获取码】SIGAI0531<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484651&amp;idx=1&amp;sn=a0e4ca5edb868fe3eae9101b71dd7103&amp;chksm=fdb6997ccac1106a61f51fe9f8fd532045cc5d13f6c75c2cbbf1a7c94c58bcdf5f2a6661facd&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解牛顿法 </a>    </p><h3 id="7-3-机器学习类"><a href="#7-3-机器学习类" class="headerlink" title="7.3 机器学习类"></a>7.3 机器学习类</h3><p>  【获取码】SIGAI0428<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483937&amp;idx=1&amp;sn=84a5acf12e96727b13fd7d456c414c12&amp;chksm=fdb69fb6cac116a02dc68d948958ee731a4ae2b6c3d81196822b665224d9dab21d0f2fccb329&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">用一张图理解SVM的脉络</a></p><p>  【获取码】SIGAI0505<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483977&amp;idx=1&amp;sn=401b211bf72bc70f733d6ac90f7352cc&amp;chksm=fdb69fdecac116c81aad9e5adae42142d67f50258106f501af07dc651d2c1473c52fad8678c3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解神经网络的激活函数</a></p><p>  【获取码】SIGAI0522<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484495&amp;idx=1&amp;sn=4f3a6ce21cdd1a048e402ed05c9ead91&amp;chksm=fdb699d8cac110ce53f4fc5e417e107f839059cb76d3cbf640c6f56620f90f8fb4e7f6ee02f9&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【实验】理解SVM核函数和参数的作用</a></p><p>  【获取码】SIGAI0601<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484658&amp;idx=1&amp;sn=f5c9f92c272c75883bf8e6f532559f11&amp;chksm=fdb69965cac11073f49048caef5d7b9129614090a363d9ef7f3d1b9bc59948d2217d2bca7b7b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【群话题精华】五月集锦—机器学习和深度学习中一些值得思考的问题   </a> </p><p>  【获取码】SIGAI0602<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484692&amp;idx=1&amp;sn=9b389aa65208c778dddf17c601afbee1&amp;chksm=fdb69883cac1119593934734e94c3b71aa68de67bda8a946c1f9f9e1209c3b6f0bf18fed99b8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">大话AdaBoost算法    </a></p><p>  【获取码】SIGAI0606<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484754&amp;idx=1&amp;sn=b2c0d6798f44e13956bb42373e51d18c&amp;chksm=fdb698c5cac111d3e3dca24c50aafbfb61e5b05c5df5b603067bb7edec8db049370b73046b24&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解主成分分析（PCA）    </a></p><p>  【获取码】SIGAI0611<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484827&amp;idx=1&amp;sn=043d7d0159baaddfbf92ed78ee5b1124&amp;chksm=fdb6980ccac1111a9faeae7f517fee46a1dfab19612f76ccfe5417487b3f090ab8fc702d18b8&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解决策树  </a></p><p>  【获取码】SIGAI0613<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484859&amp;idx=1&amp;sn=2c4db22fb538953a62a90983e3e1f99d&amp;chksm=fdb6982ccac1113a82e92be325bb07a947d54090274654375f3b50e11e1abd809fb7358bde16&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">用一句话总结常用的机器学习算法</a></p><p>  【获取码】SIGAI0618<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484954&amp;idx=1&amp;sn=c28b7f07c22466e91b1ef90e9dbe3ad1&amp;chksm=fdb69b8dcac1129bc6e78fca1d550e2b18238ad1c240c73b280d4e529f9f93c4626b3ac45ea2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">理解过拟合</a></p><p>  【获取码】SIGAI0627<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485074&amp;idx=1&amp;sn=0ebf1bf8f49e9c46075fe3803d04c95d&amp;chksm=fdb69b05cac112132d280c70af3923ca4c3cccfa5fcd8628b79d4b246b3b2decbc80a180abb3&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">k近邻算法</a></p><p>  【获取码】SIGAI0704<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485306&amp;idx=1&amp;sn=fc8cc8de313bdb61dcd39c1dedb240a4&amp;chksm=fdb69aedcac113fb4b18c74248a313536ded50bade0e66b26f332ab247b148519da71ff2a3c0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">机器学习算法地图</a></p><p>  【获取码】SIGAI0706<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485446&amp;idx=1&amp;sn=57d7d866443810c20c4ea2c6ee8018cc&amp;chksm=fdb69591cac11c8773638b396abe43c0161e4d339f0fa845e54326be3e8c4933a3b6a2713dae&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">反向传播算法推导—全连接神经网络</a></p><h3 id="7-4-深度学习类"><a href="#7-4-深度学习类" class="headerlink" title="7.4 深度学习类"></a>7.4 深度学习类</h3><p>【获取码】SIGAI0426<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483816&amp;idx=1&amp;sn=fc52765b012771d4736c9be4109f910e&amp;chksm=fdb69c3fcac115290020c3dd0d677d987086a031c1bde3429339bb3b5bbc0aa154e76325c225&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">卷积神经网络为什么能够称霸计算机视觉领域？</a></p><p>【获取码】SIGAI0508<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484037&amp;idx=1&amp;sn=13ad0d521b6a3578ff031e14950b41f4&amp;chksm=fdb69f12cac11604a42ccb37913c56001a11c65a8d1125c4a9aeba1aed570a751cb400d276b6&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">深度卷积神经网络演化历史及结构改进脉络-40页长文全面解读 </a></p><p>【获取码】SIGAI0515<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484310&amp;idx=1&amp;sn=0fc55a2784a894100a1ae64d7dbfa23d&amp;chksm=fdb69e01cac1171758cb021fc8779952e55de41032a66ee5417bd3e826bf703247e243654bd0&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">循环神经网络综述—语音识别与自然语言处理的利器</a></p><p>【获取码】SIGAI0625<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485042&amp;idx=1&amp;sn=cdcf8d4b07acf64c7a6f5f7c1a731a12&amp;chksm=fdb69be5cac112f377766984afb87313c1e1c58d94c80005f0f6f6af61ee5a4bd1bf6c6157b6&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">卷积神经网络的压缩与加速</a></p><p>【获取码】SIGAI0709<br>   <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485551&amp;idx=1&amp;sn=213f48c4e55bee688cf0731097bb832c&amp;chksm=fdb695f8cac11ceef3ef246c54d811dd64d8cc45fc75488c374c7aa95f72c1abfb55555ef0b7&amp;scene=21#wechat_redirect" target="_blank" rel="noopener"> 生成式对抗网络模型综述</a></p><h3 id="7-5-机器视觉类"><a href="#7-5-机器视觉类" class="headerlink" title="7.5 机器视觉类"></a>7.5 机器视觉类</h3><p>  【获取码】SIGAI0420<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483726&amp;idx=1&amp;sn=9fef4cc1766ea4258749f8d40cc71a6e&amp;chksm=fdb69cd9cac115cf4eba16081780c3b64c75e1e55a40bf2782783d5c28f00c6f143426e6f0aa&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">人脸识别算法演化史</a></p><p>  【获取码】SIGAI0424<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483731&amp;idx=1&amp;sn=237c52bc9ddfe65779b73ef8b5507f3c&amp;chksm=fdb69cc4cac115d2ca505e0deb975960a792a0106a5314ffe3052f8e02a75c9fef458fd3aca2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">基于深度学习的目标检测算法综述</a></p><p>  【获取码】SIGAI0503<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483950&amp;idx=1&amp;sn=a3a5b7907b2552c233f654a529931776&amp;chksm=fdb69fb9cac116af5dd237cf987e56d12b0d2e54c5c565aab752f3e366c0c45bfefa76f5ed16&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">人脸检测算法综述</a></p><p>  【获取码】SIGAI0525<br>  <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247483950&amp;idx=1&amp;sn=a3a5b7907b2552c233f654a529931776&amp;chksm=fdb69fb9cac116af5dd237cf987e56d12b0d2e54c5c565aab752f3e366c0c45bfefa76f5ed16&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">【SIGAI综述】行人检测算法   </a>  </p><p>  【获取码】SIGAI0604<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484711&amp;idx=1&amp;sn=bb7644e101b5924f54d6800b952dc3aa&amp;chksm=fdb698b0cac111a6605f5b9b6f0478bf21a8527cfad2342dbaaf624b4e9dcc43c0d85ae06deb&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">FlowNet到FlowNet2.0：基于卷积神经网络的光流预测算法 </a></p><p>  【获取码】SIGAI0608<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484784&amp;idx=1&amp;sn=ceafb54203f4e930ae457ad392b9f89c&amp;chksm=fdb698e7cac111f13d8229d7dcc00b4a7305d66de3da1bd41e7ecc1d29bfa7be520d205c53e9&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">人体骨骼关键点检测综述 </a></p><p>【获取码】SIGAI0615<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247484909&amp;idx=1&amp;sn=c02ee17e5175230ed39ad63e73249f5c&amp;chksm=fdb6987acac1116c0108ec28424baf4ea16ca11d2b13f20d4a825d7b2b82fb8765720ebd1063&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">目标检测算法之YOLO</a></p><p>【获取码】SIGAI0622<br>​    <a href="https://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485005&amp;idx=1&amp;sn=0d4fb43b8db2a8046c64a9cfcbf3f478&amp;chksm=fdb69bdacac112cce05c8b735b4f8b1ccf2348bea55a30af2055fc328958bb8f1ffd0f819bd2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">场景文本检测——CTPN算法介绍</a></p><p>【获取码】SIGAI0629<br>​    <a href="http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;mid=2247485142&amp;idx=1&amp;sn=c0e01da30eb5e750be453eabe4be2bf4&amp;chksm=fdb69b41cac11257ae22c7dac395e9651dab628fc35dd6d3c02d9566a8c7f5f2b56353d58a64&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">自然场景文本检测识别技术综述</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载 原创： AI学习与实践平台&lt;br&gt;TODO: 看完里面的文章，对每篇文章做个总结，实验+文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-导言&quot;&gt;&lt;a href=&quot;#1-导言&quot; class=&quot;headerlink&quot; title=&quot;1. 导言&quot;&gt;&lt;/a&gt;1. 导言&lt;/h2&gt;&lt;p&gt; 怎样成为一名优秀的算法工程师？这是很多从事人工智能学术研究和产品研发的同学都关心的一个问题。面对市场对人才的大量需求与供给的严重不足，以及高薪水的诱惑，越来越多的人开始学习这个方向的技术，或者打算向人工智能转型。市面上各种鱼龙混杂的培训班以及误导人的文章会把很多初学者带入歧途，浮躁的跟风将会让你最后收获甚微，根本达不到企业的用人要求。为了更好的帮助大家学习和成长，少走弯路，在今天的文章里，&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzU4MjQ3MDkwNA==&amp;amp;mid=2247485551&amp;amp;idx=2&amp;amp;sn=a6689528f10aedab3fce91857eec877b&amp;amp;chksm=fdb695f8cac11cee025ad6d8d77ed90f7169142d6b20b2f5a6945b58edd97c27225f4a2eba91&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SIGAI&lt;/a&gt; 的作者以自己的亲身经历和思考，为大家写下对这一问题的理解与答案。&lt;/p&gt;
&lt;p&gt;首先来看一个高度相关的问题：一个优秀的算法工程师必须具备哪些素质？我们给出的答案是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数学知识&lt;/li&gt;
&lt;li&gt;编程能力&lt;/li&gt;
&lt;li&gt;机器学习与深度学习的知识&lt;/li&gt;
&lt;li&gt;应用方向的知识&lt;/li&gt;
&lt;li&gt;对自己所做的问题的思考和经验&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除去教育背景，逻辑思维，学习能力，沟通能力等其他方面的因素，大多数公司在考察算法工程师的技术水平时都会考虑上面这几个因素。接下来我们将按照这几个方面进行展开，详细的说明如何学习这些方面的知识以及积累经验。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="https://talengu.github.io/public/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="AI" scheme="https://talengu.github.io/public/tags/AI/"/>
    
      <category term="ML" scheme="https://talengu.github.io/public/tags/ML/"/>
    
      <category term="DL" scheme="https://talengu.github.io/public/tags/DL/"/>
    
  </entry>
  
  <entry>
    <title>linux代理的使用</title>
    <link href="https://talengu.github.io/public/2018/07/24/linux/linux_proxy/"/>
    <id>https://talengu.github.io/public/2018/07/24/linux/linux_proxy/</id>
    <published>2018-07-24T14:00:00.000Z</published>
    <updated>2018-07-24T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br> 最近要下载一个在youtube上的数据库，用来训练神经网络。走国内通道下载比较慢。于是，我使用了vps代理方式下载，速度取决于你的机器连接vps的网速。本文的主要内容有，实现shadowsocks 代理 ，tsocks 代理工具使用，可组合使用的一些下载工具如wget 和axel等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 举个栗子</span></span><br><span class="line">$ tsocks wget -c https://www.dropbox.com/s/minpyv59crdifk9/datasets.zip</span><br></pre></td></tr></table></figure><p>嗯嗯，这个速度还不错！</p><p><img src="/public/2018/07/24/linux/linux_proxy/1565246896718.png" alt="1565246896718"></p><p><strong>声明</strong>：本文以科学研究为目的，请勿滥用。</p><a id="more"></a><h2 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h2><p><strong>Shadowsocks</strong>是一个轻量级socks5代理工具。在linux平台，我们可使用 python 提供的包管理工具 pip <strong>安装 Shadowsocks</strong> ，如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip 安装 Shadowsocks</span></span><br><span class="line">$ pip install shadowsocks</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ pip install git+https://github.com/shadowsocks/shadowsocks.git@master</span><br></pre></td></tr></table></figure><p>pip安装完之后，可能要重启终端，我们就有ssserver和sslocal小工具了。下面配置server或者client。一般，server配置在国外的vps上，client配置在本地国内机器上。</p><p>PS：其他平台安装 参考 shadowsocks官方 <a href="https://github.com/shadowsocks/shadowsocks/tree/master#install" target="_blank" rel="noopener">install</a></p><h3 id="配置-Shadowsocks-server"><a href="#配置-Shadowsocks-server" class="headerlink" title="配置 Shadowsocks server"></a>配置 Shadowsocks server</h3><p>按下面的三步走，即可。</p><ul><li><p>通过ssh连接到（Virtual Private Server）vps上，或者本地打开终端。</p></li><li><p>新建一个<strong>server_shadowsocks.json</strong>文件，内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>:<span class="number">443</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"密码"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">    <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行<code>ssserver -c server_shadowsocks.json</code></p></li></ul><p>说一点: 由于我们的下载任务是临时的，开个screen（终端复用工具）放在后台。当然你也可以设置为开机自启动，这里不再赘述。</p><h3 id="配置-Shadowsocks-client"><a href="#配置-Shadowsocks-client" class="headerlink" title="配置 Shadowsocks client"></a>配置 Shadowsocks client</h3><ul><li><p>通过ssh连接到机器上，或者本地打开终端。</p></li><li><p>新建文件 <strong>client_shadowsocks.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="attr">"server"</span>:<span class="string">"服务器ip或域名"</span>,</span><br><span class="line">        <span class="attr">"server_port"</span>:<span class="number">443</span>,</span><br><span class="line">        <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">        <span class="attr">"local_port"</span>:<span class="number">1280</span>,</span><br><span class="line">        <span class="attr">"password"</span>:<span class="string">"密码"</span>,</span><br><span class="line">        <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">        <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">        <span class="attr">"fast_open"</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"workers"</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行<code>sslocal -c client_shadowsocks.json</code>。</p></li></ul><p>说一点：推荐使用screen方式放在后台。当然也可以使用-d 参数放在后台运行。<br><code>sslocal -c client_shadowsocks.json -d start</code></p><h2 id="tsocks"><a href="#tsocks" class="headerlink" title="tsocks"></a>tsocks</h2><p>有些linux工具可能没有proxy的代理功能，或者不支持sock5代理，而用tsocks可以很好的解决这些问题。<strong>tsocks</strong> 是个终端代理工具，可以直接连接shadowsocks提供socks 5代理端口，有点类似于proxychains。</p><p>下面简单介绍下安装与使用：</p><ul><li>安装<strong>tsocks</strong><ul><li>linux安装tsocks 命令：<code>apt install tsocks</code></li><li>mac 安装参考 <a href="https://github.com/Anakros/homebrew-tsocks" target="_blank" rel="noopener">homebrew-tsocks</a></li></ul></li><li><strong>开启上面Shadowsocks的client</strong>放在后台。</li><li>修改tsocks 配置文件，在<code>/etc/tsocks.conf</code>  文件的最后添加：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">local = 192.168.1.0/255.255.255.0</span><br><span class="line">server = 127.0.0.1</span><br><span class="line">server_type = 5</span><br><span class="line">server_port = 1080</span><br></pre></td></tr></table></figure></li></ul><h2 id="Demo：代理使用"><a href="#Demo：代理使用" class="headerlink" title="Demo：代理使用"></a>Demo：代理使用</h2><h3 id="使用-tsocks"><a href="#使用-tsocks" class="headerlink" title="使用 tsocks"></a>使用 tsocks</h3><p>在所需代理的命令前加个tsocks就行，如：<br><code>tsocks wget -c xxxx</code>,<code>tsocks axel -n 10 -av xxxx</code>,<code>tsocks curl xxx</code></p><h3 id="使用-youtube-dl"><a href="#使用-youtube-dl" class="headerlink" title="使用 youtube-dl"></a>使用 youtube-dl</h3><p>youtube-dl是批量下载youtube视频的好工具。youtube-dl 可以指定 proxy，<strong>可以不使用tsocks</strong>。</p><ul><li><p>安装youtube-dl </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade youtube-dl</span><br></pre></td></tr></table></figure></li><li><p>使用举个例子</p><ul><li><p>下载youtube视频 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">URL=https://www.youtube.com/playlist?list=PLLbeS1kM6teJqdFzw1ICHfa4a1y0hg8Ax</span><br><span class="line">./youtube-dl --proxy socks5://127.0.0.1:1280 $&#123;URL&#125;</span><br><span class="line"># 在 client_shadowsocks.json 的 local_port 设置为1280，这儿也为1280</span><br></pre></td></tr></table></figure></li><li><p>下载里面的mp3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">youtube-dl -x --audio-format mp3 https://www.youtube.com/watch?v=xpVfcZ0ZcFM</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>youtube-dl 中待解决的问题？</strong><br>想只下载一个视频中的一部分，不用下载整个视频，太费vps流量了。暂未找到解决办法，我找到的一个跟问题很相似的issue，有朋友会整的，望告诉一下。<a href="https://github.com/rg3/youtube-dl/issues/4821" target="_blank" rel="noopener">is it possible to download only desired time interval?</a></p><h3 id="使用-axel"><a href="#使用-axel" class="headerlink" title="使用 axel"></a>使用 axel</h3><p>axel多线程下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsocks axel -n 3 -a https://www.dropbox.com/s/minpyv59crdifk9/datasets.zip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-n 3 : 3个线程下载</span><br><span class="line">-a   : 有个进度条</span><br></pre></td></tr></table></figure><p>其他方式：下载脚本 axel-bash.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh -e  </span></span><br><span class="line"><span class="comment"># usage:  ./axel-batch.sh the-download-url.list  </span></span><br><span class="line">cat <span class="variable">$1</span> | <span class="keyword">while</span> <span class="built_in">read</span> LINE  </span><br><span class="line"><span class="keyword">do</span>  </span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$LINE</span>"</span> ]; <span class="keyword">then</span>  </span><br><span class="line">axel -n 3 -a `<span class="built_in">echo</span> <span class="variable">$LINE</span>`  </span><br><span class="line"><span class="keyword">fi</span>  </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt; 最近要下载一个在youtube上的数据库，用来训练神经网络。走国内通道下载比较慢。于是，我使用了vps代理方式下载，速度取决于你的机器连接vps的网速。本文的主要内容有，实现shadowsocks 代理 ，tsocks 代理工具使用，可组合使用的一些下载工具如wget 和axel等。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 举个栗子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ tsocks wget -c https://www.dropbox.com/s/minpyv59crdifk9/datasets.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;嗯嗯，这个速度还不错！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/2018/07/24/linux/linux_proxy/1565246896718.png&quot; alt=&quot;1565246896718&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;声明&lt;/strong&gt;：本文以科学研究为目的，请勿滥用。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://talengu.github.io/public/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://talengu.github.io/public/tags/Ubuntu/"/>
    
      <category term="proxy代理" scheme="https://talengu.github.io/public/tags/proxy%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>终端中bash、vim、tmux等的配置</title>
    <link href="https://talengu.github.io/public/2018/07/12/linux/bash_bashrc/"/>
    <id>https://talengu.github.io/public/2018/07/12/linux/bash_bashrc/</id>
    <published>2018-07-12T08:00:04.000Z</published>
    <updated>2018-07-12T08:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>使用终端有一段时间了，现在主力的平台是Ubuntu16.04，本文对bash、vim、tmux配置的一些记录。</p><a id="more"></a><p>在<code>cd ~</code>下建立talen_bashrc文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> HOME_BASHRC=xxxx/talen_bashrc</span><br><span class="line"> alias vimbashrc=&apos;vim $HOME_BASHRC &amp;&amp; source $HOME_BASHRC&apos;</span><br><span class="line"># files</span><br><span class="line"> alias countfiles=&apos;echo &quot;total num: &quot; &amp;&amp; ls | wc -l &amp;&amp; du -sh&apos;</span><br><span class="line"> alias ll=&apos;ls -htrlF --time-style=&quot;+%H:%M %Y/%m/%d&quot;&apos;</span><br><span class="line"> alias dum=&apos;du -a -d 1 -m |sort -nr&apos;</span><br><span class="line"> alias dug=&apos;df -h /dev/sdbxxx &amp;&amp; du -BG -d 1 --time |sort -nr&apos;</span><br><span class="line"></span><br><span class="line"> alias pi=&apos;pip install -i https://pypi.tuna.tsinghua.edu.cn/simple&apos;</span><br><span class="line"> alias gpuwatch=&apos;watch -n 1 nvidia-smi&apos;</span><br><span class="line"></span><br><span class="line"> alias gitm=&apos;git commit -m&apos;</span><br><span class="line"> alias gits=&apos;git status -s&apos;</span><br><span class="line"></span><br><span class="line"> export PYTHONPATH=$PYTHONPATH:xxxxxxx</span><br><span class="line"></span><br><span class="line"># vimrc</span><br><span class="line"> export MYVIMRC=xxxx/.vim/.vimrc</span><br><span class="line"> export VIMINIT=&quot;let &amp;rtp=&apos;xxxx/.vim,&apos; . &amp;rtp</span><br><span class="line"> so $MYVIMRC&quot;</span><br></pre></td></tr></table></figure></p><p>python环境使用的是anaconda（或者minicoonda）添加激活环境。<br>在<code>~/.bashrc</code>中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias talen=&apos;source xxx/talen_bashrc &amp;&amp; source activate xxx/envs&apos;</span><br><span class="line">alias utalen=&apos;source deactivate&apos;</span><br></pre></td></tr></table></figure></p><p>github <a href="https://github.com/talengu/vim/blob/master/bashrc" target="_blank" rel="noopener">bashrc</a></p><p>其他的vimrc配置见我的github项目<a href="https://github.com/talengu/vim" target="_blank" rel="noopener">vimrc</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;使用终端有一段时间了，现在主力的平台是Ubuntu16.04，本文对bash、vim、tmux配置的一些记录。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://talengu.github.io/public/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://talengu.github.io/public/tags/Ubuntu/"/>
    
      <category term="Bashrc" scheme="https://talengu.github.io/public/tags/Bashrc/"/>
    
      <category term="Vimrc" scheme="https://talengu.github.io/public/tags/Vimrc/"/>
    
      <category term="Tmux" scheme="https://talengu.github.io/public/tags/Tmux/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter notebook的配置</title>
    <link href="https://talengu.github.io/public/2017/07/03/linux/jupyter_notebook/"/>
    <id>https://talengu.github.io/public/2017/07/03/linux/jupyter_notebook/</id>
    <published>2017-07-03T08:00:04.000Z</published>
    <updated>2017-07-03T08:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概要：<br>jupyter notebook的安装</p></blockquote><a id="more"></a><h2 id="1-安装与配置"><a href="#1-安装与配置" class="headerlink" title="1. 安装与配置"></a>1. 安装与配置</h2><h3 id="安装jupyter"><a href="#安装jupyter" class="headerlink" title="安装jupyter"></a>安装jupyter</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install jupyter</span><br><span class="line"><span class="comment"># pip install jupyter -y</span></span><br></pre></td></tr></table></figure><h3 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 生成配置文件</span></span><br><span class="line">jupyter notebook --generate-config</span><br><span class="line">vim ~/.jupyter/jupyter_notebook_config.py</span><br></pre></td></tr></table></figure><p>修改配置文件里面的对应内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.ip = <span class="string">'0.0.0.0'</span></span><br><span class="line">c.NotebookApp.port = <span class="number">8018</span></span><br><span class="line"><span class="comment"># 设置密码</span></span><br><span class="line">c.NotebookApp.password = <span class="string">u'sha1:bcd259ccf...your hashed password here'</span></span><br></pre></td></tr></table></figure><blockquote><p>Tip: 利用ipython 生成密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; In [1]: from IPython.lib import passwd</span><br><span class="line">&gt; In [2]: passwd()</span><br><span class="line">&gt;   Enter password:</span><br><span class="line">&gt;   Verify password:</span><br><span class="line">&gt;   Out[2]: &apos;sha1:67xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></p></blockquote><p>此处我选用的是一个密码的方案，jupyter的密码其他设置方案见 <a href="https://zhuanlan.zhihu.com/p/23110830" target="_blank" rel="noopener">link</a></p><h3 id="安装插件-nbextensions"><a href="#安装插件-nbextensions" class="headerlink" title="安装插件 nbextensions"></a>安装插件 <strong>nbextensions</strong></h3><p><strong>nbextensions</strong>是对于jupyter notebook 的一些插件，有很多有趣的插件，我选用了几个。jupyter_contrib_nbextensions <a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener">github</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用conda安装</span></span><br><span class="line">conda install jupyter</span><br><span class="line">conda install -c conda-forge jupyter_contrib_nbextensions</span><br><span class="line"></span><br><span class="line"><span class="comment"># pip安装</span></span><br><span class="line">pip install jupyter_contrib_nbextensions --user</span><br><span class="line"><span class="comment"># 使能</span></span><br><span class="line">jupyter contrib nbextension install --user</span><br></pre></td></tr></table></figure><p>我启用的一些插件</p><table><thead><tr><th>plugins</th><th></th><th></th></tr></thead><tbody><tr><td>Table of Contents (2)</td><td></td><td></td></tr><tr><td>Freeze</td><td>比较好的一个插件，可以用来冻住cell</td><td></td></tr><tr><td>nbTranslate</td><td>这个插件利用Google翻译cell很好用</td><td><a href="https://github.com/jfbercher/jupyter_nbTranslate/blob/master/languages.js" target="_blank" rel="noopener">support languages</a></td></tr><tr><td>ExecuteTime</td><td>显示执行时间</td></tr></tbody></table><h3 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h3><p>jupyter使用Anaconda miniconda环境需要安装的组件。<br>[conda repo][<a href="https://repo.anaconda.com]" target="_blank" rel="noopener">https://repo.anaconda.com]</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name python=2.7</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> conda虚拟核组件</span></span><br><span class="line">conda install nb_conda_kernels</span><br></pre></td></tr></table></figure><h2 id="2-使用的技巧"><a href="#2-使用的技巧" class="headerlink" title="2. 使用的技巧"></a>2. 使用的技巧</h2><h3 id="2-1-基本操作"><a href="#2-1-基本操作" class="headerlink" title="2.1 基本操作"></a>2.1 基本操作</h3><p><strong>快捷键</strong></p><table><thead><tr><th>在非激活状态即是蓝颜色的边框</th><th>内容</th></tr></thead><tbody><tr><td>A</td><td>insert cell above</td></tr><tr><td>B</td><td>insert cell below</td></tr><tr><td>H</td><td>查看帮助</td></tr><tr><td>⌃↩(ctrl + enter)</td><td>run selected cells</td></tr></tbody></table><h3 id="2-2-技巧"><a href="#2-2-技巧" class="headerlink" title="2.2 技巧"></a>2.2 技巧</h3><p>主要是画图、显示视频和音频的方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图片</span></span><br><span class="line">%%HTML</span><br><span class="line">&lt;img src=<span class="string">"xxx.jpg"</span>  alt=<span class="string">"title"</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 视频</span></span><br><span class="line">%%HTML</span><br><span class="line">&lt;video width=<span class="string">"330"</span> height=<span class="string">"150"</span> controls&gt;</span><br><span class="line">&lt;source src=<span class="string">"out_all.mp4"</span> type=<span class="string">"video/mp4"</span>&gt;</span><br><span class="line">&lt;/video&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 语音</span></span><br><span class="line">%%HTML</span><br><span class="line">&lt;audio src=<span class="string">"out.wav"</span> controls=<span class="string">"controls"</span>&gt;</span><br><span class="line">Your browser does <span class="keyword">not</span> support the audio element.</span><br><span class="line">&lt;/audio&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># html t是html的字符串</span></span><br><span class="line"><span class="keyword">from</span> IPython.core.display <span class="keyword">import</span> HTML</span><br><span class="line">HTML(str(t))</span><br></pre></td></tr></table></figure><h3 id="2-3-其他技巧"><a href="#2-3-其他技巧" class="headerlink" title="2.3 其他技巧"></a>2.3 其他技巧</h3><h4 id="修复视频文件"><a href="#修复视频文件" class="headerlink" title="修复视频文件"></a>修复视频文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fix_use_ffmpeg</span><span class="params">(in_name, out_name,message=<span class="string">""</span>)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(out_name):</span><br><span class="line">    os.remove(out_name)</span><br><span class="line">    cmd = <span class="string">'ffmpeg -i %s %s'</span> % (in_name, out_name)</span><br><span class="line">    log_lines = os.popen(cmd).readlines()</span><br><span class="line">    print(message,<span class="string">"ok"</span>)</span><br></pre></td></tr></table></figure><h4 id="加载自己的模块文件"><a href="#加载自己的模块文件" class="headerlink" title="加载自己的模块文件"></a>加载自己的模块文件</h4><p>出于性能考虑，每个模块在每个解释器会话中只导入一遍。因此，如果你修改了你的模块，需要重启解释器；或者，如果你就是想交互式的测试这么一个模块，可以用 imp.reload() 重新加载，例如 <code>import imp; imp.reload(modulename)</code></p><h4 id="导出pdf支持中文"><a href="#导出pdf支持中文" class="headerlink" title="导出pdf支持中文"></a>导出pdf支持中文</h4><p>Jupyter Notebook 输出PDF中文支持 <a href="https://www.jianshu.com/p/c3f660188766" target="_blank" rel="noopener">link</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib/python3.6/site-packages/nbconvert/templates/latex</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在里面的模版中添加，前提是安装好了texlive</span></span><br><span class="line">% add</span><br><span class="line">\usepackage&#123;ctex&#125;</span><br></pre></td></tr></table></figure><h4 id="ipynb2pdf"><a href="#ipynb2pdf" class="headerlink" title="ipynb2pdf"></a>ipynb2pdf</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Current version of Jupyter doesn't support pdf exporting when it comes to</span></span><br><span class="line"><span class="string">russian language in the document. To fix this, current script has born.</span></span><br><span class="line"><span class="string">It requires nbconvert as long as jupyter to be installed.</span></span><br><span class="line"><span class="string">Author:     Sergey Ivanychev</span></span><br><span class="line"><span class="string">Email:      sergeyivanychev@gmail.com</span></span><br><span class="line"><span class="string">Revision:   1</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"></span><br><span class="line">FORMAT = <span class="string">".ipynb"</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">TODO:   What if user has ___o.tex in current folder?</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">TEMP_TEX = <span class="string">"___o.tex"</span></span><br><span class="line">TEMP_FOLDER = <span class="string">"/tmp"</span></span><br><span class="line">TRASH_EXTENSIONS = [<span class="string">".aux"</span>, <span class="string">".out"</span>, <span class="string">".log"</span>]</span><br><span class="line">OLD1 = <span class="string">r"\usepackage[utf8x]&#123;inputenc&#125;"</span></span><br><span class="line">NEW1 = <span class="string">r"""</span></span><br><span class="line"><span class="string">    \usepackage[utf8x]&#123;inputenc&#125;</span></span><br><span class="line"><span class="string">    \usepackage&#123;ctex&#125;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">REPLACE = [(OLD1, NEW1)]</span><br><span class="line">HELP = <span class="string">"""</span></span><br><span class="line"><span class="string">This script is aimed at correctly converting .ipynb to .pdf files.</span></span><br><span class="line"><span class="string">You may use it via</span></span><br><span class="line"><span class="string"># ipynb2pdf Solution.ipynb</span></span><br><span class="line"><span class="string">To get .pdf in the same directory</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_args</span><span class="params">(argv)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> (len(argv) &gt; <span class="number">2</span>):</span><br><span class="line">        print(<span class="string">"Please, type .ipynb filename as argument"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> (len(argv) == <span class="number">1</span>):</span><br><span class="line">        print(HELP)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    script, filename = argv</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> is_ipynb(filename):</span><br><span class="line">        print(<span class="string">"Please, type .ipynb filename as argument"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">remove_extention</span><span class="params">(string, extention)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Removes argumented extention from the end of the string</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> extention[<span class="number">0</span>] != <span class="string">'.'</span>:</span><br><span class="line">        extention = <span class="string">"."</span> + extention</span><br><span class="line">    <span class="keyword">if</span> string.endswith(extention):</span><br><span class="line">        string = string[<span class="number">0</span>:-len(extention)]</span><br><span class="line">    <span class="keyword">return</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_ipynb</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> filename.endswith(<span class="string">".ipynb"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tex2pdf</span><span class="params">(filename, desired_name)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Converts filename (which is tex document) to desired_name (which is pdf)</span></span><br><span class="line"><span class="string">    leaving no trash in current folder</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    base = remove_extention(filename, <span class="string">"tex"</span>)</span><br><span class="line">    output = base + <span class="string">".pdf"</span></span><br><span class="line">    ret = subprocess.call(<span class="string">"xelatex %s"</span> % filename , </span><br><span class="line">                                        shell=<span class="literal">True</span>, stdout=subprocess.PIPE)</span><br><span class="line">    <span class="keyword">for</span> ext <span class="keyword">in</span> TRASH_EXTENSIONS:</span><br><span class="line">        os.unlink(base + ext)</span><br><span class="line">    os.rename(output, desired_name)</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(argv)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> check_args(argv) == <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    script, filename = argv</span><br><span class="line">    ret = subprocess.call(<span class="string">"jupyter nbconvert %s --to latex --output %s"</span> %</span><br><span class="line">                                            (filename, TEMP_TEX), shell=<span class="literal">True</span>,</span><br><span class="line">                                            stdout=subprocess.PIPE)</span><br><span class="line">    <span class="keyword">if</span> (ret != <span class="number">0</span>):</span><br><span class="line">        print(<span class="string">"ret = %d"</span> % ret)</span><br><span class="line">        os.unlink(TEMP_TEX)</span><br><span class="line">        print(<span class="string">"Converting to LaTeX failed. Return code: %d"</span> % ret)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    tex_file = open(TEMP_TEX, <span class="string">"r"</span>)</span><br><span class="line">    tex = tex_file.read()</span><br><span class="line">    <span class="keyword">for</span> old, new <span class="keyword">in</span> REPLACE:</span><br><span class="line">        tex = tex.replace(old, new)</span><br><span class="line">    tex_file.close()</span><br><span class="line">    os.unlink(TEMP_TEX)</span><br><span class="line">    tex_file = open(TEMP_TEX, <span class="string">"w+"</span>)</span><br><span class="line">    tex_file.write(tex)</span><br><span class="line">    tex_file.close()</span><br><span class="line">    ret = tex2pdf(TEMP_TEX, remove_extention(filename, <span class="string">".ipynb"</span>) + <span class="string">".pdf"</span>)</span><br><span class="line">    tex_file.close()</span><br><span class="line">    os.unlink(TEMP_TEX)</span><br><span class="line">    print(remove_extention(filename, <span class="string">".ipynb"</span>) + <span class="string">".pdf - DONE"</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    exit(main(sys.argv))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;概要：&lt;br&gt;jupyter notebook的安装&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Jupyter" scheme="https://talengu.github.io/public/categories/Jupyter/"/>
    
    
      <category term="Python" scheme="https://talengu.github.io/public/tags/Python/"/>
    
      <category term="Notebook" scheme="https://talengu.github.io/public/tags/Notebook/"/>
    
      <category term="Tools" scheme="https://talengu.github.io/public/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu引导修复</title>
    <link href="https://talengu.github.io/public/2017/06/14/linux/boot_recovery/"/>
    <id>https://talengu.github.io/public/2017/06/14/linux/boot_recovery/</id>
    <published>2017-06-14T08:00:04.000Z</published>
    <updated>2017-06-14T08:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>本文记录修复ubuntu引导，并修改ubuntu盘的大小过程。<br>参考：<a href="http://www.cnblogs.com/jloveu/p/Ubuntu-partition-expansion-record.html" target="_blank" rel="noopener">http://www.cnblogs.com/jloveu/p/Ubuntu-partition-expansion-record.html</a><br>工具：Ubuntu 的live U盘，带有gparted分区工具，和grub修复工具</p><a id="more"></a><h2 id="修复启动"><a href="#修复启动" class="headerlink" title="修复启动"></a>修复启动</h2><p>对于使用gpt的格式的硬盘，ubuntu不要用uefi来安装。gpt还要生成一个bootgios的分区，很重要。</p><p>执行以下命令（以root身份）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir /tmp/mydir</span><br><span class="line">mount /dev/sda8 /tmp/mydir  (注：其中的`/dev/sda8`为我的`/`分区标识，根据自己情况修改为自己的`/`分区标识)</span><br><span class="line">mount /dev/sda11 /tmp/mydir/boot  (注：同上，`/dev/sda11`为`/boot`分区标识)</span><br><span class="line">mount --bind /dev /tmp/mydir/dev</span><br><span class="line">mount --bind /proc /tmp/mydir/proc</span><br><span class="line">mount --bind /sys /tmp/mydir/sys</span><br><span class="line">chroot /tmp/mydir  (此步可能输出一些信息，可以无视)</span><br><span class="line">grub-install /dev/sda  (注：其中的`/dev/sda`为`/`分区所在硬盘的标识)</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h2 id="修改Ubuntu多系统的默认启动顺序"><a href="#修改Ubuntu多系统的默认启动顺序" class="headerlink" title="修改Ubuntu多系统的默认启动顺序"></a>修改Ubuntu多系统的默认启动顺序</h2><p><a href="http://jingyan.baidu.com/article/f71d60379e16021ab641d1ab.html" target="_blank" rel="noopener">link</a><br>打开该配置文件”/etc/default/grub”<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/grub</span><br><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure></p><p>其中的“GRUB_DEFAULT=0”为设置默认启动项。系统启动菜单Windows10的启动项在第5项，修改为4（GRUB启动项是从0开始的）。<br><img src="/public/2017/06/14/linux/boot_recovery/boot_file.png" alt="GRUB修改"></p><h2 id="去除多余GRUB启动项（直接）"><a href="#去除多余GRUB启动项（直接）" class="headerlink" title="去除多余GRUB启动项（直接）"></a>去除多余GRUB启动项（直接）</h2><p><a href="https://zhidao.baidu.com/question/472571337.html" target="_blank" rel="noopener">link</a><br>注释掉“/boot/grub/grub.cfg”中对应<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure></p><h2 id="Ubuntu下如何修复Grub引导"><a href="#Ubuntu下如何修复Grub引导" class="headerlink" title="Ubuntu下如何修复Grub引导"></a>Ubuntu下如何修复Grub引导</h2><p><a href="https://mp.weixin.qq.com/s/NDZPPA-0FhqSzRndQOhNEw" target="_blank" rel="noopener">link</a></p><p>本文以 Ubuntu Live CD 修复 Grub 引导为例，已在 /dev/sda3 安装 Fedora。</p><p>　　首先制作 Ubuntu 启动 USB</p><p>　　复制代码代码如下：<br>　　<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　sudo dd if=ubuntu-13.10-desktop-amd64.iso of=/dev/sdb </span><br><span class="line">　　#/dev/sdb 为 USB 盘符</span><br></pre></td></tr></table></figure></p><p>　　<br>　1.使用启动 USB 进入 Ubuntu 试用环境</p><p>　2.查看硬盘分区状况，获取 Linux 系统安装分区编号<br>　　代码如下：</p><p>　　sudo fdisk -l</p><p>查看输出结果，然后根据文件类型和分区大小来判定 Linux 系统安装在哪块硬盘和安装的分区。我的电脑是在 /dev/sda3 安装了 Fedora。</p><p>　　或者，打开 Gparted 图形化工具来查看分区信息也可以。</p><p>　　挂载 Fedora 安装分区</p><p><strong>3.已知 Fedora 安装在了 /dev/sda3 上，所以我们可以用下面命令来挂载 Fedora 安装分区。你需要将 /dev/sda3 换成自己的 Linux 安装分区。</strong></p><p>　　代码如下：</p><p>　　sudo mount /dev/sda3 /mnt</p><p><strong>4.挂载其他所需的目录（使用 –bind）</strong></p><p>　　代码如下：</p><p>　　sudo mount –bind /dev /mnt/dev</p><p>　　sudo mount –bind /proc /mnt/proc</p><p>　　sudo mount –bind /sys /mnt/sys</p><p><strong>5.Chroot 到硬盘上的 Linux 系统</strong></p><p>　　代码如下：</p><p>　　sudo chroot /mnt</p><p>　　<strong>6.安装&amp;更新 Grub</strong></p><p>　　代码如下：</p><p>　　grub2-install /dev/sda</p><p>　　grub2-mkconfig -o /boot/grub2/grub.cfg</p><p>　　<strong>7.Grub 已经修复成功，我们还需要退出 chroot 环境、卸载已经挂载的设备与目录：</strong></p><p>　　代码如下：</p><p>　　exit #退出 chroot 环境</p><p>　　sudo umount /mnt/dev</p><p>　　sudo umount /mnt/proc</p><p>　　sudo umount /mnt/sys</p><p>　　sudo umount /mnt</p><p>　　<strong>8.重启！</strong></p><p>　　上面就是使用Ubuntu LiveCD修复grub的方法介绍了，如果你在使用双系统安装windows中出现Grub引导错误，不妨使用该方法进行修复吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;本文记录修复ubuntu引导，并修改ubuntu盘的大小过程。&lt;br&gt;参考：&lt;a href=&quot;http://www.cnblogs.com/jloveu/p/Ubuntu-partition-expansion-record.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.cnblogs.com/jloveu/p/Ubuntu-partition-expansion-record.html&lt;/a&gt;&lt;br&gt;工具：Ubuntu 的live U盘，带有gparted分区工具，和grub修复工具&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://talengu.github.io/public/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://talengu.github.io/public/tags/Ubuntu/"/>
    
      <category term="BootRecovery" scheme="https://talengu.github.io/public/tags/BootRecovery/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu的优化与设置</title>
    <link href="https://talengu.github.io/public/2017/05/22/linux/ubuntu/"/>
    <id>https://talengu.github.io/public/2017/05/22/linux/ubuntu/</id>
    <published>2017-05-22T10:00:04.000Z</published>
    <updated>2017-05-22T10:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>概要：<br>本文整理了一下我在使用ubuntu过程中的一些小技巧。<br>一个好的Ubuntu教程.<a href="http://www.cnblogs.com/dutlei/archive/2012/11/20/2778327.html" target="_blank" rel="noopener">原文链接</a><br>Linux有很多分支，Ubuntu的使用安装比较方便.Ubuntu 16.04 LTS</p></blockquote><a id="more"></a><h2 id="1-个性化"><a href="#1-个性化" class="headerlink" title="1.个性化"></a>1.个性化</h2><h3 id="窗口颜色设置浅绿色"><a href="#窗口颜色设置浅绿色" class="headerlink" title="窗口颜色设置浅绿色"></a>窗口颜色设置浅绿色</h3><p>窗口编程浅绿色  <a href="http://jingyan.baidu.com/article/ff42efa9195eb8c19e2202ec.html" target="_blank" rel="noopener">link</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/themes/Ambiance/gtk-3.0</span><br><span class="line">sudo gedit gtk-main.css</span><br></pre></td></tr></table></figure></p><p>编辑该文件,将base_color <code>#ffffff</code>修改成 <code>#CCE8CF</code><br>对应RGB  48,19,36</p><h2 id="2-常用环境"><a href="#2-常用环境" class="headerlink" title="2. 常用环境"></a>2. 常用环境</h2><h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><p>打开文件 <code>vim ~/.bashrc</code>，在文件后面添加下面几行，其中<code>JAVA_HOME</code>根据自己的java安装位置修改。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add java path</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/java/jdk1.7</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><p>别忘了，<code>source ~/.bashrc</code>激活环境</p><h2 id="3-安装软件"><a href="#3-安装软件" class="headerlink" title="3. 安装软件"></a>3. 安装软件</h2><h3 id="在线软件安装"><a href="#在线软件安装" class="headerlink" title="在线软件安装"></a>在线软件安装</h3><p><strong>源列表地址修改(可选)</strong>，如果选用靠近的源速度会比较快，但是可能不是最新的软件。现在好像ubuntu china的官方节点速度还不错。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份源列表地址</span></span><br><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup</span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure></p><p><strong>在线安装</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新源</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包search</span></span><br><span class="line">apt-cache search xxx</span><br></pre></td></tr></table></figure></p><h3 id="deb本地软件安装"><a href="#deb本地软件安装" class="headerlink" title="deb本地软件安装"></a>deb本地软件安装</h3><p><strong>安装软件</strong><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装deb包命令</span></span><br><span class="line">dpkg -i *.deb</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果缺少依赖执行</span></span><br><span class="line">apt-get -f install</span><br></pre></td></tr></table></figure></p><h2 id="4-常用软件"><a href="#4-常用软件" class="headerlink" title="4. 常用软件"></a>4. 常用软件</h2><h3 id="mpv播放器"><a href="#mpv播放器" class="headerlink" title="mpv播放器"></a>mpv播放器</h3><h3 id="有道字典"><a href="#有道字典" class="headerlink" title="有道字典"></a>有道字典</h3><p>有道字典 需要修改一下才能使用。 <a href="http://www.w2bc.com/article/227083" target="_blank" rel="noopener">link</a></p><h3 id="atom"><a href="#atom" class="headerlink" title="atom"></a>atom</h3><p>高分屏字体大小，Settings-&gt;Themes-&gt;your stylesheet<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">atom-pane</span> &#123;</span><br><span class="line">     <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="selector-class">.command-palette</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><h3 id="图标设置"><a href="#图标设置" class="headerlink" title="图标设置"></a>图标设置</h3><p>对于一些绿化软件来说没有图标，我们可以手动创建一个图标。<br>在/usr/share/applications目录下创建eclipse启动器配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/share/applications</span><br><span class="line">vim eclipse.desktop</span><br></pre></td></tr></table></figure><p>编辑eclipse.desktop并保存。简单的配置示例：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env xdg-open</span></span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Version=22.0</span><br><span class="line">Name=eclipse</span><br><span class="line">Exec=/home/gtc/Android/adt-bundle-linux/eclipse/eclipse</span><br><span class="line">Terminal=false</span><br><span class="line">Icon=/home/gtc/Android/adt-bundle-linux/eclipse/icon.xpm</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Development</span><br></pre></td></tr></table></figure></p><h2 id="5-其他优化"><a href="#5-其他优化" class="headerlink" title="5. 其他优化"></a>5. 其他优化</h2><h3 id="关闭错误报告"><a href="#关闭错误报告" class="headerlink" title="关闭错误报告"></a>关闭错误报告</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭烦人的错误报告</span></span><br><span class="line">sudo gedit /etc/default/apport</span><br></pre></td></tr></table></figure><h3 id="CPU-100-占用"><a href="#CPU-100-占用" class="headerlink" title="CPU 100%占用"></a>CPU 100%占用</h3><p>gvfsd-smb-browse CPU 100%占用<br>我没有修改，它就自己停了，可以在mointer里中止这个进程<br>地址<br><a href="http://tieba.baidu.com/p/4505730863" target="_blank" rel="noopener">http://tieba.baidu.com/p/4505730863</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/gvfs</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将gvfsd-smb-brows权限改成744，取消普通用户的执行权限，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 也挺有意思，暂时没引发别的问题</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;概要：&lt;br&gt;本文整理了一下我在使用ubuntu过程中的一些小技巧。&lt;br&gt;一个好的Ubuntu教程.&lt;a href=&quot;http://www.cnblogs.com/dutlei/archive/2012/11/20/2778327.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原文链接&lt;/a&gt;&lt;br&gt;Linux有很多分支，Ubuntu的使用安装比较方便.Ubuntu 16.04 LTS&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://talengu.github.io/public/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://talengu.github.io/public/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>红楼梦与我</title>
    <link href="https://talengu.github.io/public/2017/05/14/readings/hongloumeng/"/>
    <id>https://talengu.github.io/public/2017/05/14/readings/hongloumeng/</id>
    <published>2017-05-14T04:39:04.000Z</published>
    <updated>2017-05-14T04:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>红楼梦是我国四大名著之一，主要内容是贾府的兴衰和宝黛的悲剧爱情。电视剧红楼梦2010版，我是从八月开始看的，看完到现在，也有小一个月了。在网上大家对这版电视剧褒贬不一。与我来说，我是喜欢这部剧的，不能说拍得很好，但这部剧却勾起了我读书与写字的兴趣。于是乎，做了一篇随笔，以记录我的一些感触。  </p><a id="more"></a><p>我记得最早是小学，我们还是顾着打玻璃珠和丢沙包的年纪，学校旁边的小书店里，也都是七龙珠，哆啦A梦，柯南的小人书，老师们讲到四大名著，顺带提了下红楼梦，其他没印象了。我们学习最多的是中文的拼音和书写，作文都是打油，日记也闹了不少笑话。后来上初中，有一次寒假附加作业是阅读红楼梦，我虽毫无兴趣，但还是硬着头皮，去新华书店，试看红楼梦。120章的红楼，厚得连看下去的勇气也没有。略看了几下，最后，做了一个红楼梦不好看的论断，也就放在那边了。那时有老版的红楼梦电视剧播映，打开电视偶尔会遇见，但是立马换台，央视的西游记与情深深雨蒙蒙，湖南电视台的还珠格格，也是欣赏了好几遍。再者，有动画片谁有兴趣去看这些什么破剧，关于书本，最多也就是看看汤姆索亚历险记。</p><p>再后来，去启中读书，学习上比较紧张，再加上理科班的非文学氛围，对这些文学的东西更不感冒。尽管偶尔也会入耳一些其中的人物，比如林妹妹，刘姥姥，也是不用大脑耳朵直接过滤。当时，大伙是杂志，读者，青年文摘读得比较多，班上一本，全班查阅，杂志文章篇幅较小，读起很顺很舒服。期间，与红楼的唯一一次接触是，高中教科书上有刘姥姥进大观园的章节，翻了一遍，当时，感叹人物好多，理不出人物关系，完全放弃看完红楼的欲望。以为姥姥是贾府的姥姥，猩猩然想着以后可以说看过一段红楼，红楼也比较贵不如多买几本读者，积累作文素材。不知什么时候，班上网络小说之风随着mp4和智能手机的普及而吹起，我也用MP4刷完了一两部网络小说，感觉都是一个套路，主角都是绝处逢生，越来越无敌，也就不敢兴趣了。</p><p>再然后，我上大学，藏书400百万册的成电图书馆，也并没有引起我读文学类的欲望，大学四年借的专业工具类书比较多，想来也是浪费资源。在一个工科高校，文学方面的课程几乎没有，虽说有个大学语文的选修课，俨然不感兴趣。大学里，再一次看到有人在看红楼梦电视剧，也是大二的时候的人工智能课上，也是闲得无聊。再后来，大四时，手机上自带一个蜻蜓网络电台应用，无聊点开蒋勋老师评述的红楼梦音频，红学大师讲到他与红楼梦的相遇，同时，他介绍的红楼基本背景和人物，通俗易懂，一下子引起我的兴趣。他说红楼梦写的都是15、6岁人的故事，15、16岁就可以读了。回想我15、16岁，基本没看什么名著。要说四大名著，我也就看了三国和水浒的少年版。上次回家，看美剧，老妈突然蹦出句，不能光看英文也应当看看我们老祖宗的文化。</p><p>现在得空，就这样抱着惭愧和一丝尝试我看起了2010版红楼梦。在这我得承认，我是个演员控。不得不说，三大主演都很不错。</p><p>50集过后，原来红楼讲得是这个，并表示有兴趣去读读名著了。原来有这么多原来。</p><ul><li><p>人物家族命运令人感慨。作者写出超越那个时代的朦胧的爱情与不得不提的丧心病狂的全部悲剧，果然是个失意文人的作品。 可叹停机德，堪怜咏絮才。宝钗落落大方德才兼备，黛玉因情而伤而痛去世，宝玉虽与宝钗结婚，最后离家成道去。精于人情世故,，胸有城府的王熙凤，平日的爽朗笑声终究悲剧，贾府里多么好的领导，最后也人情冷暖，不免为其伤心。刘姥姥，其实是个成功的投机分子，但也是朴实善良的“穷亲戚”，最后救了巧儿。十二金钗各有个的悲剧，正如宝玉在虚幻仙境里警幻仙姑给的设定。原来故事一开始就把结局告诉了读者。</p></li><li><p>体验古代贵族文化。里面还有个诗社的组织，古人的结社，好有雅致，也会给人起“绰号”。除此以外还有击鼓传花，有时主题是讲笑话有时对诗。猜灯谜，中秋赏月，生日宴会等等。</p></li><li><p>语言魅力。打秋风，这是形容刘姥姥找找贾府接济用的。恼，生气，或者使生气。不同人的称谓，宝兄弟，宝二爷，宝姐姐或者好姐姐，林妹妹或者好妹妹。</p></li><li><p>情节回味无穷。刘姥姥进大观园，是贾母和姥姥差不多年纪想和她聊聊，邀请她的。乡村来打秋风的刘姥姥像是在参观皇宫。在后面时期  ，家族里一次比一次捉襟见肘的聚会，可以看见这些家族的衰落。中国的各种人情世故体现在这里面。四个大家族，一个小社会。</p></li></ul><p>以上是我的一点点感悟。</p><p>只是，我与红楼梦，还差80章书页，希望还能有计划地读完。</p><p>2016年于成电</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;红楼梦是我国四大名著之一，主要内容是贾府的兴衰和宝黛的悲剧爱情。电视剧红楼梦2010版，我是从八月开始看的，看完到现在，也有小一个月了。在网上大家对这版电视剧褒贬不一。与我来说，我是喜欢这部剧的，不能说拍得很好，但这部剧却勾起了我读书与写字的兴趣。于是乎，做了一篇随笔，以记录我的一些感触。  &lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://talengu.github.io/public/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="故事" scheme="https://talengu.github.io/public/tags/%E6%95%85%E4%BA%8B/"/>
    
      <category term="《红楼梦》" scheme="https://talengu.github.io/public/tags/%E3%80%8A%E7%BA%A2%E6%A5%BC%E6%A2%A6%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>数学问题 - 一个空间解析几何问题</title>
    <link href="https://talengu.github.io/public/2017/05/05/math/math_q1/"/>
    <id>https://talengu.github.io/public/2017/05/05/math/math_q1/</id>
    <published>2017-05-05T08:00:04.000Z</published>
    <updated>2017-05-05T08:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>偶然看到的一个问题，好久没做空间解析几何的题目。试着练习一下，顺便练习一下Latex输入公式。</p><p>如果有错误或更好的解答，欢迎在下面回复。转载请注明出处。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><img src="/public/2017/05/05/math/math_q1/math_q1_show.gif" alt="动图"></p><p><div align="center"> <b>Fig 1.  为什么会经过这个空隙？</b></div><br><a id="more"></a></p><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>首先建立空间直角坐标系，$P$ 点为水平杆与斜杆的交点，$Q$点为垂直杆与水平杆的交点，<br>将斜杆标记为 $L$，假设 $OQ=q$ ，$QP=r$ 。</p><p>再设水平杆 $ QP $ 绕 $ z $ 轴以 $ \omega\, rad/s $ 的角速度旋转，并设开始旋转的时间长度为$t$ 秒，<br>则 $P$ 点坐标为 $ (r\cos{\omega t}, r\sin{\omega t}, q) $<br>$$<br>\overrightarrow{OQ}=(0, 0, q) \qquad \overrightarrow{QP}=(r\cos{\omega t}, r\sin{\omega t}, 0)<br>\tag{1}<br>$$</p><p>我们知道 $\overrightarrow{QP}$ 与斜杆 $L$ 垂直，假设 $\overrightarrow{OQ}$ 与斜杆 $L$ 成固定角 $\theta$ ，设 $L$ 的方向向量 $\overrightarrow{S}=(a, b, c)$</p><p>斜杆 $L$ 代表的直线：<br>$$<br>\frac{x-r\cos{\omega t}}{a}=\frac{y-r\sin{\omega t}}{b}=\frac{z-q}{c}<br>\tag{2}<br>$$</p><p>$$<br>\begin{cases}<br>0=\overrightarrow{QP} \cdot \overrightarrow{S} \\<br>\cos{\theta}=\frac{\overrightarrow{OQ} \cdot \overrightarrow{S}}{\left|\overrightarrow{OQ}\right| \left| \overrightarrow{S}\right|}<br>\end{cases}<br>$$</p><p>$$<br>\frac{a}{c}=\frac{-\sin{\omega t}}{\cos{\omega t}}<br>$$</p><p>$$<br>b^{2}(\tan{\theta})^{2}=a^{2}+c^{2}<br>$$</p><p>$$<br>\frac{b^{2}}{c^{2}}=\frac{1}{(\tan{\theta})^{2}(\cos{\omega t})^{2}}<br>$$</p><p>为了求直线组 $L$ 与 $xoy$ 平面相交的图形，我们令 $z=0$<br>$$<br>\frac{x-r\cos{\omega t}}{a}=\frac{y-q}{b}=\frac{-r\sin{\omega t}}{c}<br>$$</p><p>$$<br>\begin{cases}<br>\frac{a}{c}=\frac{1}{(\tan{\theta})^{2}(\cos{\omega t})^{2}}\\<br>\frac{x-r\cos{\omega t}}{a}=\frac{-r\sin{\omega t}}{c}<br>\end{cases}<br>$$</p><p>$$<br>\cos{tx}=r\<br>(\cos{\omega t})^{2}=\frac{r^{2}}{x^{2}}\<br>(\sin{\omega t})^{2}=\frac{x^{2}-r^{2}}{x^{2}}<br>$$</p><p>$$<br>\begin{cases}<br>\frac{b^{2}}{c^{2}}=\frac{1}{(\tan{\theta})^{2}(\cos{\omega t})^{2}}\\<br>\frac{y-q}{b}=\frac{-r\sin{\omega t}}{c}<br>\end{cases}<br>$$</p><p>消去 $ (\cos{\omega t})^{2} $ 和 $ (\sin{\omega t})^{2} $</p><p>最后，得 $ x^{2}-(\tan{\theta})^{2}(y-q)^{2}=r^{2} $ ，易知为双曲线方程，所以在 $ xoy $ 平面相交得图形为双曲线。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;偶然看到的一个问题，好久没做空间解析几何的题目。试着练习一下，顺便练习一下Latex输入公式。&lt;/p&gt;
&lt;p&gt;如果有错误或更好的解答，欢迎在下面回复。转载请注明出处。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/public/2017/05/05/math/math_q1/math_q1_show.gif&quot; alt=&quot;动图&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt; &lt;b&gt;Fig 1.  为什么会经过这个空隙？&lt;/b&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数学问题" scheme="https://talengu.github.io/public/categories/%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="空间解析几何" scheme="https://talengu.github.io/public/tags/%E7%A9%BA%E9%97%B4%E8%A7%A3%E6%9E%90%E5%87%A0%E4%BD%95/"/>
    
      <category term="Latex" scheme="https://talengu.github.io/public/tags/Latex/"/>
    
      <category term="Math" scheme="https://talengu.github.io/public/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>琉璃易碎，人言易坠——关于《莺莺传》的叙事</title>
    <link href="https://talengu.github.io/public/2017/04/14/readings/yingyingzhuan/"/>
    <id>https://talengu.github.io/public/2017/04/14/readings/yingyingzhuan/</id>
    <published>2017-04-14T04:39:04.000Z</published>
    <updated>2017-04-14T04:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>《西厢记》的书评:【琉璃易碎，人言易坠——关于《莺莺传》的叙事】转载<br>…全文:<a href="https://www.douban.com/doubanapp/dispatch?uri=/review/1200691/" target="_blank" rel="noopener">(豆瓣link)</a></p></blockquote><p>“半欲天明半未明，醉闻花气睡闻莺。 狌儿撼起钟声动，二十年来晓寺情。 ”男人四十的元微之写着酸酸的诗，回忆年少风流。假如我是元微之，我一定会这般写道：天空尚未亮透，微微透着点光，远处传来钟声，让我的思绪一下子回忆到二十年前，也是这样的一个早晨，在那所古寺的西厢，那个散发着鲜花一样香气的女子，用鸟儿般宛转的声音在我耳边低语：“钟声响了，想来我也该回去了。”那声音一直萦绕在耳边，十年、二十年、也许一辈子在我在记忆深处响起……。</p><a id="more"></a><p>夜宿古刹，偶遇佳人，相伴遥夜，缠绵缱绻，天明而别。这样的际遇，是最最典型的古代书生的爱情幻想。在一个陌生的地方，遇到一个陌生人，发生一段有始无终的感情。书生注定要做个过客，一生漂泊在对那个女子的思念中，却没有勇气长相守。</p><p>当我还是一个初中生的时候，我买来人民文学出版社的《西厢记》，上面盖本教科书，堂而皇之的上课看。但是很快，除了王实甫那华丽的辞藻，整个大团圆的故事构架让我兴趣索然，而前言里现代人给它冠上的什么“礼教叛逆者反抗封建卫道士”的宏大内涵更让我倒尽胃口。</p><p>在书后还附着元稹的《莺莺传》。《莺莺传》所描写的其实只是两个人的故事，两个恋爱的人后来分开的故事，没有太宏大的叙事，没有那些官腔的说教和露骨的批判。这样的故事是我所喜的；这样的故事，也是中国文人所津津乐道的。关于类似内容的作品也就汗牛充栋，数不胜数。或许从《诗经》的“氓之蚩蚩，抱布贸丝”开始，就没有谁打算给自己的爱情故事赋予太宏大的命题，只是后来的人突然犯失心疯，发现了字里行间的微言大义。所以我很景仰孔夫子他老人家，他的《论语》里每一个字都可以养活一大批的圣贤大师。</p><p>元稹的这篇传奇被人考据出是以自己为原型的故事，是一篇忏悔录。忏悔的味道我闻不出来，但是众前辈大师言之凿凿说张生便是元大才子，那我也就相信了罢。</p><p>《莺莺传》的开头，交代道“在贞元年间，有位张生，他性格温和而富有感情，风度潇洒，容貌漂亮，意志坚强，脾气孤僻”。古人向来有画脸谱的习惯，只要不是丑的太离谱，一般的名士贤臣都被描写成“性温茂，美风容”之类。但是据说元稹的家族是著名的鲜卑拓跋，鲜卑人的美貌是相当出名的，就好象现在说日本人长的猥亵一样出名，所以我有理由相信，元稹在这点上也许没有吹牛。</p><p>文章写道“以是年二十三，未尝近女色”，后面他自己解释道“登徒子非好色者，是有凶行；余真好色者，而适不我值。何以言之？大凡物之尤者，未尝不留连于心，是知其非忘情者也”，就仿佛现在的大学男生在卧谈会上被迫承认自己二十三岁高龄还是个处男，被人取笑之下只好解释“其实我哪里是没能力啊，我只是没遇到真正让我心动的；一般的庸脂俗粉我看不上眼，要是真有出类拔萃的，我也会追的。我是谈感情的，和你们玩肉体的垃圾是不一样的”诸如此类。但是考察元稹的家庭情况，他八岁丧父，在家族里又被同父异母的兄弟欺凌，从小随着母亲投奔舅氏，生活贫困，母亲教她念书。我们可以想象，一个幼年便寄人篱下，遭受贫困欺凌的味道，他只比林黛玉多了一个母亲而已，但是林黛玉在物质生活上绝对比他适意。我们的脑海里可以浮现这样一个人物性格：幼年丧父的人，对于男人所称道的齐家治国平天下之类的宏伟功名有着不同于常人的热情和执著，范仲淹就是很好的例子，所以元稹在事业上一直很上进努力，为达目的不惜代价不择手段，由于尝尽人情冷暖世态炎凉，他很敏感，这样的人物让我想到了《红与黑》里的主人公于连；他自幼由一个母亲抚养成人，一般这样的人具有恋母情结，对于女性有异于常人的喜好，所以他的性格里又有滥情懦弱的一面。多情和薄幸，坚毅和懦弱，正义和无耻都矛盾地体现在他身上，这也就能让我们更好的理解他后来为了追求功名而抛弃莺莺的举动了。由于家境贫寒，极端律己，自卑和敏感的元微之“内秉坚孤，非礼不可入”，就算偶尔参加朋友一起的游宴——古人的游宴和现在去歌舞厅唱歌跳舞一样，一般都安排了色情服务——“扰杂其间，他人皆汹汹拳拳，若将不及”，而他“容顺而已，终不能乱”。我不清楚他是不是冬天还要帮别人洗衣服赚钱，但是可以肯定他不会参与打牌这样不合礼仪的活动，所以也就不会有谁去污蔑他打牌作弊，不会有“樗蒲不胜，槌杀四生”的惨剧了。</p><p>在这里他第一次提到“物之尤者”，后面他还有段很著名的话也提到“尤物”，为自己抛弃莺莺的行为做解释“大凡天之所命尤物也，不妖其身，必妖于人”。如此看来，仿佛我们的元大才子是个叶公好龙式的人物，这边在说假如能遇到尤物一定会动真情，那边厢却在说尤物不害她自身，必定祸害他人。没有得到的时候千方百计的追求，到手以后又不迭地甩掉去追求新的目标。人总是这样矛盾的动物，永远不明白自己所追求的到底是什么。我们知道最后元稹娶了豪门韦家的女儿为妻，使得他在仕途平步青云。于此，我们不妨看成是理智和情欲的对立，一边是代表事业投机的豪门韦家联姻的机会，而一边只是爱过的漂亮的女子，理智告诉他应该离开那个女子，但是情欲却欲罢不能，但是最后我们知道理智战胜了情欲，感情只好盘踞在文字里去凭吊，所以元微之为我们贡献了很多首脍炙人口的情诗。</p><p>后来，张生，也就是元稹路过蒲州，搭救了寄住在普救寺的崔家寡妇一家。“是岁，浑瑊薨于蒲，有中人丁文雅，不善于军，军人因丧而扰，大掠蒲人。……先是张与蒲将之党有善，请吏护之，遂不及于难。十余日，廉使杜确将天子命以总戎节，令于军，军由是戢。”据《旧唐书·德宗纪》，贞元十五年十二月，河中绛州节度使浑瑊卒，以同州刺史杜确为河中尹、河中绛州观察使。元稹在贞元九年举明经科，并于贞元十五年在河中府任卑职，所以他和蒲将之党有交情，打个招呼关照一下也在情理之中；但据唐代举士制度，士之及第者还需要经过吏部考试才能正式任命官职，所以我们可以推测出在贞元十五年年底的时候，元稹便上路去长安应考，于是在蒲州遇上了莺莺一家。</p><p>我们知道这篇传奇是有虚构的成分，就如元稹在里边成了张君瑞，但是有一点细节仍然需要注意的，就是莺莺家族的姓氏。在唐朝时候，年轻人普遍的梦想有两个，金榜题名，娶七姓女；就如同现在的大学生的梦想，考上公务员，讨个有钱人做老婆。娶个有钱人做老婆可以少奋斗十年，这是基于现实利益的考量，而娶七姓女等于瞬间提升了自身家族的社会层次，也是基于现实利益的考量。在中国人的现实生活里，找不到“爱情”这两个字–有时候看历史真的会看到掩卷叹息，中国人过了几千年，还是一点长进都没有啊。唐代的士族世家已经逐渐没落，但是依然地位显赫，其中以陇西李氏、太原王氏、荥阳郑氏、范阳卢氏、清河崔氏、博陵崔氏、赵郡李氏等七姓十族最为著名，一般这些世家大族互为婚姻，自惜羽毛。唐高宗时宰相李义府为子向山东士族求婚不遂，而向朝廷建议禁止七姓十族自为婚姻。可见娶个望族女子为妻，是多么的艰难啊。莺莺是姓崔的，而且“财产甚厚，多奴仆”，很自然的就联想到了清河崔氏、博陵崔氏这些世家大族；但是很奇怪的是元稹描写的张生居然抛弃了莺莺，一个出身寒族的士子抛弃了一个那么美貌温柔的世家女子，仅仅只为了他自己所谓的“予之德不足以胜妖孽，是用忍情”么？考察元某人在政治上趋炎附势的态度，我是不相信他冠冕堂皇的话的。姑且让我用自己邪恶的想法去揣测他：那个被唤作莺莺的女子必定不是什么世家望族，所以元稹为了前途而抛弃了她，之所以故意写成崔氏，只是制造了一种假象，让读者有个印象那个莺莺是世家女子，我元微之离开她只是因为好男儿不该沉溺于爱情，你看为了理想我连世家女都放弃了啊。这便是文人的下作！</p><p>为了答谢这位刚认的远亲的救命之恩，于是请吃饭，贞元十五年十二月很快就在危机中渡过，这顿饭的时间也应该在贞元十六年的春天。当贞元十五年的大门“咣当”一声关掉，命运就载着我们的主人公来到了贞元十六年。饭局中张生曾问莺莺的年纪，“郑曰：‘今天子甲子岁之七月，终今贞元庚辰，生年十七矣。’”贞元庚辰，正是贞元十六年，那年元稹二十二岁，莺莺十七岁。</p><p>拿破仑指示说“请客的菜一定要好”，这个世间有好多的阴谋和决策在餐桌上议定，有好多缠绵或者惨烈的故事由餐桌上发端。郑国的子宋因为吃饭的时候分不到王八汤，结果一怒就干掉了郑灵公；而我们的张生，也就是元微之同学因为吃饭认识了莺莺姑娘。这表明吃饭是一次冒险，运气好的可以吃出一段情缘，运气不好的就要丢了性命，所以列位正要去吃饭相亲的同学们，你们要小心啊。</p><p>吃饭的时候，郑氏让儿子、女儿出来拜会救命恩人。那时侯未出阁的女子特别是大户人家的女子仿佛家之重宝，秘不见人；而郑氏却突然在一个年轻的刚认识不久的远房亲戚面前把女儿拉出来亮相，还要陪吃饭，哪怕这个年轻是救命恩人，这样的行为也是很突兀的，所以莺莺才会推三阻四的不想出来见面。郑氏这般的举动连一千多年后的我也想入非非，无疑也给了元稹兄弟很多假设的可能。不论当初的郑氏出于什么样的考虑做了这个决定，反正莺莺姑娘就此登场了。第一次召唤推说有疾，郑氏看起来很生气的说“张兄保尔之命，不然，尔且掳矣，能复远嫌乎”，这其中的话外之音，只能读者自己体会了。又过了很久，莺莺终于出场了。</p><p>“常服睟容，不加新饰，垂鬟接黛，双脸销红而已。颜色艳异，光辉动人”，简直惊为天人啊。我们很可以理解元稹的心情，在记忆里，那个已经离开的初恋情人总是最美丽的，而那第一次的见面总是浪漫得无法言说，第一眼里情人的样貌也是美艳不可方物。但是假如当时有照相的话，看到莺莺的照片也许你会失望，那个时代普遍流行的美女的体态是肥胖丰满的，那个时代美女的画像普遍有双下巴（有些是三下巴或者更多），面颊鼓鼓外凸，因为胖所以嘴巴也被挤的小小的嘟起来，实乃人间惨剧，竟无语凝噎！幸好莺莺不加新饰，保持了一点自然状态，否则那个惨白的面容、用红颜料描出的樱桃小嘴、脸上贴的花状的金钿和浓晕蛾翅眉足足可以把你吓死。</p><p>后面一句话很有意思：“张惊，为之礼。”张生看到莺莺那么漂亮，忙起来对她行礼。这个描写很传神，一般男子看到普通的女子，都保持一点点的风度，淡淡的仿佛视若不见；惟独见到美女，眼睛一亮，慌忙起身行礼，态度谦恭。足见莺莺之美。后来她坐到郑氏旁边，因为是郑氏强迫她出见的，所以她“凝睇怨绝，若不胜其体者”，那个样子就是《喜剧之王》里张柏芝所谓的“鹌鹑状”。如此楚楚动人的姿势，叫张生魂不守舍。问了年纪，只有十七岁，正是花季过后，果季之前，鲜脆欲滴，天真纯情的年纪啊！张生想和她找话题说话，但是莺莺就是不理睬他，一直到吃完饭也没有什么好说的。记得以前去参加一个朋友生日活动，饭桌遇上了朋友的表妹，也是一样的年轻明艳，也是一样的不理睬人，和她搭讪也装做没听见，搞得我们很没有面子，所以说，古往今来的好女孩一般都是很矜持的。由于没有机会接触，张生的思念就象潮水一样把他包围，所以他捉摸着要找个机会表白一下。</p><p>于是他从莺莺的小伙伴，侍女红娘那边入手。这个策略在以后的无数次实践当中被证明是极端正确的。大学里你要追求某个女生，先要从她寝室的室友下手，打通所有关节，请他们吃喝玩乐，最后那个女孩子身边所有的朋友都在说你好话，那你就成功一大半了。红娘被张生吓了一跳，问了个问题：“你既然那么喜欢，何不凭借你对我们家的恩情向夫人正式提亲呢（何不因其德而求娶焉）？”张生回答的话简直有点无耻了：“我从孩童时候起，性情就不随便附合。有时和妇女们在一起，也不曾看过谁。当年不肯做的事，如今到底还是在习惯上做不来。昨天在宴会上，我几乎不能控制自己。这几天来，走路忘了到什么地方去，吃饭也感觉不出饱还是没饱。恐怕过不了早晚，我就会因相思而死了。如果通过媒人去娶亲，又要‘纳采’，又要‘问名’，手续多得很，少说也得三四个月，那时恐我也就不会在人世了。你说我该怎么办呢？（余始自孩提，性不苟合。或时纨绮闲居，曾莫流盼。不为当年，终有所蔽。昨日一席间，几不自持。数日来，行忘止，食忘饱，恐不能逾旦暮。若因媒氏而娶，纳采问名，则三数月间，索我于枯鱼之肆矣。尔其谓我何？）”先吹捧自己性格不随便，然后表明见到莺莺姑娘连这样的性情也抛掉了，再不快点接近自己，就挂掉了，哪有时间挺到纳采问名啊。我从来不知道爱一个人，居然连三四个月都无法等待，这是赤裸裸的情欲，而非爱情；张生的第一目标是得到莺莺，而非和她相爱。情欲是正常的，但是不正常的是张生光明正大的以自己的情欲作为接近的借口，在一套绚丽机巧的辞藻下，其实裹挟着的不过是阿Q对吴妈的那句“我要跟你困觉”！</p><p>但是也许张生妇女工作做的好，红娘还真的帮他出主意，让他摇动笔杆。想来那时躲在深闺的大家闺秀并不知道外边文青的名声有多臭，结果一场悲剧上演了。</p><p>亚里士多德《诗学》言道：“性格为悲剧六大要素之一。”毫无疑问，莺莺的性格决定了她的悲剧结局。在她的身上我们看到矜持和热情，顺从和叛逆，坚定和认命矛盾的结合在了一起。前面我们已经注意到莺莺出场时的矜持，和在她母亲召唤下不肯出来见面的叛逆，但是当她看了张生的情诗之后却用那首暧昧的《明月三五夜》作为回应，把张生招来相见。“待月西厢下，迎风户半开。拂墙花影动，疑是玉人来。”这诗不论莺莺怎么强调“犹惧兄之见难,是用鄙靡之词，以求其必至”,都无法掩盖字里行间的情意和期盼。</p><p>二月十五的晚上，月亮大的吓人,文学青年元稹踏着美丽的月色，攀着墙边的杏花树翻过墙头投奔他的初恋去了。他来到西厢房,却只看到红娘躺在床上，双方都很奇怪。在红娘通报后，莺莺姑娘这才出现了。可能原本元大才子准备着类似“长夜漫漫，无心睡眠，没想到莺莺姑娘你也睡不着”之类的桥段，可是如此以来完全用不上了，而且莺莺姑娘一身包裹严实，表情严肃，狠狠地训斥了他一顿，然后扬长而去。元大才子只好承认都是月亮惹的祸，那样的月色太美太温柔，于是绝望了。元稹没有写他失恋后寻死觅活，更不像他自己说的“索之于枯鱼之肆”。但是很吊诡的是三天后莺莺就自荐枕席了。鉴于这段情节的突兀，《董解元西厢记诸宫调》里就设计了张生患相思病，莺莺探病的情节，王实甫也继承发扬了这段情节。这段情节看似让整个的故事情节更加合理，也让人物性格和心理有一定的起承转合，但其实是画蛇添足的一笔。</p><p>莺莺是一个性格矛盾的人，她对待未知的将来既期待又恐惧，她知道自己所做的是不容于世的，但是她对于爱情满怀憧憬而渴望冒险。在爱情的冲动下，她一步步滑向张生的怀抱。也许从第一次出来见这个救命恩人的时候，她便已经心存好感，起码我们知道张生的相貌世让人赏心悦目，这是爱情的基础；当看到张生的两首诗，更加倾慕于他。唐代的女孩子也和现在的女孩子一样，有自己心目中的白马王子。也许那个时代比较流行的梦中情人形象，就是元稹这样的才子。于是她情不自禁回了一首诗，也许只是想见他一面，但是理智告诉她这样做法的危险性。也许在红娘去通报的时候，她还在那里犹豫到底要不要去见。最后她决定去看一眼那个自己衷情的男子，她穿戴齐整。当爱上一个男人的女子，在那个男人面前总是很低很低,低到尘埃里,尘埃里便开出花来，于是她潜意识的想保持自己的尊严，她不想被他看成是轻薄的女子。她终于见到了他，在月色下，俊朗的男子期盼地看着自己，眼神顾盼之间，让人心旌摇荡；那淡淡的笑容，刚毅的嘴角，也许随着那夜的月色一起留在莺莺地记忆深处。她发觉自己陷入一种前所未有的危机，一种爱上别人为了那男子可以不顾一切的冲动，于是她板下脸来，义正词严地拒绝了那个男子。“非礼之动，能不愧心？特愿以礼自持，毋及于乱！”这些话在我看来倒有一大半是在对自己萌动的心说的，莺莺在警告自己不要逾越了礼，否则将万劫不复。男子一脸地失望，仿佛满地月光都成了严霜。她还是转身离去。但是正如元稹在《会真诗》里所写的“戏调初微拒，柔情已暗通”。我不知道莺莺在这三天里是如何地心情，我也不知道其中红娘起了多大地作用，但是我知道到了十八日的晚上，莺莺终于做了自己一生中最重要的决定。</p><p>“数夕，张生临轩独寝，忽有人觉之。惊骇而起，则红娘敛衾携枕而至，抚张曰：‘至矣！至矣！睡何为哉！’并枕重衾而去。张生拭目危坐久之，犹疑梦寐；然而修谨以俟。俄而红娘捧崔氏而至。至，则娇羞融冶，力不能运支体，曩时端庄，不复同矣。是夕，旬有八日也。斜月晶莹，幽辉半床。”唐贞元十六年二月十八日的夜晚，那一夜的经历对于元稹来说是如此的深刻，以至于很久以后依然清楚的记得那天的日期，那夜的月色。元稹在《会真诗》里清楚地描写了缠绵的经过，在千年之后的人们看来，那诗依然写得香艳露骨，荡人心旌：“微月透帘栊，萤光度碧空；遥天初缥缈，低树渐葱茏……低鬟蝉影动，回步玉尘蒙；转面流花雪，登床抱绮丛；鸳鸯交颈舞，翡翠合欢笼；眉黛羞频聚，朱唇暖更融；气清兰蕊馥，肤润玉肌丰；无力慵移腕，多娇爱敛躬；汗光珠点点，发乱绿松松……”。在晶莹的斜月下，天真善良的莺莺投奔了爱情，为了自己心爱的男子，为了梦想中的爱情，抛弃了一切，奉献了一切。也许古往今来有很多的人有这般的经历，曾经真心单纯地去爱一个人，为他（她）付出了一切。不管结果如何，起码在那一刻，付出的人是幸福的，虽然这样的幸福可能是要遭到报应的。</p><p>在现代人的眼光来看，莺莺这床也上的太快了些。其实这还不算彻底的，汉代的司马相如不过弹了次琴，卓文君便跟着他私奔了，连富翁老爹也不认了。那个时代，女子应允了一份爱情就等于一生一世，不会再有给你重来改过的机会。那是个严肃的时代，女子地位低下，虽然相对于其他朝代，唐朝的风气算是比较开明宽松，但是逾越礼制的爱情依然不容于世，和一个男子相恋，要么嫁给他，要么就是再也得不到幸福和爱情。如那位被元稹好友白居易赞为“醉娇胜不得，风嫋牡丹花”的徐州名妓关盼盼，在其丈夫徐州守帅张愔死后却被白居易讽刺她不肯殉情，逼得她不得不绝食自尽；又如步非烟，因为父母之命而嫁于功曹参军武公业，毫无爱情可言，于是她红杏出墙，爱上了攻读课业的书生赵象，被丈夫发现后，只是淡淡说了句“生既相爱，死亦何恨”，于是从容淡定，任凭丈夫拷打，不肯开口求饶一句，最后终于被活活打死，以暴疾而亡的名义埋了。那个时代的女子，很少可以拥有幸福的爱情，所以这充分体现了新社会的优越性，起码你谈几场恋爱没有关系，女孩子只要不失身还是会有幸福的。</p><p>红娘把枕头也带来了,在古时候,共同倚靠的枕头是充满暗示意味的情物，是在一起温柔缠绵的明证。本朝初年高阳公主嫁于房玄龄之子房遗爱为妻，却不爱房遗爱，在新婚之夜就把新郎拒于洞房之外。高贵的公主爱上了玄奘的高徒、最年轻却最聪慧的高僧辩机和尚，那时高阳公主十六岁，辩机和尚二十一岁。高阳公主送给辩机一个“金玉宝枕”，却被小偷偷出。结果事情因此泄露，高贵的辩机被腰斩于市，而高阳公主也一辈子恨上了自己的家族，“帝崩无哀容”。或许唐代的女子血液里奔流着冒险的因子，所以为了爱情不顾一切，哪怕被抛弃被鄙夷被万夫所指天地不容也再所不惜。于是整个唐朝给我们后人留下了一大堆让人向往的爱情故事。莺莺对待爱情的勇气，无疑是秉承了大唐女子一贯的风气，虽然她的命运因此让人心痛，但是她的形象也因此让人爱怜，在千百年后的今天依然让我爱慕钦佩。</p><p>“有顷，寺钟鸣，天将晓。红娘促去。崔氏娇啼宛转，红娘又捧之而去，终夕无一言。”如此“金风玉露一相逢”的时光过的总是很快，古寺的朝钟响起，天快亮了，莺莺也要离去了。对于类似的幽会后的早晨，《诗经》里便有很细致的描述：《郑风·女曰鸡鸣》里写道“女曰鸡鸣，士曰昧旦；子兴视夜，明星有烂”，女子在催促说“鸡已经在打啼了”，男子眷恋枕衾，“天还没全亮；你起身看夜空，启明星还闪闪发光”，然后慢慢谈到工作，谈到两个人的未来，谈到恩爱到白头，“宜言饮酒，与子偕老。琴瑟在御，莫不静好”；《齐风．鸡鸣》里写道“鸡既鸣矣，朝既盈矣。匪鸡则鸣，苍蝇之声。东方明矣，朝既昌矣。匪东方则明，月出之光”，女子催促男子快起身，男子淹留不肯，“那不是鸡叫，是苍蝇嗡嗡声，东边也没亮，那是月亮光而已”，回答言语可爱缠绵。钱钟书说：“莎士比亚剧中写情人欢会，女曰：‘天尚未明，此夜莺啼，非云雀鸣也。’男曰：‘云雀报曙，东方云开透日矣。’女曰：‘此非晨光，乃流星耳。’用以比勘。”但是我们注意到，莺莺和张生一夜缠绵，居然不交一词，只是在天明将别的时候，呜咽哭泣。这个写法相当传神，我们可以从那“山盟海誓”的缺失和离别时的哭泣，感受到莺莺内心的矛盾：她明知道她正在做一件可能万劫不复的错事，但是却无法控制内心对于张生的情意，爱情的那种使双方合二为一的强烈愿望战胜了对命运的恐惧，她不敢说话，因为说话就代表了清醒，她宁愿在一种迷醉的状态下委身于自己的爱人，抛却一切利益的得失、道德的禁梏；当天明将别，她仿佛恍然从梦中惊醒，好象做错了事的孩子一样，为自己的选择和命运哭泣，为自己所失去的哭泣。当然在这眼泪之中，对于离别的伤感，也占了一定的比重，所以在未来的十多天里，她再也没有和张生联系。</p><p>直到张生“赋《会真诗》三十韵，未毕，而红娘适至，因授之，以贻崔氏”，才又来与张生相会。想来未完的《会真诗》是个很好的说服自己的借口，只是来探讨文学罢了，但是总免不了“向谁行宿,不如休去”的挽留。于是这样相处了将近一个月。</p><p>“张生常诘郑氏之情，则曰：‘我不可奈何矣。’因欲就成之。”这是最常见的断句，莺莺说：“我没有办法告诉她。”于是张生便想亲自和郑氏谈谈，促成这件事。但是见家长的事突然没有下文，很快张生也去了长安，这样的情节安排无论如何都是不通的。幸好还有另外一个版本：“张生常诘郑氏之情，则曰：‘知不可奈何矣，因欲就成之。’”莺莺说她妈知道也没其他办法了，所以想促成我们的婚事。他们相处同居了一个月，而寺院内有崔家那么多的仆役，就算郑氏再昏懵，也应该了解到女儿的事情了。事已既此，无可奈何，女儿大了，心向外人，现在也只能期盼那男人能负责任把她娶去了。这样的心情很可以理解，我的一个朋友，和她女朋友两地分居，而且女孩子在当地做了教师，不错的职业，眼看因为家里反对要分手了，但是有天女孩子的父母偷听他们的电话，知道了女儿已经失身于我的朋友，于是第二天就让女儿把我的朋友叫去见面，很快便结了婚。所以很多时候，我都分不清自己到底是生活在古代还是生活在现代，一千多年下来，对待某些问题的做法还是一点都没变化。</p><p>但是张生可能很害怕被一桩寒门的婚姻套牢，一听这话赶快跑路；于是借口“为了梦想中金碧辉煌的长安,都市里充满了神奇的历险,满足一个男儿宏伟的心愿”，西下长安去了。去之前还先告诉了莺莺，“崔氏宛无难词，然而愁怨之容动人矣”。有一种哀伤，是哭不出来的，它会慢慢渗透进你的骨子，日日夜夜一点一滴地侵蚀你的情绪。或许她害怕自己会控制不住自己面对离别的悲伤，所以在张生将要走的第二天晚上，莺莺没有来。我总是不能理解女子的心思，明明想念你的，却不肯见面；明明想把你留下的，却早早地说出一路顺风的祝福；明明在说没有留下更多的甜蜜回忆，却连分手了也不肯来见最后一面，谁都无法想见女子的心里到底在想些什么，或许正是这样的复杂，才成就了莺莺形象的丰满。</p><p>但是很快，张生又回到了蒲州，又与莺莺相处了好几个月，也许是他无法放下这段感情，也许是长安尚未有“实现一个男儿宏伟志向”的机会，更可能是长安还没那么早开考，想最后的缠绵一下。莺莺的字和文章写的都很好，却从不给张生看；她写文章的水平很好，但是却好象什么都不懂的样子；她言辞敏捷，但是在外人面前却很少说话。或许这样的女孩子最是让人怜爱。“待张之意甚厚，然未尝以词继之。时愁艳幽邃，恒若不识，喜愠之容，亦罕形见”，莺莺是个内向的女孩子，有了情绪却不轻易流露，她不会口口声声地和你说“我爱你”，但是连她注视你的目光都能让你感到无限柔情，你无法知晓她的想法，但是却沉溺于她时时流露的情意。她喜欢弹琴来抒发情感，可能是心情忧郁，所以弹奏的曲子异常伤感。</p><p>不久张生便要去长安应试了，或许是下了决心终要割断前缘，一心功名，所以这个男人连说分手的勇气都没有，只能对着莺莺忧愁哀叹，自然他也是不肯去承诺些什么的。莺莺自然明白他的心思，面对爱人的负心薄情，做为一个弱女子又能说什么呢。莺莺是个坚强而又自尊的女子，她不会低声哀求张生留下，她态度恭敬，声音柔和，慢慢地对张生说：“始乱之，终弃之，固其宜矣，愚不敢恨。必也君乱之，君终之，君之惠也。则没身之誓，其有终矣，又何必深感于此行？然而君既不怿，无以奉宁。君常谓我善鼓琴，向时羞颜，所不能及。今且往矣，既君此诚。” 莺莺平静的面容下说出“始乱之，终弃之，固其宜矣，愚不敢恨”那是怎样的一种心痛呢，假如仅仅是个人爱情的失败也就罢了，但是其中还昭显出整个家族的衰败和老母最后一丝期望的落空。人很多时候并非为自己而活，所以人最不能承受的并非自身的失败，而是自身的失败给自己亲爱之人所带来的伤害。张生挥一挥衣袖，固然不带走一片云彩，还可以得到时人“善补过者”的赞誉，但是对于莺莺来说，不但她这一生的命运已经凄惨无疑，而且也给了她衰颓式微的家族一次重重的羞辱和打击。</p><p>她终于明白了“则没身之誓，其有终矣”，古往今来男女说着“山无陵，江水为竭，冬雷阵阵，夏雨雪，天地合，乃敢与君绝”的誓言，可大多数的人言语远比自身华丽，现实远没有恶化到世界末日，便已经支持不住，爱情一如华美的琉璃，碰触现实难免粉碎。</p><p>于是她为自己心爱的男子弹了最后一首曲子《霓裳羽衣曲序》，琴声因为心情悲伤而纷乱错杂，旁边的人都听着流泪，她终于弹不下去，扔下琴哭着跑到母亲的房里，再也没出来。在这部作品里，郑氏出场只有一次，侧面描写也并不多，但是我们却依然能想象一千多年前那位母亲的悲痛，为自己的命运，为家族的命运，更为自己女儿的命运感到悲伤。</p><p>第二天我们的元大才子便神清气爽地踏上西去长安的路途，但是那年他没有考中。于是他留在了长安，从莺莺的信中我们了解到，这个鄙薄的文青曾托人给莺莺寄去一封信，让她看开些，“以广其意”，顺便送去“花胜一合、口脂五寸”做为分手礼物。唐代女子喜欢用绢纸、金银等材料做出一朵朵花形的小物件，贴在脸上，唐代就称之为“花胜”或者“花钿”。元稹很潇洒地给分手后的情人送去长安最时尚的化妆品和首饰，想以此来弥补内心的愧疚。但凡女子都爱最新潮时尚的化妆品，犹以情人所赠为甚；但是我不知道淹留蒲州普救寺的母女，在这个穷乡僻壤突然看到负心的男人送来长安的时尚货色，会是怎样的心情，或许如后世李清照所言“泪融残粉花钿重”。</p><p>孤独无望地留在普救寺的莺莺回了一封信，那信却被张生炫耀于长安的朋友之间。就好象胡兰成把曾与他恩爱缠绵的女子都写进《今生今世》，古今文人下作起来都是一样。</p><p>对于自己的负心，元稹还借用了《左传》那句“夫有尤物,足以移人,苟非道德,则必有祸”，义正词严地发表了一通高论：“大凡天之所命尤物也，不妖其身，必妖于人。使崔氏子遇合富贵，乘宠娇，不为云为雨，则为蛟为螭，吾不知其变化矣。昔殷之辛，周之幽，据百万之国，其势甚厚。然而一女子败之，溃其众，屠其身，至今为天下戮笑。予之德不足以胜妖孽，是用忍情。”最可怕的是听众的反应，“于时坐者皆为深叹”，大家叹口气，居然没人指责张生的负心薄幸，或者有一点小小的同情给予莺莺。</p><p>对于美貌女子的恐惧，其实不过只是自身懦弱的借口罢了，男子严于律女子，宽于律己，实在是很无耻。《世说新语》里记载着石崇宴客让美人劝酒，如客人不饮，便杀掉劝酒的美人。有一次丞相王导和大将军王敦去赴宴，王导不善饮酒，也只好勉强自己喝，以至于喝醉了；而王敦死活不肯给面子，就是不喝，“已斩三人，颜色如故，尚不肯饮”。而此事，却被刘义庆归为“汰侈”，意思是奢侈浪费。在这里我们看到的是人正常情感的缺位，对于爱情和女性的残忍，却成了男子气度的象征。记得唐代曾有一个很出名的事件：军官冯燕，和同事张婴的漂亮老婆私通，张婴酗酒而归，冯燕逃避不及，只好藏到床底，却发觉自己的头巾还留在枕边，幸好张婴喝醉了并没发觉。于是冯燕指指头巾示意张妻把头巾取来免得事情败露，可是张妻会错了意，竟把枕边张婴的佩刀递给了他。冯燕看了张妻几眼，觉得这个女人太狠毒，就一刀砍下了张妻的头，然后戴上头巾走了。张婴于是就被认为杀害自己的妻子，被判死刑；结果在刑场上，冯燕出现了，他宣称张婴是无辜的，张妻是自己杀的。军政长官贾耽将此案据实上奏，并表示，宁愿免去自己的官职，也要为冯燕赎罪。最后皇帝的敕令是，将滑地的全部死刑犯同时赦免。这件案子影响很大，以至于那个时代的流行小说家沈下贤专门为之创作了传奇《冯燕传》；著名诗人司空图则写了长篇叙事诗《冯燕歌》，其中有一句诗写道“已为不平能割爱”，也就是说为了所谓的道德规范，能割舍爱情的才是大英雄。于是世情普遍鄙薄男欢女爱，积极培养冷血寡情的人，于是婚姻便成利益的交换，所谓的爱情只能沦落到勾栏瓦舍里去了。对比西方，希罗多德《历史》曾讲过吕底亚王坎道列斯的故事。坎道列斯认为自己的妻子是世上最美丽的女子，于是他想拿来炫耀了，他强迫他的亲信巨吉斯看王后的身体，以便确认这一点；不得已，巨吉斯只好藏在卧室，看了王后的身体。王后知道此事后，认为是奇耻大辱，就将巨吉斯召来，给他两个选择：要么他杀掉国王，“变成我的丈夫并取得吕底亚的王位”；要么被处死。结果巨吉斯选择了前者，他杀死了国王，并娶了王后，登上了吕底亚的王位。我们从中可以看到东西方文明对待情欲的差别。遗风留至如今，家里关心你的结婚对象，不是双方有多么相爱，感情有多深厚，而是这个人家里怎样，是不是老实，有没有本事赚钱升官；假如你斗胆和他们说起你们的爱情，于是大家都开始哄堂大笑或者不屑一顾，仿佛看你就是一个不成熟的孩子、精神错乱的病人。对于爱情的信仰，或许只存在于看戏的那段辰光。</p><p>有了这样一种社会心理氛围，再加上有太子少保韦夏卿的赏识，那么元稹抛弃寒门女子莺莺而迎娶豪门韦家的千金韦丛，也就顺理成章了。但吊诡的是在蒋防写的《霍小玉传》里，元稹的老丈人韦夏卿却对负心薄行的朋友李益这般说：“风光甚丽，草木荣华。伤哉郑卿，衔冤空室！足下终能弃置，实是忍人。丈夫之心，不宜如此。足下宜为思之！”蒋防此人在仕途上得到过元稹的推荐，所以他写及元稹的岳父时总要润色拔高一下，只是他的恩公看到这番话时是否会心头一颤？</p><p>或许是虬髯客已没，不会再有人“衔之十年”也要去取“天下负心者”的头颅心肝下酒，所以男人也就越发理直气壮地负心薄幸。负心人元稹没有得到什么报应，又过了一年多后，也就是贞元十九年他登拔萃科，署秘书省校书郎，娶了韦夏卿之女韦丛为妻，并在那一年与同中书判拔萃科的白居易相识订交，从此元白之名满天下。元稹在《梦游春七十韵》中写道：“当年二纪初，嘉节三星度……韦门正全盛，出入多欢裕。”在元稹志得意满，欢娱畅快之时，莺莺也匆匆嫁于他人了。后来元稹偶然路过莺莺居住的地方，以莺莺表兄的身份求见，终不得一见。莺莺的不复相见，是对情人的深深失望，或许她会深深的认同鱼玄机说的“易求无价宝，难得有情郎”；她没有霍小玉那般刚烈，她也许也会哀怜自己“我为女子，薄命如斯，是丈夫负心若此”，但她却说不出“我死之後，必为厉鬼，使君妻妾，终日不安”的话。莺莺只写了首诗给元稹，硬着骨头咬着牙说“弃置今何道，当时且自亲”，既然都已经分开了不爱我了又有什么好说的呢，当时恩爱缠绵也就足够了，让他“还将旧时意，怜取眼前人”，因为懂得，所以慈悲。当爱情归于寂寥，繁华消于落寞，一切都只存在与记忆里，曾经的美好，只能活在心底。“惆怅旧欢如梦，觉来无处追寻”。或许她也明白，往事只能追忆，不可重温。曾经年少单纯的莺莺已经死了，只留下一具逐渐衰老的躯壳和悲伤的灵魂继续苟活。现实那样丑恶，我们却不得不活下去。</p><p>我真的怀疑元稹所谓的“曾经沧海难为水，除却巫山不是云”到底指哪一位，是莺莺，还是韦丛，抑或是薛涛？元和四年，韦丛去世，元稹写了三十三篇诗来悼念她，其中最有名的一句：“惟将终夜长开眼，报答平生未展眉。”根据陈寅恪先生的考证，这个“长开眼”不仅仅是睡不着的意思，“所谓‘常开眼’者，自比鳏鱼（有“鳏鱼眼长开”这一说法），即自誓终鳏之义”（陈寅恪《元白诗笺证稿》），元稹信誓旦旦的要为韦丛终生不娶，鳏孤到死了。但事实证明，元稹是个文过饰非的人，在韦丛凑趣去世的那年，他邂逅薛涛，两人相恋了一年后将之抛弃，可怜薛涛为之终身不嫁，“只欲栏边安枕席，夜深闲共说相思”；两年后纳妾安氏，又过数年续弦裴淑。简直是“取次花丛频回顾”啊！所以观陈寅恪先生对其评价“自私自利。综其一生行迹，巧宦固不待言，而巧婚尤为可恶也。岂其多情哉？实多诈而已矣”并不为过。</p><p>读《元长庆集》，常免不了痛恨为什么如此深情优美的诗句却出自一个那么薄情负心的伧夫之手。雪莱在《致云雀》中说：“我们最甜美的歌，就是那些倾吐最哀伤的思想的。”不知道元稹所哀伤的到底是什么。贝克尔在《抗拒死亡》中说的：“所有动人心弦的事中，对死的恐惧是首当其冲的。”他的悼亡诗写的那么情深意切，大概是出于对死亡本身的恐惧和悲哀吧。</p><p>或许不该过分指责元稹，他也不过是为了功名奔波的庸人，这个世界原本就是为庸人所设的。太过恩爱的情侣总是不容于世：苏东坡与王弗已是“十年生死两茫茫”了；陆游和唐婉儿只能“一怀愁绪，几年离索”；刘克庄在哀叹“旧日风烟草树，而今总断人肠”；冒辟疆和董小宛“一生清福,九年占尽,九年折尽矣”；还有纳兰性德，感慨着“被酒莫惊春睡重，睹书消得泼茶香，当时只道是寻常”。但是起码他们是能真心相爱的，就算不能“执子之手，与子偕老”，起码也是“骨化形销而丹诚不泯”，却可怜了单纯的莺莺，一个人用余生去背负全部的思念、悔恨和指摘。</p><p>史籍上再没有关于莺莺以后生活的记载，或许她一生坎坷，慢慢地消磨了纯真善良，成了世间常见的庸俗势利的妇人。但哪怕是这样，我依然相信在她心底的最幽深隐蔽的角落、最柔嫩脆弱的地方，记忆会像一把锯齿慢慢地来回剧着那根最纤细的神经，午夜梦回的时候，依然会为贞元十六年的那个男子泪流满面。</p><p>我怕我鄙薄的文字无法完美地译出那女子悲伤的文字，且让我们再细细读一读那信的原文,体会一下她的心情吧：</p><p>捧览来问，抚爱过深。儿女之情，悲喜交集。兼惠花胜一合、口脂五寸，致耀首膏唇之饰。虽荷殊恩，谁复为容？睹物增怀，但积悲叹耳。伏承使于京中就业，进修之道，固在便安。但恨僻陋之人，永以遐弃。命也如此，知复何言！自去秋已来，常忽忽如有所失。于喧哗之下，或勉为语笑，闲宵自处，无不泪零。乃至梦寐之间，亦多感咽离忧之思。绸缪缱绻，暂若寻常，幽会未终，惊魂已断。虽半衾如暖，而思之甚遥。一昨拜辞，倏逾旧岁。长安行乐之地，触绪牵情。何幸不忘幽微，眷念无斁，鄙薄之志，无以奉酬。至于终始之盟，则固不忒。鄙昔中表相因，或同宴处。婢仆见诱，遂致私诚。儿女之心，不能自固。君子有援琴之挑，鄙人无投梭之拒。及荐寝席，义盛意深。愚陋之情，永谓终托。岂期既见君子，而不能定情，致有自献之羞，不复明侍巾帻。没身永恨，含叹何言！倘仁人用心，俯遂幽眇，虽死之日，犹生之年。如或达士略情，舍小从大，以先配为丑行，以要盟为可欺，则当骨化形销，丹诚不泯，因风委露，犹托清尘。存没之诚，言尽于此。临纸呜咽，情不能申。千万珍重，珍重千万！玉环一枚，是儿婴年所弄，寄充君子下体所佩。玉取其坚润不渝，环取其终始不绝。兼乱丝一绚、文竹茶碾子一枚。此数物不足见珍，意者欲君子如玉之真，弊志如环不解。泪痕在竹，愁绪萦丝，因物达情，永以为好耳。心迩身遐，拜会无期。幽愤所钟，千里神合。千万珍重！春风多厉，强饭为嘉。慎言自保，无以鄙为深念。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;《西厢记》的书评:【琉璃易碎，人言易坠——关于《莺莺传》的叙事】转载&lt;br&gt;…全文:&lt;a href=&quot;https://www.douban.com/doubanapp/dispatch?uri=/review/1200691/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;(豆瓣link)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“半欲天明半未明，醉闻花气睡闻莺。 狌儿撼起钟声动，二十年来晓寺情。 ”男人四十的元微之写着酸酸的诗，回忆年少风流。假如我是元微之，我一定会这般写道：天空尚未亮透，微微透着点光，远处传来钟声，让我的思绪一下子回忆到二十年前，也是这样的一个早晨，在那所古寺的西厢，那个散发着鲜花一样香气的女子，用鸟儿般宛转的声音在我耳边低语：“钟声响了，想来我也该回去了。”那声音一直萦绕在耳边，十年、二十年、也许一辈子在我在记忆深处响起……。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://talengu.github.io/public/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="故事" scheme="https://talengu.github.io/public/tags/%E6%95%85%E4%BA%8B/"/>
    
      <category term="《莺莺传》" scheme="https://talengu.github.io/public/tags/%E3%80%8A%E8%8E%BA%E8%8E%BA%E4%BC%A0%E3%80%8B/"/>
    
  </entry>
  
  <entry>
    <title>个人主页搭建</title>
    <link href="https://talengu.github.io/public/2016/12/22/build_blog/"/>
    <id>https://talengu.github.io/public/2016/12/22/build_blog/</id>
    <published>2016-12-22T04:39:04.000Z</published>
    <updated>2016-12-22T04:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>本文主要内容为博客搭建的记录与分享，我采用了Hexo博客框架，NexT主题和Gitment评论系统。本文中记录了我博客的安装流程和使用过程中的改进细节。</p><p>对Next主题版本的一些说明：我使用的是<code>version: 5.1.0</code>。而使用新版本的NexT v6 主题的同学，有些功能如gitment已经实现，可以直接使用V6。此V6版本对于图片的使用可能会出现问题。仅需看看我下面的2.2小节。</p><p>有时间我会将我修改后的hexo Next theme 基于<code>version: 5.1.0</code>主题，给个独立的git仓，放到github 上。</p><blockquote><p>小技巧：在文章中可以使用<code>&lt;!-- more --&gt;</code>手动进行截断，more上面部分将被放到主页上显示。此为Hexo 提供的方式。  </p></blockquote><p>下面就是用<code>&lt;!-- more --&gt;</code>截断的～～<br><a id="more"></a></p><p>在看安装教程的时候，发现怎么要涉及这么多东西，请大家不要担心，一步步来。同时也不用在意会不会nodejs，框架这些东西，人家已经帮我们把东西都写好了，我们做的就是改改配置文件，最多改改里面swig的模版的一些代码。最后，望大家见谅的是，我对js不太熟，有些地方不是很清楚。欢迎大家在下面评论，或者在github上开issue，共同讨论。</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-简易安装使用"><a href="#1-1-简易安装使用" class="headerlink" title="1.1 简易安装使用"></a>1.1 简易安装使用</h3><p>使用新版本的NexT v6 主题即可，有些功能如gitment已经实现。对于图片的使用可能会出现问题。仅需看看我下面的2.2小节。我使用的是<code>version: 5.1.0</code>。</p><h3 id="1-2-从头安装"><a href="#1-2-从头安装" class="headerlink" title="1.2 从头安装"></a>1.2 从头安装</h3><ul><li>安装 nodejs，从nodejs 官网下载安装包 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">download page</a></li><li>安装git客户端 <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></li><li>安装Hexo <code>npm install -g hexo-cli</code><br>  <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo 中文安装文档</a><br>  <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo中文网站</a></li><li>安装NexT ，NexT是一个比较火的主题。<br>  按官网教程NexT安装即可，官网安装和配置教程比较美滋滋。<br>  <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a><br>  NexT Github  <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a><br>  另外，NexT开发者的博客（最近Next 变成组织了，祝贺）<a href="http://notes.iissnan.com" target="_blank" rel="noopener">http://notes.iissnan.com</a></li></ul><blockquote><p><strong>Ubuntu安装记录</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for Ubuntu16.04</span></span><br><span class="line">$ sudo apt install npm nodejs-legacy</span><br><span class="line">$ sudo npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p></blockquote><p>ok，安装完的目录结构。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules  <span class="comment"># nodejs的目录</span></span><br><span class="line">├── public        <span class="comment"># 输出网站目录</span></span><br><span class="line">├── scaffolds     <span class="comment"># hexo 的一些预设模版</span></span><br><span class="line">├── <span class="built_in">source</span>        <span class="comment"># 独立submodule</span></span><br><span class="line">├── themes        <span class="comment"># 主题 里面也有主题的配置文件不要与项目的配置文件搞混</span></span><br><span class="line">├── README.md</span><br><span class="line">├── _config.yml   <span class="comment"># 整个项目配置文件</span></span><br><span class="line">├── db.json</span><br><span class="line">├── index.html。  <span class="comment"># 用于跳转到public下</span></span><br><span class="line">└── package.json</span><br><span class="line"></span><br><span class="line">5 directories, 5 files</span><br></pre></td></tr></table></figure></p><p>我对博客项目的安排是这样的，总共有两个github项目，一个放素材，一个用hexo框架生成html文件。<br>在上面的文件目录只能够，将source 文件夹作为一个submodule 用 <a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="noopener">git submodule</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对于我来说</span></span><br><span class="line">$ <span class="built_in">cd</span> path/to/your/github.io/project</span><br><span class="line">$ git submodule add https://github.com/talengu/blog_source <span class="built_in">source</span></span><br></pre></td></tr></table></figure></p><p>在生成html，下面操作都在 <code>path/to/your/github.io/project</code>，hexo找不到node_modules<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clone 项目</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/talengu/talengu.github.io</span><br><span class="line">$ git submodule init</span><br><span class="line">$ git submodule update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到最新的submodule</span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="built_in">source</span></span><br><span class="line">$ git merge origin/master</span><br><span class="line">$ git submodule update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行npm按照，由于已经生成它会按照package.json文件自动安装</span></span><br><span class="line"><span class="comment"># 没有npm的话 安装 https://nodejs.org/en/download/</span></span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><p>对于在NexT主页上介绍的配置我就不写了，请参考<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a>  。</p><p><img src="/public/2016/12/22/build_blog/image-20181112002650646.png" alt="image-20181112002650646"></p><p>下面主要对重要的和我自己修改的部分说明没有的进行配置，值得注意的是我的NexT版本是<code>version: 5.1.0</code>。</p><h3 id="2-1-NexT官网的设置"><a href="#2-1-NexT官网的设置" class="headerlink" title="2.1 NexT官网的设置"></a>2.1 NexT官网的设置</h3><p><strong>MathJax</strong></p><p>编辑 <code>主题配置文件</code>， 将 <code>mathjax</code> 下的 <code>enable</code> 设定为 <code>true</code> 即可。 <code>cdn</code> 用于指定 MathJax 的脚本地址，默认是 MathJax 官方提供的 CDN 地址。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MathJax Support</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML</span></span><br></pre></td></tr></table></figure><p>下面测试<br><code>$\frac{d}{dx}c^n=nx^{n-1}$</code> $\frac{d}{dx}c^n=nx^{n-1}$</p><p><strong>Local Search</strong> (推荐)<br>本地内容搜索引擎。</p><ul><li><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p><p><code>npm install hexo-generator-searchdb --save</code></p></li><li><p>编辑 站点配置文件，新增以下内容到任意位置：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">   <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">   <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">   <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">   <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li><li><p>编辑 <code>主题配置文件</code>，启用本地搜索功能：</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-markdown图片"><a href="#2-2-markdown图片" class="headerlink" title="2.2 markdown图片"></a>2.2 markdown图片</h3><p>网上的图片链接可以直接使用，下面对本地图片使用进行配置。</p><p><strong>使用</strong></p><p>安装插件<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></p><p>在 <code>主题配置文件</code>（不是next的_config.yml）中设置<code>permalink: :year/:month/:day/:title/</code>，设置 <code>post_asset_folder: true</code>，这主要将文件拷贝到/public文件夹。其中permalink很关键，只能这样设置。</p><blockquote><p>图片必须放到和md文件名字一样的同名字文件夹。<br>如使用Typora软件写md的话，设置一下image保存路径即可，如下。</p><p><img src="/public/2016/12/22/build_blog/typora_image.png" alt="typora_image"></p></blockquote><h3 id="2-3-代码复制"><a href="#2-3-代码复制" class="headerlink" title="2.3 代码复制"></a>2.3 代码复制</h3><p>为了提高博客代码块的用户体验，仅仅代码高亮还不行，最好还能一键复制代码。故此文将讲述 Hexo NexT 主题博客的代码块复制功能配置。转 <a href="https://www.jianshu.com/p/3e9d614c1e77" target="_blank" rel="noopener">Hexo NexT 代码块复制功能</a></p><h4 id="2-3-1-下载-clipboard-js"><a href="#2-3-1-下载-clipboard-js" class="headerlink" title="2.3.1 下载 clipboard.js"></a>2.3.1 下载 clipboard.js</h4><p>三方插件 clipboardjs ，相关介绍和兼容性<a href="https://clipboardjs.com/" target="_blank" rel="noopener">它主页</a>或 <a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">github</a> 上看。</p><p><strong>下载地址：</strong></p><ul><li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.js" target="_blank" rel="noopener">clipboard.js</a></li><li><a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js" target="_blank" rel="noopener">clipboard.min.js</a> <strong>推荐</strong></li></ul><p>保存文件<code>clipboard.js / clipboard.min.js</code> ，目录如下：<br><code>.\themes\next\source\js\src</code></p><h4 id="2-3-2-clipboardjs-使用"><a href="#2-3-2-clipboardjs-使用" class="headerlink" title="2.3.2 clipboardjs 使用"></a>2.3.2 clipboardjs 使用</h4><p>也是在<code>.\themes\next\source\js\src</code>目录下，创建<code>clipboard-use.js</code>，文件内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; </span><br><span class="line">  <span class="comment">/* code */</span></span><br><span class="line">  <span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">''</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'  &lt;i class="fa fa-globe"&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;/button&gt;'</span>;</span><br><span class="line">    $(<span class="string">".highlight .code pre"</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">'.btn-copy'</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>在<code>.\themes\next\source\css\_custom\custom.styl</code>样式文件中添加下面代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">//代码块复制按钮</span><br><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">  //方便copy代码按钮（btn-copy）的定位</span><br><span class="line">  <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(#fcfcfc,#eee);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">    <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">    <span class="attribute">user-select</span>: none;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">-o-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-copy</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-3-3-引用"><a href="#2-3-3-引用" class="headerlink" title="2.3.3 引用"></a>2.3.3 引用</h4><p>在<code>.\themes\next\layout\_layout.swig</code>文件中，添加引用（注：在 swig 末尾或 body 结束标签（<code>&lt;/body&gt;</code>）之前添加）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 代码块复制功能 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clipboard.min.js&quot;&gt;&lt;/script&gt;  </span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clipboard-use.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>想看效果的可以去<a href="https://talengu.github.io/public/2016/12/22/build_blog/">我博客</a>看，截图如下:</p><p><img src="/public/2016/12/22/build_blog/image-20181112004401227.png" alt="image-20181112004401227"></p><blockquote><p>熟悉的也可以将<code>clipboard.min.js</code>和<code>clipboard-use.js</code>合并为一个文件，再在<code>.\themes\next\layout\_layout.swig</code>文件中使用。当然<code>clipboard.min.js</code>也可以直接用三方 cdn 的方式引入也行。</p></blockquote><h3 id="2-4-Gitment-评论功能"><a href="#2-4-Gitment-评论功能" class="headerlink" title="2.4 Gitment 评论功能"></a>2.4 Gitment 评论功能</h3><p> 集成 giment 评论系统的过程。gitment 把评论放到 github 的 issues 系统里，评论支持 md，比较适合程序员.<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装gitment</span><br><span class="line">$ npm install gitment --save</span><br></pre></td></tr></table></figure></p><h4 id="2-4-1-注册-OAuth-Application"><a href="#2-4-1-注册-OAuth-Application" class="headerlink" title="2.4.1 注册 OAuth Application"></a>2.4.1 注册 OAuth Application</h4><p>点击 <a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a> 注册，注意<code>Authorization callback URL</code>填自己的网站 url <code>https://xxxx.github.io/</code>. 记下 <strong>Client ID</strong> 和 <strong>Client Secret</strong>.</p><blockquote><p>在新版本NexT v6里面已经支持gitment了所以你只要在github上注册一下 OAuth Application ，填上<strong>Client ID</strong> 和 <strong>Client Secret</strong>.即可</p></blockquote><h4 id="2-4-2-修改themes-next-config-yml"><a href="#2-4-2-修改themes-next-config-yml" class="headerlink" title="2.4.2 修改themes/next/_config.yml"></a>2.4.2 修改<code>themes/next/_config.yml</code></h4><p>在其中添加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line">gitment:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID: yourid</span><br><span class="line">  repo: yourrepo</span><br><span class="line">  ClientID: yourid</span><br><span class="line">  ClientSecret: yoursecret</span><br><span class="line">  lazy: true</span><br></pre></td></tr></table></figure><p><strong>注意: 格式要正确，该空格的一定要空格。所有的 yourXXX 都换成自己的.</strong></p><p>在主题的<code>en.yml</code>增加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitmentbutton: Show comments from Gitment</span><br></pre></td></tr></table></figure><p><code>zh-Hans.yml</code>增加:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitmentbutton: 显示 Gitment 评论</span><br></pre></td></tr></table></figure><h4 id="2-4-3-修改主题layout-partials-comments-swig"><a href="#2-4-3-修改主题layout-partials-comments-swig" class="headerlink" title="2.4.3 修改主题layout/_partials/comments.swig"></a>2.4.3 修改主题<code>layout/_partials/comments.swig</code></h4><p>找到这个文件里的这两行:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.valine.appid and theme.valine.appkey %&#125;</span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"vcomments"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面是最后一个<code>elseif</code>分支，在下面加一个<code>elseif</code>分支:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitment.enable %&#125;</span><br><span class="line">   &#123;% if theme.gitment.lazy %&#125;</span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">"ShowGitment()"</span> <span class="attr">id</span>=<span class="string">"gitment-display-button"</span>&gt;</span>&#123;&#123;  __('gitmentbutton') &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitment-container"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   &#123;% else %&#125;</span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitment-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>加完之后下面的内容是原来的，保持不变:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-4-增加gitment-swig"><a href="#2-4-4-增加gitment-swig" class="headerlink" title="2.4.4 增加gitment.swig"></a>2.4.4 增加<code>gitment.swig</code></h4><p>在主题下<code>layout/_third-party/comments/</code>目录下中添加文件<code>gitment.swig</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.gitment.enable %&#125;</span><br><span class="line">   &#123;% set owner = theme.gitment.githubID %&#125;</span><br><span class="line">   &#123;% set repo = theme.gitment.repo %&#125;</span><br><span class="line">   &#123;% set cid = theme.gitment.ClientID %&#125;</span><br><span class="line">   &#123;% set cs = theme.gitment.ClientSecret %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   &#123;% if not theme.gitment.lazy %&#125;</span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> gitment = <span class="keyword">new</span> Gitment(&#123;</span></span><br><span class="line"><span class="javascript">               id: <span class="built_in">window</span>.location.pathname, </span></span><br><span class="line"><span class="javascript">               owner: <span class="string">'&#123;&#123;owner&#125;&#125;'</span>,</span></span><br><span class="line"><span class="javascript">               repo: <span class="string">'&#123;&#123;repo&#125;&#125;'</span>,</span></span><br><span class="line">               oauth: &#123;</span><br><span class="line"><span class="javascript">                   client_id: <span class="string">'&#123;&#123;cid&#125;&#125;'</span>,</span></span><br><span class="line"><span class="javascript">                   client_secret: <span class="string">'&#123;&#123;cs&#125;&#125;'</span>,</span></span><br><span class="line">               &#125;&#125;);</span><br><span class="line"><span class="javascript">           gitment.render(<span class="string">'gitment-container'</span>);</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   &#123;% else %&#125;</span><br><span class="line">       <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">           <span class="function"><span class="keyword">function</span> <span class="title">ShowGitment</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">document</span>.getElementById(<span class="string">"gitment-display-button"</span>).style.display = <span class="string">"none"</span>;</span></span><br><span class="line"><span class="javascript">               <span class="built_in">document</span>.getElementById(<span class="string">"gitment-container"</span>).style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="javascript">               <span class="keyword">var</span> gitment = <span class="keyword">new</span> Gitment(&#123;</span></span><br><span class="line"><span class="javascript">                   id: <span class="built_in">document</span>.location.href, </span></span><br><span class="line"><span class="javascript">                   owner: <span class="string">'&#123;&#123;owner&#125;&#125;'</span>,</span></span><br><span class="line"><span class="javascript">                   repo: <span class="string">'&#123;&#123;repo&#125;&#125;'</span>,</span></span><br><span class="line">                   oauth: &#123;</span><br><span class="line"><span class="javascript">                       client_id: <span class="string">'&#123;&#123;cid&#125;&#125;'</span>,</span></span><br><span class="line"><span class="javascript">                       client_secret: <span class="string">'&#123;&#123;cs&#125;&#125;'</span>,</span></span><br><span class="line">                   &#125;&#125;);</span><br><span class="line"><span class="javascript">               gitment.render(<span class="string">'gitment-container'</span>);</span></span><br><span class="line">           &#125;</span><br><span class="line">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>然后在主题下<code>layout/_third-party/comments/index.swig</code>文件中引入 gitment.swig 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;gitment.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-5-添加gitment-styl"><a href="#2-4-5-添加gitment-styl" class="headerlink" title="2.4.5 添加gitment.styl"></a>2.4.5 添加<code>gitment.styl</code></h4><p>在主题下<code>source/css/_common/components/third-party/</code>目录下添加<code>gitment.styl</code>文件，设置 button 的样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#gitment-display-button</span>&#123;</span><br><span class="line">     <span class="attribute">display</span>: inline-block;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#0a9caf</span>;</span><br><span class="line">     <span class="attribute">cursor</span>: pointer;</span><br><span class="line">     <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">     <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#0a9caf</span>;</span><br><span class="line">     <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="selector-id">#gitment-display-button</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">     <span class="attribute">background</span>: <span class="number">#0a9caf</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>然后在主题下<code>source/css/_common/components/third-party/third-party.styl</code>文件中引入相应的 CSS 样式即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;gitment&quot;;</span><br></pre></td></tr></table></figure><p>这样就 ok 了！</p><h4 id="2-4-6-易错点"><a href="#2-4-6-易错点" class="headerlink" title="2.4.6 易错点"></a>2.4.6 易错点</h4><ol><li>修改<code>themes/next/_config.yml</code>这个文件时，格式要正确。另外，repo 是你要想创建 issues 的仓库，完全可以跟博文所放的仓库不一个。id 就写自己的 github 用户名就可以，这个用户名跟 repo 必须匹配。</li><li>gitment 可能不支持链接地址里有中文，所以安装 gitment 前一定要参考<a href="http://yangq.me/post/19acb239.html" target="_blank" rel="noopener">前文</a>把链接持久化搞成全是英文的。</li><li>同一篇文章需要<a href="https://github.com/imsun/gitment/issues/68" target="_blank" rel="noopener">初始化 comment 两次的问题</a>，是因为 <a href="http://xxx.com/post/ab9bb85a.html" target="_blank" rel="noopener">http://xxx.com/post/ab9bb85a.html</a> 和点击<strong>阅读全文</strong>进去的链接 <a href="http://yangq.me/post/ab9bb85a.html#more" target="_blank" rel="noopener">http://xxx.com/post/ab9bb85a.html#more</a> 对 issues 来说是不同的，所以创建两次。解决方法就是<code>gitment.swig</code>里 id 弄成<code>window.location.pathname</code>而不是<code>document.location.href</code>。</li><li>初始化评论后，可以到 github 里自己放 issues 的仓库查看 issues 是否创建成功，有时候浏览器可能会有缓存依然提示你初始化评论。一般过个两分钟就显示正常了。</li></ol><h4 id="2-4-7-参考文档"><a href="#2-4-7-参考文档" class="headerlink" title="2.4.7 参考文档"></a>2.4.7 参考文档</h4><ol><li><a href="http://www.jianshu.com/p/10134c474991" target="_blank" rel="noopener">主要参考文档</a></li><li><a href="https://meesong.github.io/StaticBlog/2017/NexT+Gitment/" target="_blank" rel="noopener">一种相对简略的配置方式</a></li><li><a href="https://github.com/imsun/gitment/issues" target="_blank" rel="noopener">作者 issue</a></li></ol><h3 id="2-5-copyright文字添加"><a href="#2-5-copyright文字添加" class="headerlink" title="2.5 copyright文字添加"></a>2.5 copyright文字添加</h3><p><strong>效果</strong> 可以在md文件里面控制是否使用这个组建。</p><p><img src="/public/2016/12/22/build_blog/copyright.png" alt="copyright" title="copyright 效果"></p><p><strong>使用</strong></p><p>在md文件中的front-head部分，设置 <code>copyright:true</code>如下面。<br>设置next/_config.yml 文件，中设置<code>post_copyright</code> 的选项 <code>enable</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 个人主页搭建</span><br><span class="line">date: 2016-12-22 12:39:04</span><br><span class="line">categories:</span><br><span class="line">  - 博客搭建</span><br><span class="line">tags:</span><br><span class="line">  - Hexo</span><br><span class="line">comments: true</span><br><span class="line">copyright: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>说明</strong> 对原next的改变</p><p>对于一些原创的文本可以设置版权的声明，这个是next自带的，我进行了修改。next的_config.yml 文件，中设置<code>post_copyright</code> 的选项，启用它会对所有的页面添加，我多加了一个page的copyright使能判断。<br>对<code>next/layout/_macro/post-copyright.swig</code>修改。下面为修改后的文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.post_copyright.enable %&#125;</span><br><span class="line">&#123;% if page.copyright %&#125; <span class="comment">&lt;!-- 加上page md文件头部使能--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"post-copyright"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-author"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">      &#123;&#123; config.author &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-link"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- url的修正，可能要根据你的情况修改--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; config.url &#125;&#125;&#123;&#123; config.root &#125;&#125;&#123;&#123; post.path &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; post.title &#125;&#125;"</span>&gt;</span>&#123;&#123; config.url &#125;&#125;&#123;&#123; config.root &#125;&#125;&#123;&#123; post.path &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"post-copyright-license"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">strong</span>&gt;</span>&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">      &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-RSS-可选"><a href="#2-6-RSS-可选" class="headerlink" title="2.6 RSS (可选)"></a>2.6 RSS (可选)</h3><p>对一些网站的feed 的订阅 如rss，使用来进行订阅网站的rss，现在一些网站已经没有rss服务，google也停掉了google rss reader的项目，所以看你的喜好。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装hexo-generator-feed</span></span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line"><span class="comment"># 在_config.yml 启用feed</span></span><br></pre></td></tr></table></figure><blockquote><p>tips: 由于我博客在public文件夹下，导致hexo-generator-feed生成的地址不对。<br>在node_modules/hexo-generator-feed/lib/generator.js` 第35行下面添加一行:</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url += <span class="string">'public/'</span></span><br></pre></td></tr></table></figure><p>可用此脚本替换 <code>sed -i &quot;36c url += &#39;public/&#39;;&quot; node_modules/hexo-generator-feed/lib/generator.js</code></p><p>note: mac中手动修改，sed指令<a href="https://blog.csdn.net/bertie_Jnn/article/details/51219670" target="_blank" rel="noopener">不一样</a></p><h3 id="2-7-添加-fork-me-github"><a href="#2-7-添加-fork-me-github" class="headerlink" title="2.7 添加 fork me github"></a>2.7 添加 fork me github</h3><p>效果</p><p><img src="/public/2016/12/22/build_blog/image-20181122020200453.png" alt="image-20181122020200453"></p><p>在<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">GitHub Ribbons</a>或<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a>选择一款你喜欢的挂饰。比如下面的 github corners 在<code>your-url</code>填上你的 url 。</p><p><img src="/public/2016/12/22/build_blog/image-20181122020427248.png" alt="image-20181122020427248"></p><p>将刚刚复制的挂饰代码，添加到<code>themes/next/layout/_layout.swig</code>文件中，添加位置，放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下方如下图。</p><p><img src="/public/2016/12/22/build_blog/image-20181122021516212.png" alt="image-20181122021516212"></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO:"></a>TODO:</h2><p>这个TODO中放的是，我接下来对博客搭建这个项目，要做的事。平台的debug，内容的设计等等。</p><ul><li><p>[ ] 续写这篇博客，后面根据内容多少看要不要拆分这个博客。</p></li><li><p>[ ] 永久化连接 permalink<br>​    这permalink 和本地图片的拷贝复制有关不好改，下面是可能的方法，由于现在的评论还比较少，后面改进。<br>​    <a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">https://github.com/rozbo/hexo-abbrlink</a><br>​    <a href="https://github.com/EqualMa/hexo-plugin-permalink-pathed-title" target="_blank" rel="noopener">https://github.com/EqualMa/hexo-plugin-permalink-pathed-title</a></p></li><li><p>[ ] gitment object ProgressEvent #170<br>​    gitment 出现问题 作者好像放弃了，所以网上有一些解决方案，(gitment issue #170)(<a href="https://github.com/imsun/gitment/issues/170" target="_blank" rel="noopener">https://github.com/imsun/gitment/issues/170</a>)</p><p>​    临时使用<code>https://www.wenjunjiang.win/js/gitment.js</code> 这个gitment.js</p></li><li><p>[ ] 编写规范 得写一个博客的编写规范。分类、标签的使用，图片的使用，公式的使用等等</p></li></ul><h2 id="博客编写规范"><a href="#博客编写规范" class="headerlink" title="博客编写规范"></a>博客编写规范</h2><ul><li>github上有项目图片就从项目中链接过来，比如头像就是我github的头像</li><li>重要的图片存在本项目中</li><li>Typora的使用</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a> 好多新奇玩意儿～</p><p><a href="https://blog.csdn.net/yanzi1225627/article/details/77890414" target="_blank" rel="noopener">Hexo gitment</a></p><p>原文地址 </p><p>图标网站<br><a href="https://icons8.com/icon/new-icons/all" target="_blank" rel="noopener">icon8 web</a> 比较舒服<br><a href="http://fontawesome.io" target="_blank" rel="noopener">http://fontawesome.io</a> 标准风格<br><a href="https://www.easyicon.net/" target="_blank" rel="noopener">https://www.easyicon.net/</a> 国内的图标</p><p>【正在补充修改内容中～】</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;本文主要内容为博客搭建的记录与分享，我采用了Hexo博客框架，NexT主题和Gitment评论系统。本文中记录了我博客的安装流程和使用过程中的改进细节。&lt;/p&gt;
&lt;p&gt;对Next主题版本的一些说明：我使用的是&lt;code&gt;version: 5.1.0&lt;/code&gt;。而使用新版本的NexT v6 主题的同学，有些功能如gitment已经实现，可以直接使用V6。此V6版本对于图片的使用可能会出现问题。仅需看看我下面的2.2小节。&lt;/p&gt;
&lt;p&gt;有时间我会将我修改后的hexo Next theme 基于&lt;code&gt;version: 5.1.0&lt;/code&gt;主题，给个独立的git仓，放到github 上。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小技巧：在文章中可以使用&lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;手动进行截断，more上面部分将被放到主页上显示。此为Hexo 提供的方式。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面就是用&lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;截断的～～&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://talengu.github.io/public/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="https://talengu.github.io/public/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://talengu.github.io/public/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>srt中英文合并python脚本</title>
    <link href="https://talengu.github.io/public/2016/04/14/shells/youtube_src_combine/"/>
    <id>https://talengu.github.io/public/2016/04/14/shells/youtube_src_combine/</id>
    <published>2016-04-14T04:39:04.000Z</published>
    <updated>2016-04-14T04:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong></p><p>从Youtube上看只有中文或英文分开的字幕，下载好视频，想要中英文字幕。可从 <a href="http://mo.dbxdb.com/Yang/setting.html" target="_blank" rel="noopener">Getting Youtube subtitles</a> 获取中或英文字幕，然后将其合并，即成中英文双字幕。下面是python脚本。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">本脚本完成了中英文srt合并的功能</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">srt2lis</span><span class="params">(name)</span>:</span></span><br><span class="line">    lines = open(<span class="string">'srt/'</span>+name, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>).readlines()</span><br><span class="line">    lis = []</span><br><span class="line">    tmp = []</span><br><span class="line">    <span class="keyword">for</span> i, line <span class="keyword">in</span> enumerate(lines):</span><br><span class="line">        <span class="comment"># 以\n 结尾的一个时间点</span></span><br><span class="line">        <span class="keyword">if</span> line == <span class="string">'\n'</span>:</span><br><span class="line">            lis.append(tmp)</span><br><span class="line">            tmp = []</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp.append(line)</span><br><span class="line">    <span class="keyword">return</span> lis</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hebing</span><span class="params">(name_zh)</span>:</span></span><br><span class="line">    name_en = name_zh[:<span class="number">-7</span>] + <span class="string">'.srt'</span></span><br><span class="line">    out_name=<span class="string">'out/'</span>+name_en</span><br><span class="line">    f=open(out_name,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    lis_en=srt2lis(name_en)</span><br><span class="line">    lis_zh=srt2lis(name_zh)</span><br><span class="line">    <span class="keyword">for</span> i,item <span class="keyword">in</span> enumerate(lis_en):</span><br><span class="line">        print(item[<span class="number">0</span>])</span><br><span class="line">        f.write(item[<span class="number">0</span>])</span><br><span class="line">        f.write(item[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> lis_zh[i][<span class="number">2</span>:]:</span><br><span class="line">            f.write(line)</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> item[<span class="number">2</span>:]:</span><br><span class="line">            f.write(line)</span><br><span class="line">        f.write(<span class="string">'\n'</span>)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flis=os.listdir(<span class="string">'srt/'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'out'</span>):</span><br><span class="line">    os.mkdir(<span class="string">'out'</span>)</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> flis:</span><br><span class="line">    print(name)</span><br><span class="line">    <span class="keyword">if</span> name[<span class="number">-6</span>:<span class="number">-4</span>]==<span class="string">'zh'</span>:</span><br><span class="line">        hebing(name)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从Youtube上看只有中文或英文分开的字幕，下载好视频，想要中英文字幕。可从 &lt;a href=&quot;http://mo.dbxdb.com/Yang/setting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Getting Youtube subtitles&lt;/a&gt; 获取中或英文字幕，然后将其合并，即成中英文双字幕。下面是python脚本。&lt;/p&gt;
    
    </summary>
    
      <category term="常用脚本" scheme="https://talengu.github.io/public/categories/%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="python脚本" scheme="https://talengu.github.io/public/tags/python%E8%84%9A%E6%9C%AC/"/>
    
      <category term="YouTube字幕合并" scheme="https://talengu.github.io/public/tags/YouTube%E5%AD%97%E5%B9%95%E5%90%88%E5%B9%B6/"/>
    
      <category term="src" scheme="https://talengu.github.io/public/tags/src/"/>
    
  </entry>
  
  <entry>
    <title>DSP滤波程序</title>
    <link href="https://talengu.github.io/public/2015/06/14/dsp/dsp_filter/"/>
    <id>https://talengu.github.io/public/2015/06/14/dsp/dsp_filter/</id>
    <published>2015-06-14T04:39:04.000Z</published>
    <updated>2015-06-14T04:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>通过matlab对数字信号进行滤波器的设计后，我们要将设计好的参数放到嵌入式系统中进行滤波。本文就是一个滤波程序。</p><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="comment">//z变换转成差分方程然后迭代</span></span><br><span class="line"><span class="comment">//Talen @UESTC 2015.6.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">float</span> *x,<span class="keyword">int</span> len)</span></span>;</span><br><span class="line"><span class="comment">//取后第1-n个</span></span><br><span class="line"><span class="function"><span class="keyword">float</span>* <span class="title">aminusone</span><span class="params">(<span class="keyword">float</span>* a,<span class="keyword">int</span> ar)</span></span>;</span><br><span class="line"><span class="comment">//差分中间值</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">gtcet</span><span class="params">(<span class="keyword">float</span> *t,<span class="keyword">float</span> *x,<span class="keyword">int</span> xr,<span class="keyword">int</span> s,<span class="keyword">int</span> d)</span></span>;</span><br><span class="line"><span class="comment">//主要滤波函数</span></span><br><span class="line"><span class="function"><span class="keyword">float</span>* <span class="title">gfilter</span><span class="params">(<span class="keyword">float</span> *b,<span class="keyword">int</span> br,<span class="keyword">float</span> *a,<span class="keyword">int</span> ar,<span class="keyword">float</span> *x,<span class="keyword">int</span> xr)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">float</span> *x,<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;<span class="built_in">printf</span>(<span class="string">"%9.3f "</span>,x[i]);</span><br><span class="line">    <span class="keyword">if</span>((i%<span class="number">7</span>)==<span class="number">6</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);&#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span>* <span class="title">aminusone</span><span class="params">(<span class="keyword">float</span>* a,<span class="keyword">int</span> ar)</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span>* am = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>((ar<span class="number">-1</span>) * <span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ar<span class="number">-1</span>;i++)</span><br><span class="line">        am[i]=a[i+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> am;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">gtcet</span><span class="params">(<span class="keyword">float</span> *t,<span class="keyword">float</span> *x,<span class="keyword">int</span> xr,<span class="keyword">int</span> s,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function">    <span class="comment">//x[]数据源 r数据源长度 s开始点(0开始) d数据长度</span></span></span><br><span class="line"><span class="function">    <span class="comment">//t可以是a[] b[] 长度与d一样</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span>* w = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(d * <span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp=s-i;</span><br><span class="line">        <span class="keyword">if</span>(temp&gt;=<span class="number">0</span>&amp;&amp;temp&lt;xr)</span><br><span class="line">            w[i]=x[temp];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            w[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//核心语句</span></span><br><span class="line">        sum=sum+w[i]*t[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span>* <span class="title">gfilter</span><span class="params">(<span class="keyword">float</span> *b,<span class="keyword">int</span> br,<span class="keyword">float</span> *a,<span class="keyword">int</span> ar,<span class="keyword">float</span> *x,<span class="keyword">int</span> xr)</span></span></span><br><span class="line"><span class="function">    <span class="comment">//b a x br b的长度 ar a的长度 xr数据长度</span></span></span><br><span class="line"><span class="function">    <span class="comment">//use本程序定义的gtcet()和aminusone()</span></span></span><br><span class="line"><span class="function">    <span class="comment">//输入数据，b，a，x得出滤波后的y</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span>* y = (<span class="keyword">float</span> *)<span class="built_in">malloc</span>(xr* <span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> ti=<span class="number">0</span>;ti&lt;xr;ti++)</span><br><span class="line">        y[ti]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;xr;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//最核心语句，此处迭代</span></span><br><span class="line">        y[i]=gtcet(b,x,xr,i,br)-gtcet(aminusone(a,ar),y,xr,i<span class="number">-1</span>,ar<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//input 源数据 可修改</span></span><br><span class="line">    <span class="comment">////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="keyword">float</span> x[<span class="number">120</span>]=&#123;<span class="number">-4</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">-4</span>, <span class="number">-6</span>, <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-6</span>, <span class="number">-6</span>, <span class="number">-4</span>, <span class="number">-4</span>,\</span><br><span class="line">        <span class="number">-6</span>, <span class="number">-6</span>, <span class="number">-2</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">-16</span>, <span class="number">-38</span>, <span class="number">-60</span>, <span class="number">-84</span>,\</span><br><span class="line">        <span class="number">-90</span>, <span class="number">-66</span>, <span class="number">-32</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">-4</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">6</span>,\</span><br><span class="line">        <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-2</span>,\</span><br><span class="line">        <span class="number">-2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">0</span>,\</span><br><span class="line">        <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-2</span>,\</span><br><span class="line">        <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-4</span>, <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-6</span>, <span class="number">-6</span>,\</span><br><span class="line">        <span class="number">-4</span>, <span class="number">-4</span>, <span class="number">8</span>, <span class="number">-10</span>, <span class="number">-8</span>, <span class="number">-6</span>, <span class="number">-6</span>, <span class="number">-8</span>, <span class="number">-12</span>, <span class="number">-10</span>,\</span><br><span class="line">        <span class="number">-8</span>, <span class="number">-8</span>, <span class="number">-10</span>, <span class="number">-12</span>, <span class="number">-10</span>, <span class="number">-8</span>, <span class="number">-8</span>, <span class="number">-10</span>, <span class="number">-10</span>,\</span><br><span class="line">        <span class="number">-8</span>, <span class="number">-6</span>, <span class="number">-6</span>, <span class="number">-8</span>, <span class="number">-8</span>, <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-4</span>, <span class="number">-4</span>,\</span><br><span class="line">        <span class="number">0</span>, <span class="number">0</span>, <span class="number">-2</span>, <span class="number">-4</span>, <span class="number">-2</span>, <span class="number">-2</span>, <span class="number">0</span>, <span class="number">-4</span>&#125;;</span><br><span class="line">    <span class="comment">//参数</span></span><br><span class="line">    <span class="keyword">float</span> b[<span class="number">7</span>]=&#123; <span class="number">0.0007</span>,<span class="number">0.0044</span>,<span class="number">0.0111</span>,<span class="number">0.0148</span>,<span class="number">0.0111</span>,<span class="number">0.0044</span>,<span class="number">0.0007</span>&#125;;</span><br><span class="line">    <span class="keyword">float</span> a[<span class="number">7</span>]=&#123; <span class="number">1.0000</span>,<span class="number">-3.1836</span>,<span class="number">4.6222</span>,<span class="number">-3.7795</span>,<span class="number">1.8136</span>,<span class="number">-0.4800</span>,<span class="number">0.0544</span>&#125;;</span><br><span class="line">    <span class="comment">//////////////////////////////////////////////////////////////////</span></span><br><span class="line">    <span class="comment">//不要修改</span></span><br><span class="line">    <span class="keyword">int</span> xr=<span class="keyword">sizeof</span>(x)/<span class="keyword">sizeof</span>(<span class="keyword">float</span>);</span><br><span class="line">    <span class="keyword">int</span> br=<span class="keyword">sizeof</span>(b)/<span class="keyword">sizeof</span>(<span class="keyword">float</span>);</span><br><span class="line">    <span class="keyword">int</span> ar=<span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(<span class="keyword">float</span>);</span><br><span class="line">    <span class="comment">//output 滤波后数据</span></span><br><span class="line">    <span class="keyword">float</span> *y;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"参数b：\n"</span>);print(b,br);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"参数a：\n"</span>);print(a,ar);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"原数据：\n"</span>);print(x,xr);</span><br><span class="line"></span><br><span class="line">    y=gfilter(b,br,a,ar,x,xr);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"滤波后数据：\n"</span>);print(y,xr);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;通过matlab对数字信号进行滤波器的设计后，我们要将设计好的参数放到嵌入式系统中进行滤波。本文就是一个滤波程序。&lt;/p&gt;
    
    </summary>
    
      <category term="数字信号处理" scheme="https://talengu.github.io/public/categories/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    
    
      <category term="DSP" scheme="https://talengu.github.io/public/tags/DSP/"/>
    
      <category term="filter" scheme="https://talengu.github.io/public/tags/filter/"/>
    
  </entry>
  
  <entry>
    <title>Windows笔记本开共享wifi</title>
    <link href="https://talengu.github.io/public/2015/04/14/shells/share_win_wifi/"/>
    <id>https://talengu.github.io/public/2015/04/14/shells/share_win_wifi/</id>
    <published>2015-04-14T04:39:04.000Z</published>
    <updated>2015-04-14T04:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>前言</strong><br>网上有很多用笔记本设置无线热点的批处理，我中和了一下。复制下面代码到记事本，改后缀为bat就行了。其中，mssid和mkey可自定义</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set mssid=GTC</span><br><span class="line">::网络名字</span><br><span class="line">set mkey=123456789</span><br><span class="line">::大于八位密码</span><br><span class="line"></span><br><span class="line">echo ***********************************************</span><br><span class="line">echo              打开承载网络  1</span><br><span class="line">echo              关闭承载网络  2</span><br><span class="line">echo              承载网络信息  3</span><br><span class="line">echo              设置网络信息  set</span><br><span class="line">echo              退出          e</span><br><span class="line">echo        （网络名字、密码可在源文件中改）</span><br><span class="line">echo           （请以管理员身份打开!!!）</span><br><span class="line">echo ***********************************************</span><br><span class="line">:start</span><br><span class="line">set /p var=请选择:</span><br><span class="line">if %var%==1 netsh wlan start hostednetwork &amp;&amp; echo 网络名字:%mssid% 密码:%mkey% &amp;&amp; GOTO start</span><br><span class="line">if %var%==2 netsh wlan stop hostednetwork &amp;&amp; GOTO start</span><br><span class="line">if %var%==3 netsh wlan show hostednetwork &amp;&amp; echo 网络名字:%mssid% 密码:%mkey% &amp;&amp; GOTO start</span><br><span class="line">if %var%==set netsh wlan set hostednetwork mode=allow ssid=%mssid% key=%mkey% &amp;&amp; echo 网络名字:%mssid% 密码:%mkey% &amp;&amp; GOTO start</span><br><span class="line">if %var%==e pause</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;br&gt;网上有很多用笔记本设置无线热点的批处理，我中和了一下。复制下面代码到记事本，改后缀为bat就行了。其中，mssid和mkey可自定义&lt;/p&gt;
    
    </summary>
    
      <category term="常用脚本" scheme="https://talengu.github.io/public/categories/%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="Windows脚本" scheme="https://talengu.github.io/public/tags/Windows%E8%84%9A%E6%9C%AC/"/>
    
      <category term="共享wifi" scheme="https://talengu.github.io/public/tags/%E5%85%B1%E4%BA%ABwifi/"/>
    
      <category term="cmd" scheme="https://talengu.github.io/public/tags/cmd/"/>
    
  </entry>
  
</feed>
